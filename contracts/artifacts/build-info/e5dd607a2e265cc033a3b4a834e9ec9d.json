{
	"id": "e5dd607a2e265cc033a3b4a834e9ec9d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"launchpad/contracts/launchpadChild.sol": {
				"content": "pragma solidity =0.8.7;\n\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/utils/Address.sol\";\nimport \"./IUniswapV2Router.sol\";\nimport \"./IUniswapV2Factory.sol\";\nimport \"./ILaunchpadMaster.sol\";\n\n// V 0.1\ncontract LaunchpadChild is ReentrancyGuard, Pausable {\n  // Inputs\n  uint256 public tokenTotalAmount; // How many tokens are to be sent to the contract\n  uint256 public listingTokensPerOneEth; // At which price should the tokens be listed?\n  uint256 public liquidityShareBP; // Share of the raised eth to send to liquidity (100 = 1%)\n  uint256 public hardcap; // Hardcap for the sale\n  uint256 public softcap; // Softcap for the sale\n  uint256 public feeBP; // Fees in basis points (100 = 1%)\n  uint256 public startTime; // When will the sale start (unix timestamp)\n  uint256 public endTime; // When will the sale end (unix timestamp)\n  uint256 public wlStartTime; // When does the whitelist start\n\n  // Utils variables\n  uint256 public saleTokensPerOneEth; // How much tokens do I get for 1 ETH bought\n  uint256 public liquidityLockDuration; // How long will the liquidity be locked after the sale ends\n  uint256 public userVestDuration; // How long will the user need to vest after the sale ends\n  uint256 public teamVestDuration; // How long will the team need to vest after the sale ends\n\n  uint256 public maxBuyPerUser; // Max amount in eth allowed to buy\n  uint256 public minBuyPerUser; // Min amount in eth allowed to buy\n  uint256 public tokenAmountForSale; // How many tokens are actually for sale\n  uint256 public tokenAmountForLiquidity; // How many tokens are actually for liquidity\n\n  bool public userVestEnabled; // Are the tokens vested for the users?\n  bool public teamVestEnabled; // Are the tokens vested for the team?\n  bool public whitelistEnabled; // Do we have a whitelist?\n\n  address public deadAddress = 0x000000000000000000000000000000000000dEaD;\n\n  address public signer; // Who is the signer if the whitelist is enabled?\n  ILaunchpadMaster public master; // Who is the master?\n  // TODO: Remove comment\n  // IMasterLaunchpad public master;                 // Who is the creator of the contract?\n  IUniswapV2Router02 public router; // UniswapV2-like router used to add liquidity\n  IUniswapV2Factory public factory; // UniswapV2-like factory to create the LP\n\n  // Medatadata\n  IERC20 public token; // Instance of the token sold on presale\n  uint256 public saleId; // saleId, to identify the sale\n  string public description; // What to show on the front end\n  string public imageUrl; // Image url for the front end\n\n  address payable public recipient; // Who gets the fees?\n  address payable public saleInitiator; // Who has started the sale?\n  uint256 public totalBuyEth; // How many tokens were bought so far?\n\n  bool public saleFinalized; // Is sale ready for the launch?\n  bool public saleEnded; // Is the sale ended and tokens are ready to be claimed?\n  bool public saleAborted; // Allows the dev to abort the sale and the users to get their eth back\n\n  mapping(address => address) public usersVestingWallets; // Vesting wallet of each user (to be confirmed)\n  mapping(address => uint256) public userBuyAmount; // Eth pledged by each user\n\n  event Debug(uint256 amount);\n\n  constructor(\n    // Metadata\n    address _token,\n    string memory _description,\n    string memory _imageUrl,\n    // uint _saleId, // use master interface\n    // Sale inputs\n    // TODO: use an array\n    // We use an array to solve stackTooDeep error\n    uint256[8] memory _saleInputs,\n    // uint _tokenTotalAmount,\n    // uint _listingTokensPerOneEth,\n    // uint _liquidityShareBP,\n    // uint _hardcap,\n    // uint _startTime,\n    // uint _endTime,\n    // Miscellaneous\n    bool _whitelistEnabled,\n    uint256 _wlStartTime,\n    uint256 _liquidityLockDuration,\n    address _router,\n    address _saleInitiator\n  ) {\n    // Metadata\n    token = IERC20(_token);\n    description = _description;\n    imageUrl = _imageUrl;\n\n    // Sale parameters\n    tokenTotalAmount = _saleInputs[0];\n    listingTokensPerOneEth = _saleInputs[1];\n    liquidityShareBP = _saleInputs[2];\n    hardcap = _saleInputs[3];\n    startTime = _saleInputs[4];\n    endTime = _saleInputs[5];\n    maxBuyPerUser = _saleInputs[6];\n    minBuyPerUser = _saleInputs[7];\n    require(minBuyPerUser < hardcap, \"min buy per user is higher than hardcap\");\n\n    master = ILaunchpadMaster(msg.sender);\n    feeBP = master.feesBP();\n\n    saleTokensPerOneEth =\n      ((tokenTotalAmount * (10_000 - liquidityShareBP)) / 10_000) /\n      hardcap;\n\n    softcap = hardcap / 2;\n    tokenAmountForLiquidity = (tokenTotalAmount * liquidityShareBP) / 10_000;\n    tokenAmountForSale = tokenTotalAmount - tokenAmountForLiquidity;\n    // TODO: Fix the math\n    // basically, Is the amount of ETH reserved for liquidity given the listing price inferior to the amount of ETH raised?\n    require(\n      tokenAmountForLiquidity / listingTokensPerOneEth <\n        ((hardcap * (10_000 - feeBP)) / 10_000),\n      \"not enough ETH for liquidity, increase listing price or decrease liquidity share\"\n    );\n\n    liquidityLockDuration = _liquidityLockDuration;\n    // userVestDuration = userVestDuration;\n    // teamVestDuration = userVestDuration;\n    // userVestEnabled = userVestDuration == 0 ? false : true;\n    // teamVestEnabled = teamVestDuration == 0 ? false : true;\n\n    whitelistEnabled = _whitelistEnabled;\n    wlStartTime = _wlStartTime;\n    require(wlStartTime < startTime);\n\n    saleId = master.currentSaleId();\n\n    if (whitelistEnabled) {\n      signer = master.saleToSigner(saleId);\n    }\n\n    recipient = payable(master.feesWallet());\n    saleInitiator = payable(_saleInitiator);\n\n    router = IUniswapV2Router02(_router);\n\n    // TODO: Need to add the user vesting wallet when developped\n  }\n\n  // TODO: add pauser\n  // TODO: add setters\n\n  modifier onlyInitiator() {\n    require(saleInitiator == msg.sender, \"caller is not the initiator\");\n    _;\n  }\n\n  function totalBuyTokens() public view returns (uint256) {\n    return (totalBuyEth * saleTokensPerOneEth);\n  }\n\n  // Allows the initiator to abort the sale, if claiming hasn't started\n  // This will allow users to claim their ETH back\n  // Deploy fee will not be reimbursed\n  function abortSale() external onlyInitiator {\n    require(!saleEnded, \"claiming has already started\");\n    require(!saleAborted, \"sale already aborted\");\n    saleAborted = true;\n  }\n\n  // When everything is ready\n  function finalizeSale() external onlyInitiator {\n    // Additionnal checks just to be safe\n    require(!saleAborted, \"sale was aborted\");\n    require(\n      token.balanceOf(address(this)) >= tokenTotalAmount,\n      \"insufficient amount of tokens sent to the address\"\n    );\n    saleFinalized = true;\n  }\n\n  function buyTokensPublic() external payable nonReentrant whenNotPaused {\n    require(!saleAborted, \"sale was aborted\");\n    require(saleFinalized, \"sale hasn't been finalized yet\");\n    require(block.timestamp > startTime, \"sale hasn't started yet\");\n    require(block.timestamp < endTime, \"sale has ended\");\n    require(\n      msg.value + userBuyAmount[msg.sender] <= maxBuyPerUser,\n      \"you're trying to buy too many tokens\"\n    );\n    require(msg.value >= minBuyPerUser, \"you're not sending enough\");\n    require(\n      msg.value * saleTokensPerOneEth + totalBuyTokens() <= tokenAmountForSale,\n      \"there aren't enough tokens left. Try a lower amount\"\n    );\n    require(\n      totalBuyEth + msg.value <= hardcap,\n      \"hardcap is reached. Try a lower amount\"\n    );\n\n    userBuyAmount[msg.sender] = userBuyAmount[msg.sender] + msg.value;\n    totalBuyEth = totalBuyEth + msg.value;\n  }\n\n  function buyTokensWhitelist(bytes memory signature)\n    external\n    payable\n    nonReentrant\n    whenNotPaused\n  {\n    require(verify(signature, msg.sender, saleId, block.chainid));\n    require(!saleAborted, \"sale was aborted\");\n    require(saleFinalized, \"sale hasn't been finalized yet\");\n    require(block.timestamp < endTime, \"sale has ended\");\n    require(block.timestamp > wlStartTime, \"sale hasn't started yet\");\n    require(\n      msg.value + userBuyAmount[msg.sender] <= maxBuyPerUser,\n      \"you're trying to buy too many tokens\"\n    );\n    require(msg.value >= minBuyPerUser, \"you're not sending enough\");\n    require(\n      msg.value * saleTokensPerOneEth + totalBuyTokens() <= tokenAmountForSale,\n      \"there aren't enough tokens left. Try a lower amount\"\n    );\n    require(\n      totalBuyEth + msg.value <= hardcap,\n      \"hardcap is reached. Try a lower amount\"\n    );\n\n    userBuyAmount[msg.sender] = userBuyAmount[msg.sender] + msg.value;\n    totalBuyEth = totalBuyEth + msg.value;\n  }\n\n  function verify(\n    bytes memory signature,\n    address _target,\n    uint256 _saleId,\n    uint256 _chainId\n  ) public view returns (bool) {\n    uint8 v;\n    bytes32 r;\n    bytes32 s;\n\n    (v, r, s) = splitSignature(signature);\n\n    bytes32 payloadHash = keccak256(\n      abi.encode(_target, _saleId, _chainId)\n    );\n\n    bytes32 messageHash = keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", payloadHash));\n    return(signer == ecrecover(messageHash, v, r, s));\n  }\n\n  function splitSignature(bytes memory sig)\n    public\n    pure\n    returns (\n      uint8,\n      bytes32,\n      bytes32\n    )\n  {\n    require(sig.length == 65);\n\n    bytes32 r;\n    bytes32 s;\n    uint8 v;\n\n    assembly {\n      // first 32 bytes, after the length prefix\n      r := mload(add(sig, 32))\n      // second 32 bytes\n      s := mload(add(sig, 64))\n      // final byte (first byte of the next 32 bytes)\n      v := byte(0, mload(add(sig, 96)))\n    }\n\n    return (v, r, s);\n  }\n\n  function claimTokens() external nonReentrant {\n    require(\n      !saleAborted,\n      \"sale was aborted, please use claimStaleEth() function\"\n    );\n    require(userBuyAmount[msg.sender] > 0, \"user hasn't any tokens to claim\");\n    require(saleEnded, \"initiator hasn't ended the sale yet\");\n\n    uint256 amountToClaim = userBuyAmount[msg.sender] * saleTokensPerOneEth;\n    userBuyAmount[msg.sender] = 0;\n    emit Debug(amountToClaim);\n    token.transfer(msg.sender, amountToClaim);\n  }\n\n  // This function allows users to claim the eth provided to a sale if the owner didn't ended it after 24h.\n  function claimStaleEth() external nonReentrant {\n    require(!saleEnded, \"sale has been ended : you can claim\");\n\n    // If the sale was aborted, you can claim back you eth\n    if (saleAborted) {\n      _claimStaleEth();\n    }\n\n    // If we didn't reach sofcap after the end of the sale, you can claim back\n    if (totalBuyEth < softcap && block.timestamp > endTime) {\n      _claimStaleEth();\n    }\n\n    // If the owner didn't close a successfull sale after 24h, you can claim back\n    if (totalBuyEth > softcap && block.timestamp > endTime + 86400) {\n      _claimStaleEth();\n    }\n  }\n\n  function _claimStaleEth() private {\n    require(userBuyAmount[msg.sender] > 0, \"user hasn't any tokens to claim\");\n    uint256 amountToClaim = userBuyAmount[msg.sender];\n    userBuyAmount[msg.sender] = 0;\n    msg.sender.call{value: amountToClaim}(\"\");\n  }\n\n  // Use this function to close the sale and allow users to claim their tokens\n  // This will prevent from buying more, add liquidity to the pool,\n  // and send the remaining presale funds to the initiator of the sale\n  function endSaleAllowClaim() external onlyInitiator nonReentrant {\n    require(!saleAborted, \"sale was aborted\");\n    require(saleFinalized, \"sale wasn't finalized\");\n    require(totalBuyEth > softcap, \"not enough tokens were sold\");\n    require(!saleEnded, \"sale was already ended\");\n\n    saleEnded = true;\n\n    // We add liquidity on the fly\n    uint256 ethAmountForLiquidity = totalBuyTokens() / listingTokensPerOneEth;\n    // TODO: Need to test this for overflow risk\n    uint256 actualTokenAmountForLiquidity = (tokenAmountForLiquidity *\n      totalBuyEth) / hardcap;\n\n    token.approve(address(router), actualTokenAmountForLiquidity);\n    router.addLiquidityETH{value: ethAmountForLiquidity}(\n      address(token),\n      actualTokenAmountForLiquidity,\n      0,\n      0,\n      address(this),\n      block.timestamp + 1000\n    );\n    master.feesWallet().call{value: ((totalBuyEth * feeBP) / 10_000)}(\"\");\n    saleInitiator.call{value: address(this).balance}(\"\");\n  }\n}\n"
			},
			"launchpad/contracts/ILaunchpadMaster.sol": {
				"content": "pragma solidity =0.8.7;\n\ninterface ILaunchpadMaster {\n\n    function saleToSigner(uint256) external view returns(address);\n    function feesWallet() external view returns(address);\n    function addressToSaleId(address) external view returns(uint256);\n    function saleIdToAddress(uint256) external view returns(address);\n    function feesBP() external view returns(uint256);\n    function currentSaleId() external view returns(uint256);\n    \n}   "
			},
			"launchpad/contracts/IUniswapV2Factory.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity =0.8.7;\n\ninterface IUniswapV2Factory {\n    event PairCreated(address indexed token0, address indexed token1, address pair, uint);\n\n    function feeTo() external view returns (address);\n    function feeToSetter() external view returns (address);\n\n    function getPair(address tokenA, address tokenB) external view returns (address pair);\n    function allPairs(uint) external view returns (address pair);\n    function allPairsLength() external view returns (uint);\n\n    function createPair(address tokenA, address tokenB) external returns (address pair);\n\n    function setFeeTo(address) external;\n    function setFeeToSetter(address) external;\n}\n"
			},
			"launchpad/contracts/IUniswapV2Router.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity =0.8.7;\n\ninterface IUniswapV2Router01 {\n    function factory() external pure returns (address);\n    function WETH() external pure returns (address);\n\n    function addLiquidity(\n        address tokenA,\n        address tokenB,\n        uint amountADesired,\n        uint amountBDesired,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountA, uint amountB, uint liquidity);\n    function addLiquidityETH(\n        address token,\n        uint amountTokenDesired,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\n    function removeLiquidity(\n        address tokenA,\n        address tokenB,\n        uint liquidity,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountA, uint amountB);\n    function removeLiquidityETH(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountToken, uint amountETH);\n    function removeLiquidityWithPermit(\n        address tokenA,\n        address tokenB,\n        uint liquidity,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountA, uint amountB);\n    function removeLiquidityETHWithPermit(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountToken, uint amountETH);\n    function swapExactTokensForTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external returns (uint[] memory amounts);\n    function swapTokensForExactTokens(\n        uint amountOut,\n        uint amountInMax,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external returns (uint[] memory amounts);\n    function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\n        external\n        payable\n        returns (uint[] memory amounts);\n    function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\n        external\n        returns (uint[] memory amounts);\n    function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\n        external\n        returns (uint[] memory amounts);\n    function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\n        external\n        payable\n        returns (uint[] memory amounts);\n\n    function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\n    function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\n    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\n    function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\n}\n\n\n\n// pragma solidity >=0.6.2;\n\ninterface IUniswapV2Router02 is IUniswapV2Router01 {\n    function removeLiquidityETHSupportingFeeOnTransferTokens(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountETH);\n    function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountETH);\n\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external;\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external payable;\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        require(!paused(), \"Pausable: paused\");\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        require(paused(), \"Pausable: not paused\");\n        _;\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControl.sol\";\nimport \"../utils/Context.sol\";\nimport \"../utils/Strings.sol\";\nimport \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address => bool) members;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with a standardized message including the required role.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     *\n     * _Available since v4.1._\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role, _msgSender());\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\n        return _roles[role].members[account];\n    }\n\n    /**\n     * @dev Revert with a standard message if `account` is missing `role`.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert(\n                string(\n                    abi.encodePacked(\n                        \"AccessControl: account \",\n                        Strings.toHexString(uint160(account), 20),\n                        \" is missing role \",\n                        Strings.toHexString(uint256(role), 32)\n                    )\n                )\n            );\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) public virtual override {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     *\n     * NOTE: This function is deprecated in favor of {_grantRole}.\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * Internal function without access restriction.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual {\n        if (!hasRole(role, account)) {\n            _roles[role].members[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * Internal function without access restriction.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual {\n        if (hasRole(role, account)) {\n            _roles[role].members[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        if (value == 0) {\n            return \"0x00\";\n        }\n        uint256 temp = value;\n        uint256 length = 0;\n        while (temp != 0) {\n            length++;\n            temp >>= 8;\n        }\n        return toHexString(value, length);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.",
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.\",\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x4a1a0ba12bf1a33f10d9fe226278cf59675c0b929d29e4da99658a079b27fb84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bda1319db846d6d6f92d8a57a9bdee8bde1dc39aa7546165791692c24dd6f30a\",\"dweb:/ipfs/Qma5oZ7DmbdAjd8mpiW7mx896PDtwsQtCQ2hj9Upf7b7JK\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0xe68ed7fb8766ed1e888291f881e36b616037f852b37d96877045319ad298ba87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d491a2ca79dbf44bc02e876e21a5847a2cbcc011188532ad8662cdc1c134a4e\",\"dweb:/ipfs/QmUQXhSV8ZvHLzfdG89ZNSh1nLrAYyjnNBLznJGwGcwVk8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:8255  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:8255  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212203a7a94cc23a4a11dc63306218f061cc43ef4b659696daad48b230124a74884a064736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203a7a94cc23a4a11dc63306218f061cc43ef4b659696daad48b230124a74884a064736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE PUSH27 0x94CC23A4A11DC63306218F061CC43EF4B659696DAAD48B230124A7 BASEFEE DUP5 LOG0 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "194:8061:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:8061:5;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203a7a94cc23a4a11dc63306218f061cc43ef4b659696daad48b230124a74884a064736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE PUSH27 0x94CC23A4A11DC63306218F061CC43EF4B659696DAAD48B230124A7 BASEFEE DUP5 LOG0 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "194:8061:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203a7a94cc23a4a11dc63306218f061cc43ef4b659696daad48b230124a74884a064736f6c63430008070033",
									".code": [
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":146:2031  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":146:2031  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b0ecc4410f14c913f4bd9e39cfd4735ca5a997cb1d168663f6b238bd5adff95864736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b0ecc4410f14c913f4bd9e39cfd4735ca5a997cb1d168663f6b238bd5adff95864736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB0 0xEC 0xC4 COINBASE 0xF EQ 0xC9 SGT DELEGATECALL 0xBD SWAP15 CODECOPY 0xCF 0xD4 PUSH20 0x5CA5A997CB1D168663F6B238BD5ADFF95864736F PUSH13 0x63430008070033000000000000 ",
							"sourceMap": "146:1885:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;146:1885:7;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b0ecc4410f14c913f4bd9e39cfd4735ca5a997cb1d168663f6b238bd5adff95864736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB0 0xEC 0xC4 COINBASE 0xF EQ 0xC9 SGT DELEGATECALL 0xBD SWAP15 CODECOPY 0xCF 0xD4 PUSH20 0x5CA5A997CB1D168663F6B238BD5ADFF95864736F PUSH13 0x63430008070033000000000000 ",
							"sourceMap": "146:1885:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b0ecc4410f14c913f4bd9e39cfd4735ca5a997cb1d168663f6b238bd5adff95864736f6c63430008070033",
									".code": [
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"launchpad/contracts/ILaunchpadMaster.sol": {
				"ILaunchpadMaster": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "addressToSaleId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentSaleId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feesBP",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feesWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "saleIdToAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "saleToSigner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addressToSaleId(address)": "dafdeb1a",
							"currentSaleId()": "2e849894",
							"feesBP()": "73dc1349",
							"feesWallet()": "7e44d2cc",
							"saleIdToAddress(uint256)": "e7689193",
							"saleToSigner(uint256)": "b1d2ef90"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToSaleId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentSaleId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feesBP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feesWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"saleIdToAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"saleToSigner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"launchpad/contracts/ILaunchpadMaster.sol\":\"ILaunchpadMaster\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"launchpad/contracts/ILaunchpadMaster.sol\":{\"keccak256\":\"0x3a890dc151df49e903831be104d05e310a19263199554ea63337ea9ff9aca1e6\",\"urls\":[\"bzz-raw://3eb186c4b90932ac4704ab62cd43b2ce115108f35868180f82b47f38c0c5d59a\",\"dweb:/ipfs/QmTnuX4SYL2BygAYJoKHNoKn2yvkH49pWFkinPn2yp8NN8\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"launchpad/contracts/IUniswapV2Factory.sol": {
				"IUniswapV2Factory": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "pair",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "PairCreated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "allPairs",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "allPairsLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "createPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeTo",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeToSetter",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "getPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "setFeeTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "setFeeToSetter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allPairs(uint256)": "1e3dd18b",
							"allPairsLength()": "574f2ba3",
							"createPair(address,address)": "c9c65396",
							"feeTo()": "017e7e58",
							"feeToSetter()": "094b7415",
							"getPair(address,address)": "e6a43905",
							"setFeeTo(address)": "f46901ed",
							"setFeeToSetter(address)": "a2e74af6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"PairCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPairs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allPairsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeToSetter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"getPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setFeeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setFeeToSetter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"launchpad/contracts/IUniswapV2Factory.sol\":\"IUniswapV2Factory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"launchpad/contracts/IUniswapV2Factory.sol\":{\"keccak256\":\"0x7e199a801fd5a8edd07d39beabe4e759e3029fb4930a1934ed360f0485f766d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f86f80e0e4cb5efbd5bc71d8530cf67a1a3f0d08441e3d4517407bbe7fc2969\",\"dweb:/ipfs/QmeZoqqYGi2d6EpNx6bqnPdqcU5KBX2wqHU5WskMEKkdW2\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"launchpad/contracts/IUniswapV2Router.sol": {
				"IUniswapV2Router01": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountADesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountIn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveB",
									"type": "uint256"
								}
							],
							"name": "quote",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapETHForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "e8e33700",
							"addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "f305d719",
							"factory()": "c45a0155",
							"getAmountIn(uint256,uint256,uint256)": "85f8c259",
							"getAmountOut(uint256,uint256,uint256)": "054d50d4",
							"getAmountsIn(uint256,address[])": "1f00ca74",
							"getAmountsOut(uint256,address[])": "d06ca61f",
							"quote(uint256,uint256,uint256)": "ad615dec",
							"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "baa2abde",
							"removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "02751cec",
							"removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "ded9382a",
							"removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "2195995c",
							"swapETHForExactTokens(uint256,address[],address,uint256)": "fb3bdb41",
							"swapExactETHForTokens(uint256,address[],address,uint256)": "7ff36ab5",
							"swapExactTokensForETH(uint256,uint256,address[],address,uint256)": "18cbafe5",
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "38ed1739",
							"swapTokensForExactETH(uint256,uint256,address[],address,uint256)": "4a25d94a",
							"swapTokensForExactTokens(uint256,uint256,address[],address,uint256)": "8803dbee"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapETHForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"launchpad/contracts/IUniswapV2Router.sol\":\"IUniswapV2Router01\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"launchpad/contracts/IUniswapV2Router.sol\":{\"keccak256\":\"0x85e739829b533618da1f6467f3459717496c5c982f92d2a0c7df8bb7248f0ab5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b63e51c33ef66612e6a724eb8f84e66ace21d49b2600d105603235e13e674c4f\",\"dweb:/ipfs/QmWhcifYKLKnSvk2MyGQPjx77vXrjuQdWrC2L2d9SwPar9\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IUniswapV2Router02": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountADesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountIn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveB",
									"type": "uint256"
								}
							],
							"name": "quote",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETHSupportingFeeOnTransferTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapETHForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "e8e33700",
							"addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "f305d719",
							"factory()": "c45a0155",
							"getAmountIn(uint256,uint256,uint256)": "85f8c259",
							"getAmountOut(uint256,uint256,uint256)": "054d50d4",
							"getAmountsIn(uint256,address[])": "1f00ca74",
							"getAmountsOut(uint256,address[])": "d06ca61f",
							"quote(uint256,uint256,uint256)": "ad615dec",
							"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "baa2abde",
							"removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "02751cec",
							"removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)": "af2979eb",
							"removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "ded9382a",
							"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "5b0d5984",
							"removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "2195995c",
							"swapETHForExactTokens(uint256,address[],address,uint256)": "fb3bdb41",
							"swapExactETHForTokens(uint256,address[],address,uint256)": "7ff36ab5",
							"swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)": "b6f9de95",
							"swapExactTokensForETH(uint256,uint256,address[],address,uint256)": "18cbafe5",
							"swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "791ac947",
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "38ed1739",
							"swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "5c11d795",
							"swapTokensForExactETH(uint256,uint256,address[],address,uint256)": "4a25d94a",
							"swapTokensForExactTokens(uint256,uint256,address[],address,uint256)": "8803dbee"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETHSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapETHForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETHSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"launchpad/contracts/IUniswapV2Router.sol\":\"IUniswapV2Router02\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"launchpad/contracts/IUniswapV2Router.sol\":{\"keccak256\":\"0x85e739829b533618da1f6467f3459717496c5c982f92d2a0c7df8bb7248f0ab5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b63e51c33ef66612e6a724eb8f84e66ace21d49b2600d105603235e13e674c4f\",\"dweb:/ipfs/QmWhcifYKLKnSvk2MyGQPjx77vXrjuQdWrC2L2d9SwPar9\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"launchpad/contracts/launchpadChild.sol": {
				"LaunchpadChild": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "_description",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_imageUrl",
									"type": "string"
								},
								{
									"internalType": "uint256[8]",
									"name": "_saleInputs",
									"type": "uint256[8]"
								},
								{
									"internalType": "bool",
									"name": "_whitelistEnabled",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "_wlStartTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_liquidityLockDuration",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_router",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_saleInitiator",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Debug",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "abortSale",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "buyTokensPublic",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "buyTokensWhitelist",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimStaleEth",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deadAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "description",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "endSaleAllowClaim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "endTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "contract IUniswapV2Factory",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeBP",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "finalizeSale",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "hardcap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "imageUrl",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidityLockDuration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidityShareBP",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "listingTokensPerOneEth",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "master",
							"outputs": [
								{
									"internalType": "contract ILaunchpadMaster",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxBuyPerUser",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "minBuyPerUser",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "recipient",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "router",
							"outputs": [
								{
									"internalType": "contract IUniswapV2Router02",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "saleAborted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "saleEnded",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "saleFinalized",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "saleId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "saleInitiator",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "saleTokensPerOneEth",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "signer",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "softcap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "sig",
									"type": "bytes"
								}
							],
							"name": "splitSignature",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "teamVestDuration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "teamVestEnabled",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenAmountForLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenAmountForSale",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenTotalAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalBuyEth",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalBuyTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userBuyAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "userVestDuration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "userVestEnabled",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "usersVestingWallets",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"internalType": "address",
									"name": "_target",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_saleId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_chainId",
									"type": "uint256"
								}
							],
							"name": "verify",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "whitelistEnabled",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "wlStartTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"launchpad/contracts/launchpadChild.sol\":422:12433  contract LaunchpadChild is ReentrancyGuard, Pausable {... */\n  mstore(0x40, 0x80)\n    /* \"launchpad/contracts/launchpadChild.sol\":2021:2092  address public deadAddress = 0x000000000000000000000000000000000000dEaD */\n  0x13\n  dup1\n  sload\n  not(sub(shl(0xb8, 0x01), 0x01000000))\n  and\n  0xdead000000\n  or\n  swap1\n  sstore\n    /* \"launchpad/contracts/launchpadChild.sol\":3427:5963  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1806:1813  _status */\n  0x00\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1806:1828  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":981:996  _paused = false */\n  dup1\n  sload\n  not(0xff)\n  and\n  swap1\n  sstore\n    /* \"launchpad/contracts/launchpadChild.sol\":4065:4070  token */\n  0x18\n    /* \"launchpad/contracts/launchpadChild.sol\":4065:4087  token = IERC20(_token) */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup12\n  and\n  or\n  swap1\n  sstore\n    /* \"launchpad/contracts/launchpadChild.sol\":4093:4119  description = _description */\n  dup8\n  mload\n  tag_10\n  swap1\n    /* \"launchpad/contracts/launchpadChild.sol\":4093:4104  description */\n  0x1a\n  swap1\n    /* \"launchpad/contracts/launchpadChild.sol\":4093:4119  description = _description */\n  0x20\n  dup12\n  add\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"launchpad/contracts/launchpadChild.sol\":4125:4145  imageUrl = _imageUrl */\n  dup7\n  mload\n  tag_12\n  swap1\n    /* \"launchpad/contracts/launchpadChild.sol\":4125:4133  imageUrl */\n  0x1b\n  swap1\n    /* \"launchpad/contracts/launchpadChild.sol\":4125:4145  imageUrl = _imageUrl */\n  0x20\n  dup11\n  add\n  swap1\n  tag_11\n  jump\t// in\ntag_12:\n  pop\n    /* \"launchpad/contracts/launchpadChild.sol\":4194:4208  _saleInputs[0] */\n  dup6\n  mload\n    /* \"launchpad/contracts/launchpadChild.sol\":4175:4191  tokenTotalAmount */\n  0x02\n    /* \"launchpad/contracts/launchpadChild.sol\":4175:4208  tokenTotalAmount = _saleInputs[0] */\n  sstore\n    /* \"launchpad/contracts/launchpadChild.sol\":4194:4208  _saleInputs[0] */\n  0x20\n    /* \"launchpad/contracts/launchpadChild.sol\":4239:4253  _saleInputs[1] */\n  dup7\n  add\n  mload\n    /* \"launchpad/contracts/launchpadChild.sol\":4214:4236  listingTokensPerOneEth */\n  0x03\n    /* \"launchpad/contracts/launchpadChild.sol\":4214:4253  listingTokensPerOneEth = _saleInputs[1] */\n  sstore\n    /* \"launchpad/contracts/launchpadChild.sol\":4278:4292  _saleInputs[2] */\n  0x40\n  dup7\n  add\n  mload\n    /* \"launchpad/contracts/launchpadChild.sol\":4259:4275  liquidityShareBP */\n  0x04\n    /* \"launchpad/contracts/launchpadChild.sol\":4259:4292  liquidityShareBP = _saleInputs[2] */\n  sstore\n    /* \"launchpad/contracts/launchpadChild.sol\":4308:4322  _saleInputs[3] */\n  0x60\n  dup7\n  add\n  mload\n    /* \"launchpad/contracts/launchpadChild.sol\":4298:4305  hardcap */\n  0x05\n    /* \"launchpad/contracts/launchpadChild.sol\":4298:4322  hardcap = _saleInputs[3] */\n  dup2\n  swap1\n  sstore\n    /* \"launchpad/contracts/launchpadChild.sol\":4340:4354  _saleInputs[4] */\n  0x80\n  dup8\n  add\n  mload\n    /* \"launchpad/contracts/launchpadChild.sol\":4328:4337  startTime */\n  0x08\n    /* \"launchpad/contracts/launchpadChild.sol\":4328:4354  startTime = _saleInputs[4] */\n  sstore\n    /* \"launchpad/contracts/launchpadChild.sol\":4370:4384  _saleInputs[5] */\n  0xa0\n  dup8\n  add\n  mload\n    /* \"launchpad/contracts/launchpadChild.sol\":4360:4367  endTime */\n  0x09\n    /* \"launchpad/contracts/launchpadChild.sol\":4360:4384  endTime = _saleInputs[5] */\n  sstore\n    /* \"launchpad/contracts/launchpadChild.sol\":4406:4420  _saleInputs[6] */\n  0xc0\n  dup8\n  add\n  mload\n    /* \"launchpad/contracts/launchpadChild.sol\":4390:4403  maxBuyPerUser */\n  0x0f\n    /* \"launchpad/contracts/launchpadChild.sol\":4390:4420  maxBuyPerUser = _saleInputs[6] */\n  sstore\n    /* \"launchpad/contracts/launchpadChild.sol\":4442:4456  _saleInputs[7] */\n  0xe0\n  dup8\n  add\n  mload\n    /* \"launchpad/contracts/launchpadChild.sol\":4426:4439  minBuyPerUser */\n  0x10\n    /* \"launchpad/contracts/launchpadChild.sol\":4426:4456  minBuyPerUser = _saleInputs[7] */\n  dup2\n  swap1\n  sstore\n  lt\n    /* \"launchpad/contracts/launchpadChild.sol\":4462:4537  require(minBuyPerUser < hardcap, \"min buy per user is higher than hardcap\") */\n  tag_30\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":3208:3210   */\n  0x20\n    /* \"launchpad/contracts/launchpadChild.sol\":4462:4537  require(minBuyPerUser < hardcap, \"min buy per user is higher than hardcap\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3190:3211   */\n  mstore\n    /* \"#utility.yul\":3247:3249   */\n  0x27\n    /* \"#utility.yul\":3227:3245   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":3220:3250   */\n  mstore\n    /* \"#utility.yul\":3286:3320   */\n  0x6d696e2062757920706572207573657220697320686967686572207468616e20\n    /* \"#utility.yul\":3266:3284   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":3259:3321   */\n  mstore\n  shl(0xcc, 0x06861726463617)\n    /* \"#utility.yul\":3337:3355   */\n  0x64\n  dup3\n  add\n    /* \"#utility.yul\":3330:3367   */\n  mstore\n    /* \"#utility.yul\":3384:3403   */\n  0x84\n  add\n    /* \"launchpad/contracts/launchpadChild.sol\":4462:4537  require(minBuyPerUser < hardcap, \"min buy per user is higher than hardcap\") */\ntag_31:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_30:\n    /* \"launchpad/contracts/launchpadChild.sol\":4544:4550  master */\n  0x15\n    /* \"launchpad/contracts/launchpadChild.sol\":4544:4581  master = ILaunchpadMaster(msg.sender) */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"launchpad/contracts/launchpadChild.sol\":4570:4580  msg.sender */\n  caller\n    /* \"launchpad/contracts/launchpadChild.sol\":4544:4581  master = ILaunchpadMaster(msg.sender) */\n  swap1\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"launchpad/contracts/launchpadChild.sol\":4595:4610  master.feesBP() */\n  0x40\n  dup1\n  mload\n  shl(0xe0, 0x73dc1349)\n  dup2\n  mstore\n  swap1\n  mload\n    /* \"launchpad/contracts/launchpadChild.sol\":4595:4608  master.feesBP */\n  0x73dc1349\n  swap2\n    /* \"launchpad/contracts/launchpadChild.sol\":4595:4610  master.feesBP() */\n  0x04\n  dup1\n  dup3\n  add\n  swap3\n  0x20\n  swap3\n  swap1\n  swap2\n  swap1\n  dup3\n  swap1\n  sub\n  add\n  dup2\n    /* \"launchpad/contracts/launchpadChild.sol\":4570:4580  msg.sender */\n  dup7\n    /* \"launchpad/contracts/launchpadChild.sol\":4595:4610  master.feesBP() */\n  dup1\n  extcodesize\n  iszero\n  dup1\n  iszero\n  tag_33\n  jumpi\n  0x00\n  dup1\n  revert\ntag_33:\n  pop\n  gas\n  staticcall\n  iszero\n  dup1\n  iszero\n  tag_35\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_35:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_36\n  swap2\n  swap1\n  tag_37\n  jump\t// in\ntag_36:\n    /* \"launchpad/contracts/launchpadChild.sol\":4587:4592  feeBP */\n  0x07\n    /* \"launchpad/contracts/launchpadChild.sol\":4587:4610  feeBP = master.feesBP() */\n  sstore\n    /* \"launchpad/contracts/launchpadChild.sol\":4713:4720  hardcap */\n  sload(0x05)\n    /* \"launchpad/contracts/launchpadChild.sol\":4676:4692  liquidityShareBP */\n  sload(0x04)\n    /* \"launchpad/contracts/launchpadChild.sol\":4697:4703  10_000 */\n  0x2710\n  swap1\n    /* \"launchpad/contracts/launchpadChild.sol\":4667:4692  10_000 - liquidityShareBP */\n  tag_38\n  swap1\n    /* \"launchpad/contracts/launchpadChild.sol\":4697:4703  10_000 */\n  dup3\n    /* \"launchpad/contracts/launchpadChild.sol\":4667:4692  10_000 - liquidityShareBP */\n  tag_39\n  jump\t// in\ntag_38:\n    /* \"launchpad/contracts/launchpadChild.sol\":4647:4663  tokenTotalAmount */\n  sload(0x02)\n    /* \"launchpad/contracts/launchpadChild.sol\":4647:4693  tokenTotalAmount * (10_000 - liquidityShareBP) */\n  tag_40\n  swap2\n  swap1\n  tag_41\n  jump\t// in\ntag_40:\n    /* \"launchpad/contracts/launchpadChild.sol\":4646:4703  (tokenTotalAmount * (10_000 - liquidityShareBP)) / 10_000 */\n  tag_42\n  swap2\n  swap1\n  tag_43\n  jump\t// in\ntag_42:\n    /* \"launchpad/contracts/launchpadChild.sol\":4645:4720  ((tokenTotalAmount * (10_000 - liquidityShareBP)) / 10_000) /... */\n  tag_44\n  swap2\n  swap1\n  tag_43\n  jump\t// in\ntag_44:\n    /* \"launchpad/contracts/launchpadChild.sol\":4617:4636  saleTokensPerOneEth */\n  0x0b\n    /* \"launchpad/contracts/launchpadChild.sol\":4617:4720  saleTokensPerOneEth =... */\n  sstore\n    /* \"launchpad/contracts/launchpadChild.sol\":4737:4744  hardcap */\n  sload(0x05)\n    /* \"launchpad/contracts/launchpadChild.sol\":4737:4748  hardcap / 2 */\n  tag_45\n  swap1\n    /* \"launchpad/contracts/launchpadChild.sol\":4747:4748  2 */\n  0x02\n  swap1\n    /* \"launchpad/contracts/launchpadChild.sol\":4737:4748  hardcap / 2 */\n  tag_43\n  jump\t// in\ntag_45:\n    /* \"launchpad/contracts/launchpadChild.sol\":4727:4734  softcap */\n  0x06\n    /* \"launchpad/contracts/launchpadChild.sol\":4727:4748  softcap = hardcap / 2 */\n  sstore\n    /* \"launchpad/contracts/launchpadChild.sol\":4800:4816  liquidityShareBP */\n  sload(0x04)\n    /* \"launchpad/contracts/launchpadChild.sol\":4781:4797  tokenTotalAmount */\n  sload(0x02)\n    /* \"launchpad/contracts/launchpadChild.sol\":4820:4826  10_000 */\n  0x2710\n  swap2\n    /* \"launchpad/contracts/launchpadChild.sol\":4781:4816  tokenTotalAmount * liquidityShareBP */\n  tag_46\n  swap2\n  tag_41\n  jump\t// in\ntag_46:\n    /* \"launchpad/contracts/launchpadChild.sol\":4780:4826  (tokenTotalAmount * liquidityShareBP) / 10_000 */\n  tag_47\n  swap2\n  swap1\n  tag_43\n  jump\t// in\ntag_47:\n    /* \"launchpad/contracts/launchpadChild.sol\":4754:4777  tokenAmountForLiquidity */\n  0x12\n    /* \"launchpad/contracts/launchpadChild.sol\":4754:4826  tokenAmountForLiquidity = (tokenTotalAmount * liquidityShareBP) / 10_000 */\n  dup2\n  swap1\n  sstore\n    /* \"launchpad/contracts/launchpadChild.sol\":4853:4869  tokenTotalAmount */\n  sload(0x02)\n    /* \"launchpad/contracts/launchpadChild.sol\":4853:4895  tokenTotalAmount - tokenAmountForLiquidity */\n  tag_48\n  swap2\n    /* \"launchpad/contracts/launchpadChild.sol\":4754:4826  tokenAmountForLiquidity = (tokenTotalAmount * liquidityShareBP) / 10_000 */\n  swap1\n    /* \"launchpad/contracts/launchpadChild.sol\":4853:4895  tokenTotalAmount - tokenAmountForLiquidity */\n  tag_39\n  jump\t// in\ntag_48:\n    /* \"launchpad/contracts/launchpadChild.sol\":4832:4850  tokenAmountForSale */\n  0x11\n    /* \"launchpad/contracts/launchpadChild.sol\":4832:4895  tokenAmountForSale = tokenTotalAmount - tokenAmountForLiquidity */\n  sstore\n    /* \"launchpad/contracts/launchpadChild.sol\":5147:5152  feeBP */\n  sload(0x07)\n    /* \"launchpad/contracts/launchpadChild.sol\":5157:5163  10_000 */\n  0x2710\n  swap1\n    /* \"launchpad/contracts/launchpadChild.sol\":5138:5152  10_000 - feeBP */\n  tag_49\n  swap1\n    /* \"launchpad/contracts/launchpadChild.sol\":5157:5163  10_000 */\n  dup3\n    /* \"launchpad/contracts/launchpadChild.sol\":5138:5152  10_000 - feeBP */\n  tag_39\n  jump\t// in\ntag_49:\n    /* \"launchpad/contracts/launchpadChild.sol\":5127:5134  hardcap */\n  sload(0x05)\n    /* \"launchpad/contracts/launchpadChild.sol\":5127:5153  hardcap * (10_000 - feeBP) */\n  tag_50\n  swap2\n  swap1\n  tag_41\n  jump\t// in\ntag_50:\n    /* \"launchpad/contracts/launchpadChild.sol\":5126:5163  (hardcap * (10_000 - feeBP)) / 10_000 */\n  tag_51\n  swap2\n  swap1\n  tag_43\n  jump\t// in\ntag_51:\n    /* \"launchpad/contracts/launchpadChild.sol\":5092:5114  listingTokensPerOneEth */\n  sload(0x03)\n    /* \"launchpad/contracts/launchpadChild.sol\":5066:5089  tokenAmountForLiquidity */\n  sload(0x12)\n    /* \"launchpad/contracts/launchpadChild.sol\":5066:5114  tokenAmountForLiquidity / listingTokensPerOneEth */\n  tag_52\n  swap2\n  swap1\n  tag_43\n  jump\t// in\ntag_52:\n    /* \"launchpad/contracts/launchpadChild.sol\":5066:5164  tokenAmountForLiquidity / listingTokensPerOneEth <... */\n  lt\n    /* \"launchpad/contracts/launchpadChild.sol\":5051:5260  require(... */\n  tag_53\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":3616:3618   */\n  0x20\n    /* \"launchpad/contracts/launchpadChild.sol\":5051:5260  require(... */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3598:3619   */\n  mstore\n    /* \"#utility.yul\":3655:3657   */\n  0x50\n    /* \"#utility.yul\":3635:3653   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":3628:3658   */\n  mstore\n    /* \"#utility.yul\":3694:3728   */\n  0x6e6f7420656e6f7567682045544820666f72206c69717569646974792c20696e\n    /* \"#utility.yul\":3674:3692   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":3667:3729   */\n  mstore\n    /* \"#utility.yul\":3765:3799   */\n  0x637265617365206c697374696e67207072696365206f72206465637265617365\n    /* \"#utility.yul\":3745:3763   */\n  0x64\n  dup3\n  add\n    /* \"#utility.yul\":3738:3800   */\n  mstore\n  shl(0x80, 0x206c6971756964697479207368617265)\n    /* \"#utility.yul\":3816:3835   */\n  0x84\n  dup3\n  add\n    /* \"#utility.yul\":3809:3856   */\n  mstore\n    /* \"#utility.yul\":3873:3892   */\n  0xa4\n  add\n    /* \"launchpad/contracts/launchpadChild.sol\":5051:5260  require(... */\n  tag_31\n    /* \"#utility.yul\":3414:3898   */\n  jump\n    /* \"launchpad/contracts/launchpadChild.sol\":5051:5260  require(... */\ntag_53:\n    /* \"launchpad/contracts/launchpadChild.sol\":5267:5288  liquidityLockDuration */\n  0x0c\n    /* \"launchpad/contracts/launchpadChild.sol\":5267:5313  liquidityLockDuration = _liquidityLockDuration */\n  dup4\n  swap1\n  sstore\n    /* \"launchpad/contracts/launchpadChild.sol\":5534:5550  whitelistEnabled */\n  0x13\n    /* \"launchpad/contracts/launchpadChild.sol\":5534:5570  whitelistEnabled = _whitelistEnabled */\n  dup1\n  sload\n  not(0xff0000)\n  and\n  0x010000\n  dup8\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n    /* \"launchpad/contracts/launchpadChild.sol\":5576:5587  wlStartTime */\n  0x0a\n    /* \"launchpad/contracts/launchpadChild.sol\":5576:5602  wlStartTime = _wlStartTime */\n  dup5\n  swap1\n  sstore\n    /* \"launchpad/contracts/launchpadChild.sol\":5630:5639  startTime */\n  sload(0x08)\n    /* \"launchpad/contracts/launchpadChild.sol\":5616:5639  wlStartTime < startTime */\n  dup5\n  lt\n    /* \"launchpad/contracts/launchpadChild.sol\":5608:5640  require(wlStartTime < startTime) */\n  tag_56\n  jumpi\n  0x00\n  dup1\n  revert\ntag_56:\n    /* \"launchpad/contracts/launchpadChild.sol\":5656:5662  master */\n  0x15\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  sub(shl(0xa0, 0x01), 0x01)\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"launchpad/contracts/launchpadChild.sol\":5656:5676  master.currentSaleId */\n  and\n  0x2e849894\n    /* \"launchpad/contracts/launchpadChild.sol\":5656:5678  master.currentSaleId() */\n  mload(0x40)\n  dup2\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup7\n  dup1\n  extcodesize\n  iszero\n  dup1\n  iszero\n  tag_57\n  jumpi\n  0x00\n  dup1\n  revert\ntag_57:\n  pop\n  gas\n  staticcall\n  iszero\n  dup1\n  iszero\n  tag_59\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_59:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_60\n  swap2\n  swap1\n  tag_37\n  jump\t// in\ntag_60:\n    /* \"launchpad/contracts/launchpadChild.sol\":5647:5653  saleId */\n  0x19\n    /* \"launchpad/contracts/launchpadChild.sol\":5647:5678  saleId = master.currentSaleId() */\n  sstore\n    /* \"launchpad/contracts/launchpadChild.sol\":5689:5705  whitelistEnabled */\n  sload(0x13)\n  0x010000\n  swap1\n  div\n  0xff\n  and\n    /* \"launchpad/contracts/launchpadChild.sol\":5685:5758  if (whitelistEnabled) {... */\n  iszero\n  tag_61\n  jumpi\n    /* \"launchpad/contracts/launchpadChild.sol\":5724:5730  master */\n  sload(0x15)\n    /* \"launchpad/contracts/launchpadChild.sol\":5744:5750  saleId */\n  sload(0x19)\n    /* \"launchpad/contracts/launchpadChild.sol\":5724:5751  master.saleToSigner(saleId) */\n  mload(0x40)\n  shl(0xe4, 0x0b1d2ef9)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"launchpad/contracts/launchpadChild.sol\":5724:5730  master */\n  swap1\n  swap3\n  and\n  swap2\n    /* \"launchpad/contracts/launchpadChild.sol\":5724:5743  master.saleToSigner */\n  0xb1d2ef90\n  swap2\n    /* \"launchpad/contracts/launchpadChild.sol\":5724:5751  master.saleToSigner(saleId) */\n  tag_62\n  swap2\n  0x04\n  add\n    /* \"#utility.yul\":4049:4074   */\n  swap1\n  dup2\n  mstore\n    /* \"#utility.yul\":4037:4039   */\n  0x20\n    /* \"#utility.yul\":4022:4040   */\n  add\n  swap1\n    /* \"#utility.yul\":3903:4080   */\n  jump\n    /* \"launchpad/contracts/launchpadChild.sol\":5724:5751  master.saleToSigner(saleId) */\ntag_62:\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup7\n  dup1\n  extcodesize\n  iszero\n  dup1\n  iszero\n  tag_64\n  jumpi\n  0x00\n  dup1\n  revert\ntag_64:\n  pop\n  gas\n  staticcall\n  iszero\n  dup1\n  iszero\n  tag_66\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_66:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_67\n  swap2\n  swap1\n  tag_68\n  jump\t// in\ntag_67:\n    /* \"launchpad/contracts/launchpadChild.sol\":5715:5721  signer */\n  0x14\n    /* \"launchpad/contracts/launchpadChild.sol\":5715:5751  signer = master.saleToSigner(saleId) */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"launchpad/contracts/launchpadChild.sol\":5685:5758  if (whitelistEnabled) {... */\ntag_61:\n    /* \"launchpad/contracts/launchpadChild.sol\":5784:5790  master */\n  0x15\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  sub(shl(0xa0, 0x01), 0x01)\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"launchpad/contracts/launchpadChild.sol\":5784:5801  master.feesWallet */\n  and\n  0x7e44d2cc\n    /* \"launchpad/contracts/launchpadChild.sol\":5784:5803  master.feesWallet() */\n  mload(0x40)\n  dup2\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup7\n  dup1\n  extcodesize\n  iszero\n  dup1\n  iszero\n  tag_69\n  jumpi\n  0x00\n  dup1\n  revert\ntag_69:\n  pop\n  gas\n  staticcall\n  iszero\n  dup1\n  iszero\n  tag_71\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_71:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_72\n  swap2\n  swap1\n  tag_68\n  jump\t// in\ntag_72:\n    /* \"launchpad/contracts/launchpadChild.sol\":5764:5773  recipient */\n  0x1c\n    /* \"launchpad/contracts/launchpadChild.sol\":5764:5804  recipient = payable(master.feesWallet()) */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap1\n  dup2\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap4\n  dup5\n  and\n  or\n  swap1\n  swap2\n  sstore\n    /* \"launchpad/contracts/launchpadChild.sol\":5810:5823  saleInitiator */\n  0x1d\n    /* \"launchpad/contracts/launchpadChild.sol\":5810:5849  saleInitiator = payable(_saleInitiator) */\n  dup1\n  sload\n  dup3\n  and\n  swap4\n  dup4\n  and\n  swap4\n  swap1\n  swap4\n  or\n  swap1\n  swap3\n  sstore\n    /* \"launchpad/contracts/launchpadChild.sol\":5856:5862  router */\n  0x16\n    /* \"launchpad/contracts/launchpadChild.sol\":5856:5892  router = IUniswapV2Router02(_router) */\n  dup1\n  sload\n  swap1\n  swap3\n  and\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n  pop\n    /* \"launchpad/contracts/launchpadChild.sol\":422:12433  contract LaunchpadChild is ReentrancyGuard, Pausable {... */\n  tag_85\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\ntag_11:\n  dup3\n  dup1\n  sload\n  tag_74\n  swap1\n  tag_75\n  jump\t// in\ntag_74:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_77\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_80)\ntag_77:\n  dup3\n  0x1f\n  lt\n  tag_78\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_80)\ntag_78:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_80\n  jumpi\n  swap2\n  dup3\n  add\ntag_79:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_80\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_79)\ntag_80:\n  pop\n  tag_81\n  swap3\n  swap2\n  pop\n  tag_82\n  jump\t// in\ntag_81:\n  pop\n  swap1\n  jump\t// out\ntag_82:\ntag_83:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_81\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_83)\n    /* \"#utility.yul\":14:191   */\ntag_86:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_88\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  dup1\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_88:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:360   */\ntag_89:\n    /* \"#utility.yul\":272:285   */\n  dup1\n  mload\n    /* \"#utility.yul\":321:334   */\n  dup1\n  iszero\n    /* \"#utility.yul\":314:335   */\n  iszero\n    /* \"#utility.yul\":304:336   */\n  dup2\n  eq\n    /* \"#utility.yul\":294:354   */\n  tag_88\n  jumpi\n    /* \"#utility.yul\":350:351   */\n  0x00\n    /* \"#utility.yul\":347:348   */\n  dup1\n    /* \"#utility.yul\":340:352   */\n  revert\n    /* \"#utility.yul\":365:1060   */\ntag_92:\n    /* \"#utility.yul\":419:424   */\n  0x00\n    /* \"#utility.yul\":472:475   */\n  dup3\n    /* \"#utility.yul\":465:469   */\n  0x1f\n    /* \"#utility.yul\":457:463   */\n  dup4\n    /* \"#utility.yul\":453:470   */\n  add\n    /* \"#utility.yul\":449:476   */\n  slt\n    /* \"#utility.yul\":439:494   */\n  tag_94\n  jumpi\n    /* \"#utility.yul\":490:491   */\n  0x00\n    /* \"#utility.yul\":487:488   */\n  dup1\n    /* \"#utility.yul\":480:492   */\n  revert\n    /* \"#utility.yul\":439:494   */\ntag_94:\n    /* \"#utility.yul\":513:526   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":538:564   */\n  dup2\n  gt\n    /* \"#utility.yul\":535:587   */\n  iszero\n  tag_96\n  jumpi\n    /* \"#utility.yul\":567:585   */\n  tag_96\n  tag_97\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":606:610   */\n  0x20\n    /* \"#utility.yul\":634:687   */\n  tag_98\n    /* \"#utility.yul\":677:679   */\n  0x1f\n    /* \"#utility.yul\":658:671   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":654:681   */\n  and\n    /* \"#utility.yul\":650:686   */\n  dup3\n  add\n    /* \"#utility.yul\":634:687   */\n  tag_99\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":712:714   */\n  dup3\n    /* \"#utility.yul\":703:710   */\n  dup2\n    /* \"#utility.yul\":696:715   */\n  mstore\n    /* \"#utility.yul\":756:759   */\n  dup6\n    /* \"#utility.yul\":751:753   */\n  dup3\n    /* \"#utility.yul\":746:748   */\n  dup5\n    /* \"#utility.yul\":738:744   */\n  dup8\n    /* \"#utility.yul\":734:749   */\n  add\n    /* \"#utility.yul\":730:754   */\n  add\n    /* \"#utility.yul\":727:760   */\n  gt\n    /* \"#utility.yul\":724:777   */\n  iszero\n  tag_100\n  jumpi\n    /* \"#utility.yul\":773:774   */\n  0x00\n    /* \"#utility.yul\":770:771   */\n  dup1\n    /* \"#utility.yul\":763:775   */\n  revert\n    /* \"#utility.yul\":724:777   */\ntag_100:\n    /* \"#utility.yul\":795:796   */\n  0x00\n    /* \"#utility.yul\":805:939   */\ntag_101:\n    /* \"#utility.yul\":819:821   */\n  dup4\n    /* \"#utility.yul\":816:817   */\n  dup2\n    /* \"#utility.yul\":813:822   */\n  lt\n    /* \"#utility.yul\":805:939   */\n  iszero\n  tag_103\n  jumpi\n    /* \"#utility.yul\":908:922   */\n  dup6\n  dup2\n  add\n    /* \"#utility.yul\":904:927   */\n  dup4\n  add\n    /* \"#utility.yul\":898:928   */\n  mload\n    /* \"#utility.yul\":876:891   */\n  dup3\n  dup3\n  add\n    /* \"#utility.yul\":872:896   */\n  dup5\n  add\n    /* \"#utility.yul\":865:929   */\n  mstore\n    /* \"#utility.yul\":830:840   */\n  dup3\n  add\n    /* \"#utility.yul\":805:939   */\n  jump(tag_101)\ntag_103:\n    /* \"#utility.yul\":957:959   */\n  dup4\n    /* \"#utility.yul\":954:955   */\n  dup2\n    /* \"#utility.yul\":951:960   */\n  gt\n    /* \"#utility.yul\":948:1029   */\n  iszero\n  tag_104\n  jumpi\n    /* \"#utility.yul\":1017:1018   */\n  0x00\n    /* \"#utility.yul\":1012:1014   */\n  dup4\n    /* \"#utility.yul\":1007:1009   */\n  dup6\n    /* \"#utility.yul\":998:1005   */\n  dup5\n    /* \"#utility.yul\":994:1010   */\n  add\n    /* \"#utility.yul\":990:1015   */\n  add\n    /* \"#utility.yul\":983:1019   */\n  mstore\n    /* \"#utility.yul\":948:1029   */\ntag_104:\n  pop\n    /* \"#utility.yul\":1047:1054   */\n  swap6\n    /* \"#utility.yul\":365:1060   */\n  swap5\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1065:1273   */\ntag_68:\n    /* \"#utility.yul\":1135:1141   */\n  0x00\n    /* \"#utility.yul\":1188:1190   */\n  0x20\n    /* \"#utility.yul\":1176:1185   */\n  dup3\n    /* \"#utility.yul\":1167:1174   */\n  dup5\n    /* \"#utility.yul\":1163:1186   */\n  sub\n    /* \"#utility.yul\":1159:1191   */\n  slt\n    /* \"#utility.yul\":1156:1208   */\n  iszero\n  tag_106\n  jumpi\n    /* \"#utility.yul\":1204:1205   */\n  0x00\n    /* \"#utility.yul\":1201:1202   */\n  dup1\n    /* \"#utility.yul\":1194:1206   */\n  revert\n    /* \"#utility.yul\":1156:1208   */\ntag_106:\n    /* \"#utility.yul\":1227:1267   */\n  tag_107\n    /* \"#utility.yul\":1257:1266   */\n  dup3\n    /* \"#utility.yul\":1227:1267   */\n  tag_86\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":1217:1267   */\n  swap4\n    /* \"#utility.yul\":1065:1273   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1278:2812   */\ntag_3:\n    /* \"#utility.yul\":1460:1466   */\n  0x00\n    /* \"#utility.yul\":1468:1474   */\n  dup1\n    /* \"#utility.yul\":1476:1482   */\n  0x00\n    /* \"#utility.yul\":1484:1490   */\n  dup1\n    /* \"#utility.yul\":1492:1498   */\n  0x00\n    /* \"#utility.yul\":1500:1506   */\n  dup1\n    /* \"#utility.yul\":1508:1514   */\n  0x00\n    /* \"#utility.yul\":1516:1522   */\n  dup1\n    /* \"#utility.yul\":1524:1530   */\n  0x00\n    /* \"#utility.yul\":1577:1580   */\n  0x0200\n    /* \"#utility.yul\":1565:1574   */\n  dup11\n    /* \"#utility.yul\":1556:1563   */\n  dup13\n    /* \"#utility.yul\":1552:1575   */\n  sub\n    /* \"#utility.yul\":1548:1581   */\n  slt\n    /* \"#utility.yul\":1545:1598   */\n  iszero\n  tag_109\n  jumpi\n    /* \"#utility.yul\":1594:1595   */\n  0x00\n    /* \"#utility.yul\":1591:1592   */\n  dup1\n    /* \"#utility.yul\":1584:1596   */\n  revert\n    /* \"#utility.yul\":1545:1598   */\ntag_109:\n    /* \"#utility.yul\":1617:1657   */\n  tag_110\n    /* \"#utility.yul\":1647:1656   */\n  dup11\n    /* \"#utility.yul\":1617:1657   */\n  tag_86\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":1676:1678   */\n  0x20\n    /* \"#utility.yul\":1707:1725   */\n  dup12\n  dup2\n  add\n    /* \"#utility.yul\":1701:1726   */\n  mload\n    /* \"#utility.yul\":1607:1657   */\n  swap2\n  swap11\n  pop\n    /* \"#utility.yul\":1676:1678   */\n  swap1\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1775:1789   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1772:1806   */\n  iszero\n  tag_111\n  jumpi\n    /* \"#utility.yul\":1802:1803   */\n  0x00\n    /* \"#utility.yul\":1799:1800   */\n  dup1\n    /* \"#utility.yul\":1792:1804   */\n  revert\n    /* \"#utility.yul\":1772:1806   */\ntag_111:\n    /* \"#utility.yul\":1825:1886   */\n  tag_112\n    /* \"#utility.yul\":1878:1885   */\n  dup15\n    /* \"#utility.yul\":1869:1875   */\n  dup4\n    /* \"#utility.yul\":1858:1867   */\n  dup16\n    /* \"#utility.yul\":1854:1876   */\n  add\n    /* \"#utility.yul\":1825:1886   */\n  tag_92\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":1815:1886   */\n  swap11\n  pop\n    /* \"#utility.yul\":1932:1934   */\n  0x40\n    /* \"#utility.yul\":1921:1930   */\n  dup14\n    /* \"#utility.yul\":1917:1935   */\n  add\n    /* \"#utility.yul\":1911:1936   */\n  mload\n    /* \"#utility.yul\":1895:1936   */\n  swap2\n  pop\n    /* \"#utility.yul\":1961:1963   */\n  dup1\n    /* \"#utility.yul\":1951:1959   */\n  dup3\n    /* \"#utility.yul\":1948:1964   */\n  gt\n    /* \"#utility.yul\":1945:1981   */\n  iszero\n  tag_113\n  jumpi\n    /* \"#utility.yul\":1977:1978   */\n  0x00\n    /* \"#utility.yul\":1974:1975   */\n  dup1\n    /* \"#utility.yul\":1967:1979   */\n  revert\n    /* \"#utility.yul\":1945:1981   */\ntag_113:\n  pop\n    /* \"#utility.yul\":2000:2063   */\n  tag_114\n    /* \"#utility.yul\":2055:2062   */\n  dup14\n    /* \"#utility.yul\":2044:2052   */\n  dup3\n    /* \"#utility.yul\":2033:2042   */\n  dup15\n    /* \"#utility.yul\":2029:2053   */\n  add\n    /* \"#utility.yul\":2000:2063   */\n  tag_92\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":1990:2063   */\n  swap9\n  pop\n  pop\n    /* \"#utility.yul\":2107:2114   */\n  dup12\n    /* \"#utility.yul\":2101:2104   */\n  0x7f\n    /* \"#utility.yul\":2090:2099   */\n  dup13\n    /* \"#utility.yul\":2086:2105   */\n  add\n    /* \"#utility.yul\":2082:2115   */\n  slt\n    /* \"#utility.yul\":2072:2133   */\n  tag_115\n  jumpi\n    /* \"#utility.yul\":2129:2130   */\n  0x00\n    /* \"#utility.yul\":2126:2127   */\n  dup1\n    /* \"#utility.yul\":2119:2131   */\n  revert\n    /* \"#utility.yul\":2072:2133   */\ntag_115:\n    /* \"#utility.yul\":2153:2174   */\n  tag_116\n  tag_117\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":2196:2199   */\n  dup1\n    /* \"#utility.yul\":2234:2236   */\n  0x60\n    /* \"#utility.yul\":2223:2232   */\n  dup14\n    /* \"#utility.yul\":2219:2237   */\n  add\n    /* \"#utility.yul\":2271:2274   */\n  0x0160\n    /* \"#utility.yul\":2260:2269   */\n  dup15\n    /* \"#utility.yul\":2256:2275   */\n  add\n    /* \"#utility.yul\":2294:2301   */\n  dup16\n    /* \"#utility.yul\":2290:2292   */\n  dup2\n    /* \"#utility.yul\":2287:2302   */\n  gt\n    /* \"#utility.yul\":2284:2319   */\n  iszero\n  tag_118\n  jumpi\n    /* \"#utility.yul\":2315:2316   */\n  0x00\n    /* \"#utility.yul\":2312:2313   */\n  dup1\n    /* \"#utility.yul\":2305:2317   */\n  revert\n    /* \"#utility.yul\":2284:2319   */\ntag_118:\n    /* \"#utility.yul\":2337:2338   */\n  0x00\n    /* \"#utility.yul\":2347:2505   */\ntag_119:\n    /* \"#utility.yul\":2361:2365   */\n  0x08\n    /* \"#utility.yul\":2358:2359   */\n  dup2\n    /* \"#utility.yul\":2355:2366   */\n  lt\n    /* \"#utility.yul\":2347:2505   */\n  iszero\n  tag_121\n  jumpi\n    /* \"#utility.yul\":2420:2430   */\n  dup3\n  mload\n    /* \"#utility.yul\":2408:2431   */\n  dup6\n  mstore\n    /* \"#utility.yul\":2451:2463   */\n  swap4\n  dup6\n  add\n  swap4\n    /* \"#utility.yul\":2483:2495   */\n  swap2\n  dup6\n  add\n  swap2\n    /* \"#utility.yul\":2381:2382   */\n  0x01\n    /* \"#utility.yul\":2374:2383   */\n  add\n    /* \"#utility.yul\":2347:2505   */\n  jump(tag_119)\ntag_121:\n    /* \"#utility.yul\":2351:2354   */\n  pop\n    /* \"#utility.yul\":2524:2529   */\n  dup3\n    /* \"#utility.yul\":2514:2529   */\n  swap11\n  pop\n    /* \"#utility.yul\":2548:2578   */\n  tag_122\n    /* \"#utility.yul\":2575:2577   */\n  dup2\n    /* \"#utility.yul\":2548:2578   */\n  tag_89\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":2538:2578   */\n  swap10\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2618:2621   */\n  0x0180\n    /* \"#utility.yul\":2607:2616   */\n  dup11\n    /* \"#utility.yul\":2603:2622   */\n  add\n    /* \"#utility.yul\":2597:2623   */\n  mload\n    /* \"#utility.yul\":2587:2623   */\n  swap4\n  pop\n    /* \"#utility.yul\":2663:2666   */\n  0x01a0\n    /* \"#utility.yul\":2652:2661   */\n  dup11\n    /* \"#utility.yul\":2648:2667   */\n  add\n    /* \"#utility.yul\":2642:2668   */\n  mload\n    /* \"#utility.yul\":2632:2668   */\n  swap3\n  pop\n    /* \"#utility.yul\":2687:2737   */\n  tag_123\n    /* \"#utility.yul\":2732:2735   */\n  0x01c0\n    /* \"#utility.yul\":2721:2730   */\n  dup12\n    /* \"#utility.yul\":2717:2736   */\n  add\n    /* \"#utility.yul\":2687:2737   */\n  tag_86\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":2677:2737   */\n  swap2\n  pop\n    /* \"#utility.yul\":2756:2806   */\n  tag_124\n    /* \"#utility.yul\":2801:2804   */\n  0x01e0\n    /* \"#utility.yul\":2790:2799   */\n  dup12\n    /* \"#utility.yul\":2786:2805   */\n  add\n    /* \"#utility.yul\":2756:2806   */\n  tag_86\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":2746:2806   */\n  swap1\n  pop\n    /* \"#utility.yul\":1278:2812   */\n  swap3\n  swap6\n  swap9\n  pop\n  swap3\n  swap6\n  swap9\n  pop\n  swap3\n  swap6\n  swap9\n  jump\t// out\n    /* \"#utility.yul\":2817:3001   */\ntag_37:\n    /* \"#utility.yul\":2887:2893   */\n  0x00\n    /* \"#utility.yul\":2940:2942   */\n  0x20\n    /* \"#utility.yul\":2928:2937   */\n  dup3\n    /* \"#utility.yul\":2919:2926   */\n  dup5\n    /* \"#utility.yul\":2915:2938   */\n  sub\n    /* \"#utility.yul\":2911:2943   */\n  slt\n    /* \"#utility.yul\":2908:2960   */\n  iszero\n  tag_126\n  jumpi\n    /* \"#utility.yul\":2956:2957   */\n  0x00\n    /* \"#utility.yul\":2953:2954   */\n  dup1\n    /* \"#utility.yul\":2946:2958   */\n  revert\n    /* \"#utility.yul\":2908:2960   */\ntag_126:\n  pop\n    /* \"#utility.yul\":2979:2995   */\n  mload\n  swap2\n    /* \"#utility.yul\":2817:3001   */\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4085:4336   */\ntag_117:\n    /* \"#utility.yul\":4156:4158   */\n  0x40\n    /* \"#utility.yul\":4150:4159   */\n  mload\n    /* \"#utility.yul\":4198:4201   */\n  0x0100\n    /* \"#utility.yul\":4186:4202   */\n  dup2\n  add\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":4217:4251   */\n  dup2\n  gt\n    /* \"#utility.yul\":4253:4275   */\n  dup3\n  dup3\n  lt\n    /* \"#utility.yul\":4214:4276   */\n  or\n    /* \"#utility.yul\":4211:4299   */\n  iszero\n  tag_132\n  jumpi\n    /* \"#utility.yul\":4279:4297   */\n  tag_132\n  tag_97\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":4315:4317   */\n  0x40\n    /* \"#utility.yul\":4308:4330   */\n  mstore\n    /* \"#utility.yul\":4085:4336   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":4341:4616   */\ntag_99:\n    /* \"#utility.yul\":4412:4414   */\n  0x40\n    /* \"#utility.yul\":4406:4415   */\n  mload\n    /* \"#utility.yul\":4477:4479   */\n  0x1f\n    /* \"#utility.yul\":4458:4471   */\n  dup3\n  add\n  not(0x1f)\n    /* \"#utility.yul\":4454:4481   */\n  and\n    /* \"#utility.yul\":4442:4482   */\n  dup2\n  add\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":4497:4531   */\n  dup2\n  gt\n    /* \"#utility.yul\":4533:4555   */\n  dup3\n  dup3\n  lt\n    /* \"#utility.yul\":4494:4556   */\n  or\n    /* \"#utility.yul\":4491:4579   */\n  iszero\n  tag_135\n  jumpi\n    /* \"#utility.yul\":4559:4577   */\n  tag_135\n  tag_97\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":4595:4597   */\n  0x40\n    /* \"#utility.yul\":4588:4610   */\n  mstore\n    /* \"#utility.yul\":4341:4616   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4621:4838   */\ntag_43:\n    /* \"#utility.yul\":4661:4662   */\n  0x00\n    /* \"#utility.yul\":4687:4688   */\n  dup3\n    /* \"#utility.yul\":4677:4809   */\n  tag_137\n  jumpi\n    /* \"#utility.yul\":4731:4741   */\n  0x4e487b71\n    /* \"#utility.yul\":4726:4729   */\n  0xe0\n    /* \"#utility.yul\":4722:4742   */\n  shl\n    /* \"#utility.yul\":4719:4720   */\n  0x00\n    /* \"#utility.yul\":4712:4743   */\n  mstore\n    /* \"#utility.yul\":4766:4770   */\n  0x12\n    /* \"#utility.yul\":4763:4764   */\n  0x04\n    /* \"#utility.yul\":4756:4771   */\n  mstore\n    /* \"#utility.yul\":4794:4798   */\n  0x24\n    /* \"#utility.yul\":4791:4792   */\n  0x00\n    /* \"#utility.yul\":4784:4799   */\n  revert\n    /* \"#utility.yul\":4677:4809   */\ntag_137:\n  pop\n    /* \"#utility.yul\":4823:4832   */\n  div\n  swap1\n    /* \"#utility.yul\":4621:4838   */\n  jump\t// out\n    /* \"#utility.yul\":4843:5011   */\ntag_41:\n    /* \"#utility.yul\":4883:4890   */\n  0x00\n    /* \"#utility.yul\":4949:4950   */\n  dup2\n    /* \"#utility.yul\":4945:4946   */\n  0x00\n    /* \"#utility.yul\":4941:4947   */\n  not\n    /* \"#utility.yul\":4937:4951   */\n  div\n    /* \"#utility.yul\":4934:4935   */\n  dup4\n    /* \"#utility.yul\":4931:4952   */\n  gt\n    /* \"#utility.yul\":4926:4927   */\n  dup3\n    /* \"#utility.yul\":4919:4928   */\n  iszero\n    /* \"#utility.yul\":4912:4929   */\n  iszero\n    /* \"#utility.yul\":4908:4953   */\n  and\n    /* \"#utility.yul\":4905:4976   */\n  iszero\n  tag_140\n  jumpi\n    /* \"#utility.yul\":4956:4974   */\n  tag_140\n  tag_141\n  jump\t// in\ntag_140:\n  pop\n    /* \"#utility.yul\":4996:5005   */\n  mul\n  swap1\n    /* \"#utility.yul\":4843:5011   */\n  jump\t// out\n    /* \"#utility.yul\":5016:5141   */\ntag_39:\n    /* \"#utility.yul\":5056:5060   */\n  0x00\n    /* \"#utility.yul\":5084:5085   */\n  dup3\n    /* \"#utility.yul\":5081:5082   */\n  dup3\n    /* \"#utility.yul\":5078:5086   */\n  lt\n    /* \"#utility.yul\":5075:5109   */\n  iszero\n  tag_144\n  jumpi\n    /* \"#utility.yul\":5089:5107   */\n  tag_144\n  tag_141\n  jump\t// in\ntag_144:\n  pop\n    /* \"#utility.yul\":5126:5135   */\n  sub\n  swap1\n    /* \"#utility.yul\":5016:5141   */\n  jump\t// out\n    /* \"#utility.yul\":5146:5526   */\ntag_75:\n    /* \"#utility.yul\":5225:5226   */\n  0x01\n    /* \"#utility.yul\":5221:5233   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":5268:5280   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":5289:5350   */\n  tag_146\n  jumpi\n    /* \"#utility.yul\":5343:5347   */\n  0x7f\n    /* \"#utility.yul\":5335:5341   */\n  dup3\n    /* \"#utility.yul\":5331:5348   */\n  and\n    /* \"#utility.yul\":5321:5348   */\n  swap2\n  pop\n    /* \"#utility.yul\":5289:5350   */\ntag_146:\n    /* \"#utility.yul\":5396:5398   */\n  0x20\n    /* \"#utility.yul\":5388:5394   */\n  dup3\n    /* \"#utility.yul\":5385:5399   */\n  lt\n    /* \"#utility.yul\":5365:5383   */\n  dup2\n    /* \"#utility.yul\":5362:5400   */\n  eq\n    /* \"#utility.yul\":5359:5520   */\n  iszero\n  tag_147\n  jumpi\n    /* \"#utility.yul\":5442:5452   */\n  0x4e487b71\n    /* \"#utility.yul\":5437:5440   */\n  0xe0\n    /* \"#utility.yul\":5433:5453   */\n  shl\n    /* \"#utility.yul\":5430:5431   */\n  0x00\n    /* \"#utility.yul\":5423:5454   */\n  mstore\n    /* \"#utility.yul\":5477:5481   */\n  0x22\n    /* \"#utility.yul\":5474:5475   */\n  0x04\n    /* \"#utility.yul\":5467:5482   */\n  mstore\n    /* \"#utility.yul\":5505:5509   */\n  0x24\n    /* \"#utility.yul\":5502:5503   */\n  0x00\n    /* \"#utility.yul\":5495:5510   */\n  revert\n    /* \"#utility.yul\":5359:5520   */\ntag_147:\n  pop\n    /* \"#utility.yul\":5146:5526   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5531:5658   */\ntag_141:\n    /* \"#utility.yul\":5592:5602   */\n  0x4e487b71\n    /* \"#utility.yul\":5587:5590   */\n  0xe0\n    /* \"#utility.yul\":5583:5603   */\n  shl\n    /* \"#utility.yul\":5580:5581   */\n  0x00\n    /* \"#utility.yul\":5573:5604   */\n  mstore\n    /* \"#utility.yul\":5623:5627   */\n  0x11\n    /* \"#utility.yul\":5620:5621   */\n  0x04\n    /* \"#utility.yul\":5613:5628   */\n  mstore\n    /* \"#utility.yul\":5647:5651   */\n  0x24\n    /* \"#utility.yul\":5644:5645   */\n  0x00\n    /* \"#utility.yul\":5637:5652   */\n  revert\n    /* \"#utility.yul\":5795:5922   */\ntag_97:\n    /* \"#utility.yul\":5856:5866   */\n  0x4e487b71\n    /* \"#utility.yul\":5851:5854   */\n  0xe0\n    /* \"#utility.yul\":5847:5867   */\n  shl\n    /* \"#utility.yul\":5844:5845   */\n  0x00\n    /* \"#utility.yul\":5837:5868   */\n  mstore\n    /* \"#utility.yul\":5887:5891   */\n  0x41\n    /* \"#utility.yul\":5884:5885   */\n  0x04\n    /* \"#utility.yul\":5877:5892   */\n  mstore\n    /* \"#utility.yul\":5911:5915   */\n  0x24\n    /* \"#utility.yul\":5908:5909   */\n  0x00\n    /* \"#utility.yul\":5901:5916   */\n  revert\n    /* \"#utility.yul\":5795:5922   */\ntag_85:\n    /* \"launchpad/contracts/launchpadChild.sol\":422:12433  contract LaunchpadChild is ReentrancyGuard, Pausable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"launchpad/contracts/launchpadChild.sol\":422:12433  contract LaunchpadChild is ReentrancyGuard, Pausable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8f5d036b\n      gt\n      tag_50\n      jumpi\n      dup1\n      0xc7bf5166\n      gt\n      tag_51\n      jumpi\n      dup1\n      0xe49dce66\n      gt\n      tag_52\n      jumpi\n      dup1\n      0xe49dce66\n      eq\n      tag_44\n      jumpi\n      dup1\n      0xea44c1bc\n      eq\n      tag_45\n      jumpi\n      dup1\n      0xee97f7f3\n      eq\n      tag_46\n      jumpi\n      dup1\n      0xf887ea40\n      eq\n      tag_47\n      jumpi\n      dup1\n      0xf89be593\n      eq\n      tag_48\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      dup1\n      0xc7bf5166\n      eq\n      tag_38\n      jumpi\n      dup1\n      0xc84c0387\n      eq\n      tag_39\n      jumpi\n      dup1\n      0xd132a8f4\n      eq\n      tag_40\n      jumpi\n      dup1\n      0xd4b9de51\n      eq\n      tag_41\n      jumpi\n      dup1\n      0xda2cbd50\n      eq\n      tag_42\n      jumpi\n      dup1\n      0xde284b3a\n      eq\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      dup1\n      0xa7bb5803\n      gt\n      tag_53\n      jumpi\n      dup1\n      0xa7bb5803\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xaba83150\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xb071cbe6\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xbca1da85\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xbe9feb30\n      eq\n      tag_36\n      jumpi\n      dup1\n      0xc45a0155\n      eq\n      tag_37\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_53:\n      dup1\n      0x8f5d036b\n      eq\n      tag_26\n      jumpi\n      dup1\n      0x957f1474\n      eq\n      tag_27\n      jumpi\n      dup1\n      0x9b8906ae\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xa0f7ab35\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xa5f0dea2\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xa611dc37\n      eq\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      dup1\n      0x51fb012d\n      gt\n      tag_54\n      jumpi\n      dup1\n      0x6b7f3df3\n      gt\n      tag_55\n      jumpi\n      dup1\n      0x6b7f3df3\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x6ef2e4d3\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x7284e416\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x78e97925\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x83b17fdd\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x85bf4946\n      eq\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      dup1\n      0x51fb012d\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x58a687ec\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x59663174\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x64db812e\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x66d003ac\n      eq\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      dup1\n      0x27a72c96\n      gt\n      tag_56\n      jumpi\n      dup1\n      0x27a72c96\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x27c8f835\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x3197cbb6\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x3c876081\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x48c54b9d\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x4ae01d52\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      dup1\n      0x017f6fae\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x039ce157\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x03bcf11d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x12e409c5\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x201a3419\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x238ac933\n      eq\n      tag_7\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"launchpad/contracts/launchpadChild.sol\":858:878  uint256 public feeBP */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n      tag_58\n      sload(0x07)\n      dup2\n      jump\n    tag_58:\n      mload(0x40)\n        /* \"#utility.yul\":15301:15326   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":15289:15291   */\n      0x20\n        /* \"#utility.yul\":15274:15292   */\n      add\n        /* \"launchpad/contracts/launchpadChild.sol\":858:878  uint256 public feeBP */\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"launchpad/contracts/launchpadChild.sol\":1653:1686  uint256 public tokenAmountForSale */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      pop\n      tag_58\n      sload(0x11)\n      dup2\n      jump\n        /* \"launchpad/contracts/launchpadChild.sol\":6402:6583  function abortSale() external onlyInitiator {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n      pop\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      stop\n        /* \"launchpad/contracts/launchpadChild.sol\":1585:1613  uint256 public minBuyPerUser */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      pop\n      tag_58\n      sload(0x10)\n      dup2\n      jump\n        /* \"launchpad/contracts/launchpadChild.sol\":11462:12431  function endSaleAllowClaim() external onlyInitiator nonReentrant {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      pop\n      tag_67\n      tag_75\n      jump\t// in\n        /* \"launchpad/contracts/launchpadChild.sol\":2097:2118  address public signer */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      pop\n      sload(0x14)\n      tag_77\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_77:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3708:3740   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3690:3741   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3678:3680   */\n      0x20\n        /* \"#utility.yul\":3663:3681   */\n      add\n        /* \"launchpad/contracts/launchpadChild.sol\":2097:2118  address public signer */\n      tag_60\n        /* \"#utility.yul\":3544:3747   */\n      jump\n        /* \"launchpad/contracts/launchpadChild.sol\":1422:1453  uint256 public teamVestDuration */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_81\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_81:\n      pop\n      tag_58\n      sload(0x0e)\n      dup2\n      jump\n        /* \"launchpad/contracts/launchpadChild.sol\":2021:2092  address public deadAddress = 0x000000000000000000000000000000000000dEaD */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_85\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_85:\n      pop\n      sload(0x13)\n      tag_77\n      swap1\n      0x01000000\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"launchpad/contracts/launchpadChild.sol\":990:1012  uint256 public endTime */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_89\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_89:\n      pop\n      tag_58\n      sload(0x09)\n      dup2\n      jump\n        /* \"launchpad/contracts/launchpadChild.sol\":3207:3261  mapping(address => address) public usersVestingWallets */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_93\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_93:\n      pop\n      tag_77\n      tag_95\n      calldatasize\n      0x04\n      tag_96\n      jump\t// in\n    tag_95:\n      0x20\n      dup1\n      mstore\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"launchpad/contracts/launchpadChild.sol\":9800:10285  function claimTokens() external nonReentrant {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_99\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_99:\n      pop\n      tag_67\n      tag_101\n      jump\t// in\n        /* \"launchpad/contracts/launchpadChild.sol\":1227:1263  uint256 public liquidityLockDuration */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_102\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_102:\n      pop\n      tag_58\n      sload(0x0c)\n      dup2\n      jump\n        /* \"launchpad/contracts/launchpadChild.sol\":1961:1989  bool public whitelistEnabled */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_106\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_106:\n      pop\n      sload(0x13)\n      tag_107\n      swap1\n      0x010000\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\n    tag_107:\n      mload(0x40)\n        /* \"#utility.yul\":5382:5396   */\n      swap1\n      iszero\n        /* \"#utility.yul\":5375:5397   */\n      iszero\n        /* \"#utility.yul\":5357:5398   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5345:5347   */\n      0x20\n        /* \"#utility.yul\":5330:5348   */\n      add\n        /* \"launchpad/contracts/launchpadChild.sol\":1961:1989  bool public whitelistEnabled */\n      tag_60\n        /* \"#utility.yul\":5217:5404   */\n      jump\n        /* \"launchpad/contracts/launchpadChild.sol\":6617:6920  function finalizeSale() external onlyInitiator {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_111\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_111:\n      pop\n      tag_67\n      tag_113\n      jump\t// in\n        /* \"launchpad/contracts/launchpadChild.sol\":7821:8826  function buyTokensWhitelist(bytes memory signature)... */\n    tag_16:\n      tag_67\n      tag_115\n      calldatasize\n      0x04\n      tag_116\n      jump\t// in\n    tag_115:\n      tag_117\n      jump\t// in\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1098:1182  function paused() public view virtual returns (bool) {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_118\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_118:\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1168:1175  _paused */\n      and(0xff, sload(0x01))\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1098:1182  function paused() public view virtual returns (bool) {... */\n      jump(tag_107)\n        /* \"launchpad/contracts/launchpadChild.sol\":3107:3130  bool public saleAborted */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_122\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_122:\n      pop\n      sload(0x1f)\n      tag_107\n      swap1\n      0x010000\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\n        /* \"launchpad/contracts/launchpadChild.sol\":2766:2798  address payable public recipient */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_126\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_126:\n      pop\n      sload(0x1c)\n      tag_77\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"launchpad/contracts/launchpadChild.sol\":3314:3362  mapping(address => uint256) public userBuyAmount */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_131\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_131:\n      pop\n      tag_58\n      tag_133\n      calldatasize\n      0x04\n      tag_96\n      jump\t// in\n    tag_133:\n      mstore(0x20, 0x21)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"launchpad/contracts/launchpadChild.sol\":1731:1769  uint256 public tokenAmountForLiquidity */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_136\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_136:\n      pop\n      tag_58\n      sload(0x12)\n      dup2\n      jump\n        /* \"launchpad/contracts/launchpadChild.sol\":2646:2671  string public description */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_140\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_140:\n      pop\n      tag_141\n      tag_142\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n        /* \"launchpad/contracts/launchpadChild.sol\":917:941  uint256 public startTime */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_145\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_145:\n      pop\n      tag_58\n      sload(0x08)\n      dup2\n      jump\n        /* \"launchpad/contracts/launchpadChild.sol\":491:522  uint256 public tokenTotalAmount */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_149\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_149:\n      pop\n      tag_58\n      sload(0x02)\n      dup2\n      jump\n        /* \"launchpad/contracts/launchpadChild.sol\":1891:1918  bool public teamVestEnabled */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_153\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_153:\n      pop\n      sload(0x13)\n      tag_107\n      swap1\n      0x0100\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\n        /* \"launchpad/contracts/launchpadChild.sol\":10397:10981  function claimStaleEth() external nonReentrant {... */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_157\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_157:\n      pop\n      tag_67\n      tag_159\n      jump\t// in\n        /* \"launchpad/contracts/launchpadChild.sol\":6924:7817  function buyTokensPublic() external payable nonReentrant whenNotPaused {... */\n    tag_27:\n      tag_67\n      tag_161\n      jump\t// in\n        /* \"launchpad/contracts/launchpadChild.sol\":3025:3046  bool public saleEnded */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_162\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_162:\n      pop\n      sload(0x1f)\n      tag_107\n      swap1\n      0x0100\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\n        /* \"launchpad/contracts/launchpadChild.sol\":576:613  uint256 public listingTokensPerOneEth */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_166\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_166:\n      pop\n      tag_58\n      sload(0x03)\n      dup2\n      jump\n        /* \"launchpad/contracts/launchpadChild.sol\":2963:2988  bool public saleFinalized */\n    tag_30:\n      callvalue\n      dup1\n      iszero\n      tag_170\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_170:\n      pop\n      sload(0x1f)\n      tag_107\n      swap1\n      0xff\n      and\n      dup2\n      jump\n        /* \"launchpad/contracts/launchpadChild.sol\":664:695  uint256 public liquidityShareBP */\n    tag_31:\n      callvalue\n      dup1\n      iszero\n      tag_174\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_174:\n      pop\n      tag_58\n      sload(0x04)\n      dup2\n      jump\n        /* \"launchpad/contracts/launchpadChild.sol\":9315:9796  function splitSignature(bytes memory sig)... */\n    tag_32:\n      callvalue\n      dup1\n      iszero\n      tag_178\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_178:\n      pop\n      tag_179\n      tag_180\n      calldatasize\n      0x04\n      tag_116\n      jump\t// in\n    tag_180:\n      tag_181\n      jump\t// in\n    tag_179:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":15565:15569   */\n      0xff\n        /* \"#utility.yul\":15553:15570   */\n      swap1\n      swap5\n      and\n        /* \"#utility.yul\":15535:15571   */\n      dup5\n      mstore\n        /* \"#utility.yul\":15602:15604   */\n      0x20\n        /* \"#utility.yul\":15587:15605   */\n      dup5\n      add\n        /* \"#utility.yul\":15580:15614   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":15630:15648   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":15623:15657   */\n      mstore\n        /* \"#utility.yul\":15523:15525   */\n      0x60\n        /* \"#utility.yul\":15508:15526   */\n      add\n        /* \"launchpad/contracts/launchpadChild.sol\":9315:9796  function splitSignature(bytes memory sig)... */\n      tag_60\n        /* \"#utility.yul\":15337:15663   */\n      jump\n        /* \"launchpad/contracts/launchpadChild.sol\":2708:2730  string public imageUrl */\n    tag_33:\n      callvalue\n      dup1\n      iszero\n      tag_184\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_184:\n      pop\n      tag_141\n      tag_186\n      jump\t// in\n        /* \"launchpad/contracts/launchpadChild.sol\":758:780  uint256 public hardcap */\n    tag_34:\n      callvalue\n      dup1\n      iszero\n      tag_188\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_188:\n      pop\n      tag_58\n      sload(0x05)\n      dup2\n      jump\n        /* \"launchpad/contracts/launchpadChild.sol\":2824:2860  address payable public saleInitiator */\n    tag_35:\n      callvalue\n      dup1\n      iszero\n      tag_192\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_192:\n      pop\n      sload(0x1d)\n      tag_77\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"launchpad/contracts/launchpadChild.sol\":1059:1085  uint256 public wlStartTime */\n    tag_36:\n      callvalue\n      dup1\n      iszero\n      tag_196\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_196:\n      pop\n      tag_58\n      sload(0x0a)\n      dup2\n      jump\n        /* \"launchpad/contracts/launchpadChild.sol\":2429:2461  IUniswapV2Factory public factory */\n    tag_37:\n      callvalue\n      dup1\n      iszero\n      tag_200\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_200:\n      pop\n      sload(0x17)\n      tag_77\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"launchpad/contracts/launchpadChild.sol\":1144:1178  uint256 public saleTokensPerOneEth */\n    tag_38:\n      callvalue\n      dup1\n      iszero\n      tag_205\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_205:\n      pop\n      tag_58\n      sload(0x0b)\n      dup2\n      jump\n        /* \"launchpad/contracts/launchpadChild.sol\":2589:2610  uint256 public saleId */\n    tag_39:\n      callvalue\n      dup1\n      iszero\n      tag_209\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_209:\n      pop\n      tag_58\n      sload(0x19)\n      dup2\n      jump\n        /* \"launchpad/contracts/launchpadChild.sol\":6127:6236  function totalBuyTokens() public view returns (uint256) {... */\n    tag_40:\n      callvalue\n      dup1\n      iszero\n      tag_213\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_213:\n      pop\n      tag_58\n      tag_215\n      jump\t// in\n        /* \"launchpad/contracts/launchpadChild.sol\":1820:1847  bool public userVestEnabled */\n    tag_41:\n      callvalue\n      dup1\n      iszero\n      tag_217\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_217:\n      pop\n      sload(0x13)\n      tag_107\n      swap1\n      0xff\n      and\n      dup2\n      jump\n        /* \"launchpad/contracts/launchpadChild.sol\":2893:2919  uint256 public totalBuyEth */\n    tag_42:\n      callvalue\n      dup1\n      iszero\n      tag_221\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_221:\n      pop\n      tag_58\n      sload(0x1e)\n      dup2\n      jump\n        /* \"launchpad/contracts/launchpadChild.sol\":1517:1545  uint256 public maxBuyPerUser */\n    tag_43:\n      callvalue\n      dup1\n      iszero\n      tag_225\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_225:\n      pop\n      tag_58\n      sload(0x0f)\n      dup2\n      jump\n        /* \"launchpad/contracts/launchpadChild.sol\":8830:9311  function verify(... */\n    tag_44:\n      callvalue\n      dup1\n      iszero\n      tag_229\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_229:\n      pop\n      tag_107\n      tag_231\n      calldatasize\n      0x04\n      tag_232\n      jump\t// in\n    tag_231:\n      tag_233\n      jump\t// in\n        /* \"launchpad/contracts/launchpadChild.sol\":1328:1359  uint256 public userVestDuration */\n    tag_45:\n      callvalue\n      dup1\n      iszero\n      tag_235\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_235:\n      pop\n      tag_58\n      sload(0x0d)\n      dup2\n      jump\n        /* \"launchpad/contracts/launchpadChild.sol\":2172:2202  ILaunchpadMaster public master */\n    tag_46:\n      callvalue\n      dup1\n      iszero\n      tag_239\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_239:\n      pop\n      sload(0x15)\n      tag_77\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"launchpad/contracts/launchpadChild.sol\":2346:2378  IUniswapV2Router02 public router */\n    tag_47:\n      callvalue\n      dup1\n      iszero\n      tag_244\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_244:\n      pop\n      sload(0x16)\n      tag_77\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"launchpad/contracts/launchpadChild.sol\":808:830  uint256 public softcap */\n    tag_48:\n      callvalue\n      dup1\n      iszero\n      tag_249\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_249:\n      pop\n      tag_58\n      sload(0x06)\n      dup2\n      jump\n        /* \"launchpad/contracts/launchpadChild.sol\":2525:2544  IERC20 public token */\n    tag_49:\n      callvalue\n      dup1\n      iszero\n      tag_253\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_253:\n      pop\n      sload(0x18)\n      tag_77\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"launchpad/contracts/launchpadChild.sol\":6402:6583  function abortSale() external onlyInitiator {... */\n    tag_68:\n        /* \"launchpad/contracts/launchpadChild.sol\":6052:6065  saleInitiator */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x1d))\n        /* \"launchpad/contracts/launchpadChild.sol\":6069:6079  msg.sender */\n      caller\n        /* \"launchpad/contracts/launchpadChild.sol\":6052:6079  saleInitiator == msg.sender */\n      eq\n        /* \"launchpad/contracts/launchpadChild.sol\":6044:6111  require(saleInitiator == msg.sender, \"caller is not the initiator\") */\n      tag_259\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_260\n      swap1\n      tag_261\n      jump\t// in\n    tag_260:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_259:\n        /* \"launchpad/contracts/launchpadChild.sol\":6461:6470  saleEnded */\n      sload(0x1f)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"launchpad/contracts/launchpadChild.sol\":6460:6470  !saleEnded */\n      iszero\n        /* \"launchpad/contracts/launchpadChild.sol\":6452:6503  require(!saleEnded, \"claiming has already started\") */\n      tag_263\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12706:12708   */\n      0x20\n        /* \"launchpad/contracts/launchpadChild.sol\":6452:6503  require(!saleEnded, \"claiming has already started\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12688:12709   */\n      mstore\n        /* \"#utility.yul\":12745:12747   */\n      0x1c\n        /* \"#utility.yul\":12725:12743   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12718:12748   */\n      mstore\n        /* \"#utility.yul\":12784:12814   */\n      0x636c61696d696e672068617320616c7265616479207374617274656400000000\n        /* \"#utility.yul\":12764:12782   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12757:12815   */\n      mstore\n        /* \"#utility.yul\":12832:12850   */\n      0x64\n      add\n        /* \"launchpad/contracts/launchpadChild.sol\":6452:6503  require(!saleEnded, \"claiming has already started\") */\n      tag_260\n        /* \"#utility.yul\":12504:12856   */\n      jump\n        /* \"launchpad/contracts/launchpadChild.sol\":6452:6503  require(!saleEnded, \"claiming has already started\") */\n    tag_263:\n        /* \"launchpad/contracts/launchpadChild.sol\":6518:6529  saleAborted */\n      sload(0x1f)\n      0x010000\n      swap1\n      div\n      0xff\n      and\n        /* \"launchpad/contracts/launchpadChild.sol\":6517:6529  !saleAborted */\n      iszero\n        /* \"launchpad/contracts/launchpadChild.sol\":6509:6554  require(!saleAborted, \"sale already aborted\") */\n      tag_266\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7900:7902   */\n      0x20\n        /* \"launchpad/contracts/launchpadChild.sol\":6509:6554  require(!saleAborted, \"sale already aborted\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7882:7903   */\n      mstore\n        /* \"#utility.yul\":7939:7941   */\n      0x14\n        /* \"#utility.yul\":7919:7937   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7912:7942   */\n      mstore\n      shl(0x62, 0x1cd85b1948185b1c9958591e4818589bdc9d1959)\n        /* \"#utility.yul\":7958:7976   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7951:8001   */\n      mstore\n        /* \"#utility.yul\":8018:8036   */\n      0x64\n      add\n        /* \"launchpad/contracts/launchpadChild.sol\":6509:6554  require(!saleAborted, \"sale already aborted\") */\n      tag_260\n        /* \"#utility.yul\":7698:8042   */\n      jump\n        /* \"launchpad/contracts/launchpadChild.sol\":6509:6554  require(!saleAborted, \"sale already aborted\") */\n    tag_266:\n        /* \"launchpad/contracts/launchpadChild.sol\":6560:6571  saleAborted */\n      0x1f\n        /* \"launchpad/contracts/launchpadChild.sol\":6560:6578  saleAborted = true */\n      dup1\n      sload\n      not(0xff0000)\n      and\n      0x010000\n      or\n      swap1\n      sstore\n        /* \"launchpad/contracts/launchpadChild.sol\":6402:6583  function abortSale() external onlyInitiator {... */\n      jump\t// out\n        /* \"launchpad/contracts/launchpadChild.sol\":11462:12431  function endSaleAllowClaim() external onlyInitiator nonReentrant {... */\n    tag_75:\n        /* \"launchpad/contracts/launchpadChild.sol\":6052:6065  saleInitiator */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x1d))\n        /* \"launchpad/contracts/launchpadChild.sol\":6069:6079  msg.sender */\n      caller\n        /* \"launchpad/contracts/launchpadChild.sol\":6052:6079  saleInitiator == msg.sender */\n      eq\n        /* \"launchpad/contracts/launchpadChild.sol\":6044:6111  require(saleInitiator == msg.sender, \"caller is not the initiator\") */\n      tag_270\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_260\n      swap1\n      tag_261\n      jump\t// in\n    tag_270:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2332  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2344  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_273\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_260\n      swap1\n      tag_275\n      jump\t// in\n    tag_273:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2462  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2473  _status = _ENTERED */\n      sstore\n        /* \"launchpad/contracts/launchpadChild.sol\":11542:11553  saleAborted */\n      sload(0x1f)\n      0x010000\n      swap1\n      div\n      0xff\n      and\n        /* \"launchpad/contracts/launchpadChild.sol\":11541:11553  !saleAborted */\n      iszero\n        /* \"launchpad/contracts/launchpadChild.sol\":11533:11574  require(!saleAborted, \"sale was aborted\") */\n      tag_277\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_260\n      swap1\n      tag_279\n      jump\t// in\n    tag_277:\n        /* \"launchpad/contracts/launchpadChild.sol\":11588:11601  saleFinalized */\n      and(0xff, sload(0x1f))\n        /* \"launchpad/contracts/launchpadChild.sol\":11580:11627  require(saleFinalized, \"sale wasn't finalized\") */\n      tag_280\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12356:12358   */\n      0x20\n        /* \"launchpad/contracts/launchpadChild.sol\":11580:11627  require(saleFinalized, \"sale wasn't finalized\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12338:12359   */\n      mstore\n        /* \"#utility.yul\":12395:12397   */\n      0x15\n        /* \"#utility.yul\":12375:12393   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12368:12398   */\n      mstore\n      shl(0x5a, 0x1cd85b19481dd85cdb89dd08199a5b985b1a5e9959)\n        /* \"#utility.yul\":12414:12432   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12407:12458   */\n      mstore\n        /* \"#utility.yul\":12475:12493   */\n      0x64\n      add\n        /* \"launchpad/contracts/launchpadChild.sol\":11580:11627  require(saleFinalized, \"sale wasn't finalized\") */\n      tag_260\n        /* \"#utility.yul\":12154:12499   */\n      jump\n        /* \"launchpad/contracts/launchpadChild.sol\":11580:11627  require(saleFinalized, \"sale wasn't finalized\") */\n    tag_280:\n        /* \"launchpad/contracts/launchpadChild.sol\":11655:11662  softcap */\n      sload(0x06)\n        /* \"launchpad/contracts/launchpadChild.sol\":11641:11652  totalBuyEth */\n      sload(0x1e)\n        /* \"launchpad/contracts/launchpadChild.sol\":11641:11662  totalBuyEth > softcap */\n      gt\n        /* \"launchpad/contracts/launchpadChild.sol\":11633:11694  require(totalBuyEth > softcap, \"not enough tokens were sold\") */\n      tag_283\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14237:14239   */\n      0x20\n        /* \"launchpad/contracts/launchpadChild.sol\":11633:11694  require(totalBuyEth > softcap, \"not enough tokens were sold\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14219:14240   */\n      mstore\n        /* \"#utility.yul\":14276:14278   */\n      0x1b\n        /* \"#utility.yul\":14256:14274   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14249:14279   */\n      mstore\n        /* \"#utility.yul\":14315:14344   */\n      0x6e6f7420656e6f75676820746f6b656e73207765726520736f6c640000000000\n        /* \"#utility.yul\":14295:14313   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14288:14345   */\n      mstore\n        /* \"#utility.yul\":14362:14380   */\n      0x64\n      add\n        /* \"launchpad/contracts/launchpadChild.sol\":11633:11694  require(totalBuyEth > softcap, \"not enough tokens were sold\") */\n      tag_260\n        /* \"#utility.yul\":14035:14386   */\n      jump\n        /* \"launchpad/contracts/launchpadChild.sol\":11633:11694  require(totalBuyEth > softcap, \"not enough tokens were sold\") */\n    tag_283:\n        /* \"launchpad/contracts/launchpadChild.sol\":11709:11718  saleEnded */\n      sload(0x1f)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"launchpad/contracts/launchpadChild.sol\":11708:11718  !saleEnded */\n      iszero\n        /* \"launchpad/contracts/launchpadChild.sol\":11700:11745  require(!saleEnded, \"sale was already ended\") */\n      tag_286\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10138:10140   */\n      0x20\n        /* \"launchpad/contracts/launchpadChild.sol\":11700:11745  require(!saleEnded, \"sale was already ended\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10120:10141   */\n      mstore\n        /* \"#utility.yul\":10177:10179   */\n      0x16\n        /* \"#utility.yul\":10157:10175   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10150:10180   */\n      mstore\n      shl(0x52, 0x1cd85b19481dd85cc8185b1c9958591e48195b991959)\n        /* \"#utility.yul\":10196:10214   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10189:10241   */\n      mstore\n        /* \"#utility.yul\":10258:10276   */\n      0x64\n      add\n        /* \"launchpad/contracts/launchpadChild.sol\":11700:11745  require(!saleEnded, \"sale was already ended\") */\n      tag_260\n        /* \"#utility.yul\":9936:10282   */\n      jump\n        /* \"launchpad/contracts/launchpadChild.sol\":11700:11745  require(!saleEnded, \"sale was already ended\") */\n    tag_286:\n        /* \"launchpad/contracts/launchpadChild.sol\":11752:11761  saleEnded */\n      0x1f\n        /* \"launchpad/contracts/launchpadChild.sol\":11752:11768  saleEnded = true */\n      dup1\n      sload\n      not(0xff00)\n      and\n      0x0100\n      or\n      swap1\n      sstore\n        /* \"launchpad/contracts/launchpadChild.sol\":11861:11883  listingTokensPerOneEth */\n      sload(0x03)\n        /* \"launchpad/contracts/launchpadChild.sol\":11752:11768  saleEnded = true */\n      0x00\n      swap1\n        /* \"launchpad/contracts/launchpadChild.sol\":11842:11858  totalBuyTokens() */\n      tag_289\n        /* \"launchpad/contracts/launchpadChild.sol\":11842:11856  totalBuyTokens */\n      tag_215\n        /* \"launchpad/contracts/launchpadChild.sol\":11842:11858  totalBuyTokens() */\n      jump\t// in\n    tag_289:\n        /* \"launchpad/contracts/launchpadChild.sol\":11842:11883  totalBuyTokens() / listingTokensPerOneEth */\n      tag_290\n      swap2\n      swap1\n      tag_291\n      jump\t// in\n    tag_290:\n        /* \"launchpad/contracts/launchpadChild.sol\":11810:11883  uint256 ethAmountForLiquidity = totalBuyTokens() / listingTokensPerOneEth */\n      swap1\n      pop\n        /* \"launchpad/contracts/launchpadChild.sol\":11938:11975  uint256 actualTokenAmountForLiquidity */\n      0x00\n        /* \"launchpad/contracts/launchpadChild.sol\":12026:12033  hardcap */\n      sload(0x05)\n        /* \"launchpad/contracts/launchpadChild.sol\":12011:12022  totalBuyEth */\n      sload(0x1e)\n        /* \"launchpad/contracts/launchpadChild.sol\":11979:12002  tokenAmountForLiquidity */\n      sload(0x12)\n        /* \"launchpad/contracts/launchpadChild.sol\":11979:12022  tokenAmountForLiquidity *... */\n      tag_292\n      swap2\n      swap1\n      tag_293\n      jump\t// in\n    tag_292:\n        /* \"launchpad/contracts/launchpadChild.sol\":11978:12033  (tokenAmountForLiquidity *... */\n      tag_294\n      swap2\n      swap1\n      tag_291\n      jump\t// in\n    tag_294:\n        /* \"launchpad/contracts/launchpadChild.sol\":12040:12045  token */\n      sload(0x18)\n        /* \"launchpad/contracts/launchpadChild.sol\":12062:12068  router */\n      sload(0x16)\n        /* \"launchpad/contracts/launchpadChild.sol\":12040:12101  token.approve(address(router), actualTokenAmountForLiquidity) */\n      mload(0x40)\n      shl(0xe0, 0x095ea7b3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"launchpad/contracts/launchpadChild.sol\":12062:12068  router */\n      swap2\n      dup3\n      and\n        /* \"launchpad/contracts/launchpadChild.sol\":12040:12101  token.approve(address(router), actualTokenAmountForLiquidity) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4150:4201   */\n      mstore\n        /* \"#utility.yul\":4217:4235   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":4210:4244   */\n      dup5\n      swap1\n      mstore\n        /* \"launchpad/contracts/launchpadChild.sol\":11938:12033  uint256 actualTokenAmountForLiquidity = (tokenAmountForLiquidity *... */\n      swap3\n      swap4\n      pop\n        /* \"launchpad/contracts/launchpadChild.sol\":12040:12045  token */\n      and\n      swap1\n        /* \"launchpad/contracts/launchpadChild.sol\":12040:12053  token.approve */\n      0x095ea7b3\n      swap1\n        /* \"#utility.yul\":4123:4141   */\n      0x44\n      add\n        /* \"launchpad/contracts/launchpadChild.sol\":12040:12101  token.approve(address(router), actualTokenAmountForLiquidity) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_297\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_297:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_299\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_299:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_300\n      swap2\n      swap1\n      tag_301\n      jump\t// in\n    tag_300:\n      pop\n        /* \"launchpad/contracts/launchpadChild.sol\":12107:12113  router */\n      sload(0x16)\n        /* \"launchpad/contracts/launchpadChild.sol\":12175:12180  token */\n      sload(0x18)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"launchpad/contracts/launchpadChild.sol\":12107:12113  router */\n      swap2\n      dup3\n      and\n      swap2\n        /* \"launchpad/contracts/launchpadChild.sol\":12107:12129  router.addLiquidityETH */\n      0xf305d719\n      swap2\n        /* \"launchpad/contracts/launchpadChild.sol\":12137:12158  ethAmountForLiquidity */\n      dup6\n      swap2\n        /* \"launchpad/contracts/launchpadChild.sol\":12175:12180  token */\n      and\n        /* \"launchpad/contracts/launchpadChild.sol\":12189:12218  actualTokenAmountForLiquidity */\n      dup5\n        /* \"launchpad/contracts/launchpadChild.sol\":12107:12113  router */\n      0x00\n      dup1\n        /* \"launchpad/contracts/launchpadChild.sol\":12252:12256  this */\n      address\n        /* \"launchpad/contracts/launchpadChild.sol\":12265:12287  block.timestamp + 1000 */\n      tag_302\n        /* \"launchpad/contracts/launchpadChild.sol\":12265:12280  block.timestamp */\n      timestamp\n        /* \"launchpad/contracts/launchpadChild.sol\":12283:12287  1000 */\n      0x03e8\n        /* \"launchpad/contracts/launchpadChild.sol\":12265:12287  block.timestamp + 1000 */\n      tag_303\n      jump\t// in\n    tag_302:\n        /* \"launchpad/contracts/launchpadChild.sol\":12107:12293  router.addLiquidityETH{value: ethAmountForLiquidity}(... */\n      mload(0x40)\n      0xe0\n      dup10\n      swap1\n      shl\n      not(sub(shl(0xe0, 0x01), 0x01))\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4614:4629   */\n      swap7\n      dup8\n      and\n        /* \"launchpad/contracts/launchpadChild.sol\":12107:12293  router.addLiquidityETH{value: ethAmountForLiquidity}(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4596:4630   */\n      mstore\n        /* \"#utility.yul\":4646:4664   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":4639:4673   */\n      swap6\n      swap1\n      swap6\n      mstore\n        /* \"#utility.yul\":4689:4707   */\n      0x44\n      dup6\n      add\n        /* \"#utility.yul\":4682:4716   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":4732:4750   */\n      0x64\n      dup5\n      add\n        /* \"#utility.yul\":4725:4759   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":4796:4811   */\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":4775:4794   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":4768:4812   */\n      mstore\n        /* \"#utility.yul\":4828:4847   */\n      0xa4\n      dup2\n      add\n        /* \"#utility.yul\":4821:4856   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":4530:4549   */\n      0xc4\n      add\n        /* \"launchpad/contracts/launchpadChild.sol\":12107:12293  router.addLiquidityETH{value: ethAmountForLiquidity}(... */\n      0x60\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_306\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_306:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_308\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_308:\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_309\n      swap2\n      swap1\n      tag_310\n      jump\t// in\n    tag_309:\n      pop\n      pop\n        /* \"launchpad/contracts/launchpadChild.sol\":12299:12305  master */\n      sload(0x15)\n        /* \"launchpad/contracts/launchpadChild.sol\":12299:12318  master.feesWallet() */\n      0x40\n      dup1\n      mload\n      shl(0xe2, 0x1f9134b3)\n      dup2\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"launchpad/contracts/launchpadChild.sol\":12299:12305  master */\n      swap1\n      swap3\n      and\n      swap3\n      pop\n        /* \"launchpad/contracts/launchpadChild.sol\":12299:12316  master.feesWallet */\n      0x7e44d2cc\n      swap2\n        /* \"launchpad/contracts/launchpadChild.sol\":12299:12318  master.feesWallet() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"launchpad/contracts/launchpadChild.sol\":12299:12305  master */\n      dup7\n        /* \"launchpad/contracts/launchpadChild.sol\":12299:12318  master.feesWallet() */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_311\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_311:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_313\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_313:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_314\n      swap2\n      swap1\n      tag_315\n      jump\t// in\n    tag_314:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"launchpad/contracts/launchpadChild.sol\":12299:12323  master.feesWallet().call */\n      and\n        /* \"launchpad/contracts/launchpadChild.sol\":12356:12362  10_000 */\n      0x2710\n        /* \"launchpad/contracts/launchpadChild.sol\":12347:12352  feeBP */\n      sload(0x07)\n        /* \"launchpad/contracts/launchpadChild.sol\":12333:12344  totalBuyEth */\n      sload(0x1e)\n        /* \"launchpad/contracts/launchpadChild.sol\":12333:12352  totalBuyEth * feeBP */\n      tag_316\n      swap2\n      swap1\n      tag_293\n      jump\t// in\n    tag_316:\n        /* \"launchpad/contracts/launchpadChild.sol\":12332:12362  (totalBuyEth * feeBP) / 10_000 */\n      tag_317\n      swap2\n      swap1\n      tag_291\n      jump\t// in\n    tag_317:\n        /* \"launchpad/contracts/launchpadChild.sol\":12299:12368  master.feesWallet().call{value: ((totalBuyEth * feeBP) / 10_000)}(\"\") */\n      mload(0x40)\n      0x00\n      dup2\n      dup2\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_322\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_321)\n    tag_322:\n      0x60\n      swap2\n      pop\n    tag_321:\n      pop\n      pop\n        /* \"launchpad/contracts/launchpadChild.sol\":12374:12387  saleInitiator */\n      sload(0x1d)\n        /* \"launchpad/contracts/launchpadChild.sol\":12374:12426  saleInitiator.call{value: address(this).balance}(\"\") */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"launchpad/contracts/launchpadChild.sol\":12374:12387  saleInitiator */\n      swap1\n      swap2\n      and\n      swap2\n      pop\n        /* \"launchpad/contracts/launchpadChild.sol\":12400:12421  address(this).balance */\n      selfbalance\n      swap1\n        /* \"launchpad/contracts/launchpadChild.sol\":12374:12426  saleInitiator.call{value: address(this).balance}(\"\") */\n      0x00\n      dup2\n      dup2\n      dup2\n        /* \"launchpad/contracts/launchpadChild.sol\":12400:12421  address(this).balance */\n      dup6\n        /* \"launchpad/contracts/launchpadChild.sol\":12374:12387  saleInitiator */\n      dup8\n        /* \"launchpad/contracts/launchpadChild.sol\":12374:12426  saleInitiator.call{value: address(this).balance}(\"\") */\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_326\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_325)\n    tag_326:\n      0x60\n      swap2\n      pop\n    tag_325:\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2635  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2650  _status = _NOT_ENTERED */\n      sstore\n      pop\n      pop\n      pop\n        /* \"launchpad/contracts/launchpadChild.sol\":11462:12431  function endSaleAllowClaim() external onlyInitiator nonReentrant {... */\n      jump\t// out\n        /* \"launchpad/contracts/launchpadChild.sol\":9800:10285  function claimTokens() external nonReentrant {... */\n    tag_101:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2332  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2344  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_328\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_260\n      swap1\n      tag_275\n      jump\t// in\n    tag_328:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2462  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2473  _status = _ENTERED */\n      sstore\n        /* \"launchpad/contracts/launchpadChild.sol\":9867:9878  saleAborted */\n      sload(0x1f)\n      0x010000\n      swap1\n      div\n      0xff\n      and\n        /* \"launchpad/contracts/launchpadChild.sol\":9866:9878  !saleAborted */\n      iszero\n        /* \"launchpad/contracts/launchpadChild.sol\":9851:9947  require(... */\n      tag_331\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13470:13472   */\n      0x20\n        /* \"launchpad/contracts/launchpadChild.sol\":9851:9947  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13452:13473   */\n      mstore\n        /* \"#utility.yul\":13509:13511   */\n      0x35\n        /* \"#utility.yul\":13489:13507   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13482:13512   */\n      mstore\n        /* \"#utility.yul\":13548:13582   */\n      0x73616c65207761732061626f727465642c20706c656173652075736520636c61\n        /* \"#utility.yul\":13528:13546   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13521:13583   */\n      mstore\n      shl(0x59, 0x34b6a9ba30b632a2ba34141490333ab731ba34b7b7)\n        /* \"#utility.yul\":13599:13617   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13592:13643   */\n      mstore\n        /* \"#utility.yul\":13660:13679   */\n      0x84\n      add\n        /* \"launchpad/contracts/launchpadChild.sol\":9851:9947  require(... */\n      tag_260\n        /* \"#utility.yul\":13268:13685   */\n      jump\n        /* \"launchpad/contracts/launchpadChild.sol\":9851:9947  require(... */\n    tag_331:\n        /* \"launchpad/contracts/launchpadChild.sol\":9975:9985  msg.sender */\n      caller\n        /* \"launchpad/contracts/launchpadChild.sol\":9989:9990  0 */\n      0x00\n        /* \"launchpad/contracts/launchpadChild.sol\":9961:9986  userBuyAmount[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"launchpad/contracts/launchpadChild.sol\":9961:9974  userBuyAmount */\n      0x21\n        /* \"launchpad/contracts/launchpadChild.sol\":9961:9986  userBuyAmount[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"launchpad/contracts/launchpadChild.sol\":9953:10026  require(userBuyAmount[msg.sender] > 0, \"user hasn't any tokens to claim\") */\n      tag_334\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7540:7542   */\n      0x20\n        /* \"launchpad/contracts/launchpadChild.sol\":9953:10026  require(userBuyAmount[msg.sender] > 0, \"user hasn't any tokens to claim\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7522:7543   */\n      mstore\n        /* \"#utility.yul\":7579:7581   */\n      0x1f\n        /* \"#utility.yul\":7559:7577   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7552:7582   */\n      mstore\n        /* \"#utility.yul\":7618:7651   */\n      0x75736572206861736e277420616e7920746f6b656e7320746f20636c61696d00\n        /* \"#utility.yul\":7598:7616   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7591:7652   */\n      mstore\n        /* \"#utility.yul\":7669:7687   */\n      0x64\n      add\n        /* \"launchpad/contracts/launchpadChild.sol\":9953:10026  require(userBuyAmount[msg.sender] > 0, \"user hasn't any tokens to claim\") */\n      tag_260\n        /* \"#utility.yul\":7338:7693   */\n      jump\n        /* \"launchpad/contracts/launchpadChild.sol\":9953:10026  require(userBuyAmount[msg.sender] > 0, \"user hasn't any tokens to claim\") */\n    tag_334:\n        /* \"launchpad/contracts/launchpadChild.sol\":10040:10049  saleEnded */\n      sload(0x1f)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"launchpad/contracts/launchpadChild.sol\":10032:10089  require(saleEnded, \"initiator hasn't ended the sale yet\") */\n      tag_337\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14593:14595   */\n      0x20\n        /* \"launchpad/contracts/launchpadChild.sol\":10032:10089  require(saleEnded, \"initiator hasn't ended the sale yet\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14575:14596   */\n      mstore\n        /* \"#utility.yul\":14632:14634   */\n      0x23\n        /* \"#utility.yul\":14612:14630   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14605:14635   */\n      mstore\n        /* \"#utility.yul\":14671:14705   */\n      0x696e69746961746f72206861736e277420656e646564207468652073616c6520\n        /* \"#utility.yul\":14651:14669   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14644:14706   */\n      mstore\n      shl(0xea, 0x1e595d)\n        /* \"#utility.yul\":14722:14740   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":14715:14748   */\n      mstore\n        /* \"#utility.yul\":14765:14784   */\n      0x84\n      add\n        /* \"launchpad/contracts/launchpadChild.sol\":10032:10089  require(saleEnded, \"initiator hasn't ended the sale yet\") */\n      tag_260\n        /* \"#utility.yul\":14391:14790   */\n      jump\n        /* \"launchpad/contracts/launchpadChild.sol\":10032:10089  require(saleEnded, \"initiator hasn't ended the sale yet\") */\n    tag_337:\n        /* \"launchpad/contracts/launchpadChild.sol\":10148:10167  saleTokensPerOneEth */\n      sload(0x0b)\n        /* \"launchpad/contracts/launchpadChild.sol\":10134:10144  msg.sender */\n      caller\n        /* \"launchpad/contracts/launchpadChild.sol\":10096:10117  uint256 amountToClaim */\n      0x00\n        /* \"launchpad/contracts/launchpadChild.sol\":10120:10145  userBuyAmount[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"launchpad/contracts/launchpadChild.sol\":10120:10133  userBuyAmount */\n      0x21\n        /* \"launchpad/contracts/launchpadChild.sol\":10120:10145  userBuyAmount[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"launchpad/contracts/launchpadChild.sol\":10096:10117  uint256 amountToClaim */\n      swap1\n      swap2\n        /* \"launchpad/contracts/launchpadChild.sol\":10120:10167  userBuyAmount[msg.sender] * saleTokensPerOneEth */\n      tag_340\n      swap2\n      tag_293\n      jump\t// in\n    tag_340:\n        /* \"launchpad/contracts/launchpadChild.sol\":10187:10197  msg.sender */\n      caller\n        /* \"launchpad/contracts/launchpadChild.sol\":10201:10202  0 */\n      0x00\n        /* \"launchpad/contracts/launchpadChild.sol\":10173:10198  userBuyAmount[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"launchpad/contracts/launchpadChild.sol\":10173:10186  userBuyAmount */\n      0x21\n        /* \"launchpad/contracts/launchpadChild.sol\":10173:10198  userBuyAmount[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"launchpad/contracts/launchpadChild.sol\":10173:10202  userBuyAmount[msg.sender] = 0 */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"launchpad/contracts/launchpadChild.sol\":10213:10233  Debug(amountToClaim) */\n      mload\n        /* \"launchpad/contracts/launchpadChild.sol\":10096:10167  uint256 amountToClaim = userBuyAmount[msg.sender] * saleTokensPerOneEth */\n      swap1\n      swap2\n      pop\n        /* \"launchpad/contracts/launchpadChild.sol\":10213:10233  Debug(amountToClaim) */\n      0x8a36f5a234186d446e36a7df36ace663a05a580d9bea2dd899c6dd76a075d5fa\n      swap1\n      tag_341\n      swap1\n        /* \"launchpad/contracts/launchpadChild.sol\":10096:10167  uint256 amountToClaim = userBuyAmount[msg.sender] * saleTokensPerOneEth */\n      dup4\n        /* \"#utility.yul\":15301:15326   */\n      dup2\n      mstore\n        /* \"#utility.yul\":15289:15291   */\n      0x20\n        /* \"#utility.yul\":15274:15292   */\n      add\n      swap1\n        /* \"#utility.yul\":15155:15332   */\n      jump\n        /* \"launchpad/contracts/launchpadChild.sol\":10213:10233  Debug(amountToClaim) */\n    tag_341:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"launchpad/contracts/launchpadChild.sol\":10239:10244  token */\n      sload(0x18)\n        /* \"launchpad/contracts/launchpadChild.sol\":10239:10280  token.transfer(msg.sender, amountToClaim) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n        /* \"launchpad/contracts/launchpadChild.sol\":10254:10264  msg.sender */\n      caller\n        /* \"launchpad/contracts/launchpadChild.sol\":10239:10280  token.transfer(msg.sender, amountToClaim) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4150:4201   */\n      mstore\n        /* \"#utility.yul\":4217:4235   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":4210:4244   */\n      dup4\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"launchpad/contracts/launchpadChild.sol\":10239:10244  token */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"launchpad/contracts/launchpadChild.sol\":10239:10253  token.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":4123:4141   */\n      0x44\n      add\n        /* \"launchpad/contracts/launchpadChild.sol\":10239:10280  token.transfer(msg.sender, amountToClaim) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_343\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_343:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_345\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_345:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_346\n      swap2\n      swap1\n      tag_301\n      jump\t// in\n    tag_346:\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2635  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2650  _status = _NOT_ENTERED */\n      sstore\n        /* \"launchpad/contracts/launchpadChild.sol\":9800:10285  function claimTokens() external nonReentrant {... */\n      jump\t// out\n        /* \"launchpad/contracts/launchpadChild.sol\":6617:6920  function finalizeSale() external onlyInitiator {... */\n    tag_113:\n        /* \"launchpad/contracts/launchpadChild.sol\":6052:6065  saleInitiator */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x1d))\n        /* \"launchpad/contracts/launchpadChild.sol\":6069:6079  msg.sender */\n      caller\n        /* \"launchpad/contracts/launchpadChild.sol\":6052:6079  saleInitiator == msg.sender */\n      eq\n        /* \"launchpad/contracts/launchpadChild.sol\":6044:6111  require(saleInitiator == msg.sender, \"caller is not the initiator\") */\n      tag_348\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_260\n      swap1\n      tag_261\n      jump\t// in\n    tag_348:\n        /* \"launchpad/contracts/launchpadChild.sol\":6721:6732  saleAborted */\n      sload(0x1f)\n      0x010000\n      swap1\n      div\n      0xff\n      and\n        /* \"launchpad/contracts/launchpadChild.sol\":6720:6732  !saleAborted */\n      iszero\n        /* \"launchpad/contracts/launchpadChild.sol\":6712:6753  require(!saleAborted, \"sale was aborted\") */\n      tag_351\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_260\n      swap1\n      tag_279\n      jump\t// in\n    tag_351:\n        /* \"launchpad/contracts/launchpadChild.sol\":6808:6824  tokenTotalAmount */\n      sload(0x02)\n        /* \"launchpad/contracts/launchpadChild.sol\":6774:6779  token */\n      sload(0x18)\n        /* \"launchpad/contracts/launchpadChild.sol\":6774:6804  token.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"launchpad/contracts/launchpadChild.sol\":6798:6802  this */\n      address\n        /* \"launchpad/contracts/launchpadChild.sol\":6774:6804  token.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3690:3741   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"launchpad/contracts/launchpadChild.sol\":6774:6779  token */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"launchpad/contracts/launchpadChild.sol\":6774:6789  token.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":3663:3681   */\n      0x24\n      add\n        /* \"launchpad/contracts/launchpadChild.sol\":6774:6804  token.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_354\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_354:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_356\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_356:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_357\n      swap2\n      swap1\n      tag_358\n      jump\t// in\n    tag_357:\n        /* \"launchpad/contracts/launchpadChild.sol\":6774:6824  token.balanceOf(address(this)) >= tokenTotalAmount */\n      lt\n      iszero\n        /* \"launchpad/contracts/launchpadChild.sol\":6759:6889  require(... */\n      tag_359\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9720:9722   */\n      0x20\n        /* \"launchpad/contracts/launchpadChild.sol\":6759:6889  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9702:9723   */\n      mstore\n        /* \"#utility.yul\":9759:9761   */\n      0x31\n        /* \"#utility.yul\":9739:9757   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9732:9762   */\n      mstore\n        /* \"#utility.yul\":9798:9832   */\n      0x696e73756666696369656e7420616d6f756e74206f6620746f6b656e73207365\n        /* \"#utility.yul\":9778:9796   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9771:9833   */\n      mstore\n      shl(0x78, 0x6e7420746f207468652061646472657373)\n        /* \"#utility.yul\":9849:9867   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9842:9889   */\n      mstore\n        /* \"#utility.yul\":9906:9925   */\n      0x84\n      add\n        /* \"launchpad/contracts/launchpadChild.sol\":6759:6889  require(... */\n      tag_260\n        /* \"#utility.yul\":9518:9931   */\n      jump\n        /* \"launchpad/contracts/launchpadChild.sol\":6759:6889  require(... */\n    tag_359:\n        /* \"launchpad/contracts/launchpadChild.sol\":6895:6908  saleFinalized */\n      0x1f\n        /* \"launchpad/contracts/launchpadChild.sol\":6895:6915  saleFinalized = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"launchpad/contracts/launchpadChild.sol\":6911:6915  true */\n      0x01\n        /* \"launchpad/contracts/launchpadChild.sol\":6895:6915  saleFinalized = true */\n      or\n      swap1\n      sstore\n        /* \"launchpad/contracts/launchpadChild.sol\":6617:6920  function finalizeSale() external onlyInitiator {... */\n      jump\t// out\n        /* \"launchpad/contracts/launchpadChild.sol\":7821:8826  function buyTokensWhitelist(bytes memory signature)... */\n    tag_117:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2332  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2344  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_363\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_260\n      swap1\n      tag_275\n      jump\t// in\n    tag_363:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2462  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2473  _status = _ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1168:1175  _paused */\n      and(0xff, sload(0x01))\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1411:1420  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1403:1441  require(!paused(), \"Pausable: paused\") */\n      tag_367\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9375:9377   */\n      0x20\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1403:1441  require(!paused(), \"Pausable: paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9357:9378   */\n      mstore\n        /* \"#utility.yul\":9414:9416   */\n      0x10\n        /* \"#utility.yul\":9394:9412   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9387:9417   */\n      mstore\n      shl(0x82, 0x14185d5cd8589b194e881c185d5cd959)\n        /* \"#utility.yul\":9433:9451   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9426:9472   */\n      mstore\n        /* \"#utility.yul\":9489:9507   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1403:1441  require(!paused(), \"Pausable: paused\") */\n      tag_260\n        /* \"#utility.yul\":9173:9513   */\n      jump\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1403:1441  require(!paused(), \"Pausable: paused\") */\n    tag_367:\n        /* \"launchpad/contracts/launchpadChild.sol\":7949:8001  verify(signature, msg.sender, saleId, block.chainid) */\n      tag_371\n        /* \"launchpad/contracts/launchpadChild.sol\":7956:7965  signature */\n      dup2\n        /* \"launchpad/contracts/launchpadChild.sol\":7967:7977  msg.sender */\n      caller\n        /* \"launchpad/contracts/launchpadChild.sol\":7979:7985  saleId */\n      sload(0x19)\n        /* \"launchpad/contracts/launchpadChild.sol\":7987:8000  block.chainid */\n      chainid\n        /* \"launchpad/contracts/launchpadChild.sol\":7949:7955  verify */\n      tag_233\n        /* \"launchpad/contracts/launchpadChild.sol\":7949:8001  verify(signature, msg.sender, saleId, block.chainid) */\n      jump\t// in\n    tag_371:\n        /* \"launchpad/contracts/launchpadChild.sol\":7941:8002  require(verify(signature, msg.sender, saleId, block.chainid)) */\n      tag_372\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_372:\n        /* \"launchpad/contracts/launchpadChild.sol\":8017:8028  saleAborted */\n      sload(0x1f)\n      0x010000\n      swap1\n      div\n      0xff\n      and\n        /* \"launchpad/contracts/launchpadChild.sol\":8016:8028  !saleAborted */\n      iszero\n        /* \"launchpad/contracts/launchpadChild.sol\":8008:8049  require(!saleAborted, \"sale was aborted\") */\n      tag_373\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_260\n      swap1\n      tag_279\n      jump\t// in\n    tag_373:\n        /* \"launchpad/contracts/launchpadChild.sol\":8063:8076  saleFinalized */\n      and(0xff, sload(0x1f))\n        /* \"launchpad/contracts/launchpadChild.sol\":8055:8111  require(saleFinalized, \"sale hasn't been finalized yet\") */\n      tag_375\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10832:10834   */\n      0x20\n        /* \"launchpad/contracts/launchpadChild.sol\":8055:8111  require(saleFinalized, \"sale hasn't been finalized yet\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10814:10835   */\n      mstore\n        /* \"#utility.yul\":10871:10873   */\n      0x1e\n        /* \"#utility.yul\":10851:10869   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10844:10874   */\n      mstore\n        /* \"#utility.yul\":10910:10942   */\n      0x73616c65206861736e2774206265656e2066696e616c697a6564207965740000\n        /* \"#utility.yul\":10890:10908   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10883:10943   */\n      mstore\n        /* \"#utility.yul\":10960:10978   */\n      0x64\n      add\n        /* \"launchpad/contracts/launchpadChild.sol\":8055:8111  require(saleFinalized, \"sale hasn't been finalized yet\") */\n      tag_260\n        /* \"#utility.yul\":10630:10984   */\n      jump\n        /* \"launchpad/contracts/launchpadChild.sol\":8055:8111  require(saleFinalized, \"sale hasn't been finalized yet\") */\n    tag_375:\n        /* \"launchpad/contracts/launchpadChild.sol\":8143:8150  endTime */\n      sload(0x09)\n        /* \"launchpad/contracts/launchpadChild.sol\":8125:8140  block.timestamp */\n      timestamp\n        /* \"launchpad/contracts/launchpadChild.sol\":8125:8150  block.timestamp < endTime */\n      lt\n        /* \"launchpad/contracts/launchpadChild.sol\":8117:8169  require(block.timestamp < endTime, \"sale has ended\") */\n      tag_378\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10489:10491   */\n      0x20\n        /* \"launchpad/contracts/launchpadChild.sol\":8117:8169  require(block.timestamp < endTime, \"sale has ended\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10471:10492   */\n      mstore\n        /* \"#utility.yul\":10528:10530   */\n      0x0e\n        /* \"#utility.yul\":10508:10526   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10501:10531   */\n      mstore\n      shl(0x92, 0x1cd85b19481a185cc8195b991959)\n        /* \"#utility.yul\":10547:10565   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10540:10584   */\n      mstore\n        /* \"#utility.yul\":10601:10619   */\n      0x64\n      add\n        /* \"launchpad/contracts/launchpadChild.sol\":8117:8169  require(block.timestamp < endTime, \"sale has ended\") */\n      tag_260\n        /* \"#utility.yul\":10287:10625   */\n      jump\n        /* \"launchpad/contracts/launchpadChild.sol\":8117:8169  require(block.timestamp < endTime, \"sale has ended\") */\n    tag_378:\n        /* \"launchpad/contracts/launchpadChild.sol\":8201:8212  wlStartTime */\n      sload(0x0a)\n        /* \"launchpad/contracts/launchpadChild.sol\":8183:8198  block.timestamp */\n      timestamp\n        /* \"launchpad/contracts/launchpadChild.sol\":8183:8212  block.timestamp > wlStartTime */\n      gt\n        /* \"launchpad/contracts/launchpadChild.sol\":8175:8240  require(block.timestamp > wlStartTime, \"sale hasn't started yet\") */\n      tag_381\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9023:9025   */\n      0x20\n        /* \"launchpad/contracts/launchpadChild.sol\":8175:8240  require(block.timestamp > wlStartTime, \"sale hasn't started yet\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9005:9026   */\n      mstore\n        /* \"#utility.yul\":9062:9064   */\n      0x17\n        /* \"#utility.yul\":9042:9060   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9035:9065   */\n      mstore\n      shl(0x4a, 0x1cd85b19481a185cdb89dd081cdd185c9d1959081e595d)\n        /* \"#utility.yul\":9081:9099   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9074:9127   */\n      mstore\n        /* \"#utility.yul\":9144:9162   */\n      0x64\n      add\n        /* \"launchpad/contracts/launchpadChild.sol\":8175:8240  require(block.timestamp > wlStartTime, \"sale hasn't started yet\") */\n      tag_260\n        /* \"#utility.yul\":8821:9168   */\n      jump\n        /* \"launchpad/contracts/launchpadChild.sol\":8175:8240  require(block.timestamp > wlStartTime, \"sale hasn't started yet\") */\n    tag_381:\n        /* \"launchpad/contracts/launchpadChild.sol\":8302:8315  maxBuyPerUser */\n      sload(0x0f)\n        /* \"launchpad/contracts/launchpadChild.sol\":8287:8297  msg.sender */\n      caller\n        /* \"launchpad/contracts/launchpadChild.sol\":8273:8298  userBuyAmount[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"launchpad/contracts/launchpadChild.sol\":8273:8286  userBuyAmount */\n      0x21\n        /* \"launchpad/contracts/launchpadChild.sol\":8273:8298  userBuyAmount[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"launchpad/contracts/launchpadChild.sol\":8261:8298  msg.value + userBuyAmount[msg.sender] */\n      tag_384\n      swap1\n        /* \"launchpad/contracts/launchpadChild.sol\":8261:8270  msg.value */\n      callvalue\n        /* \"launchpad/contracts/launchpadChild.sol\":8261:8298  msg.value + userBuyAmount[msg.sender] */\n      tag_303\n      jump\t// in\n    tag_384:\n        /* \"launchpad/contracts/launchpadChild.sol\":8261:8315  msg.value + userBuyAmount[msg.sender] <= maxBuyPerUser */\n      gt\n      iszero\n        /* \"launchpad/contracts/launchpadChild.sol\":8246:8367  require(... */\n      tag_385\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_260\n      swap1\n      tag_387\n      jump\t// in\n    tag_385:\n        /* \"launchpad/contracts/launchpadChild.sol\":8394:8407  minBuyPerUser */\n      sload(0x10)\n        /* \"launchpad/contracts/launchpadChild.sol\":8381:8390  msg.value */\n      callvalue\n        /* \"launchpad/contracts/launchpadChild.sol\":8381:8407  msg.value >= minBuyPerUser */\n      lt\n      iszero\n        /* \"launchpad/contracts/launchpadChild.sol\":8373:8437  require(msg.value >= minBuyPerUser, \"you're not sending enough\") */\n      tag_388\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8249:8251   */\n      0x20\n        /* \"launchpad/contracts/launchpadChild.sol\":8373:8437  require(msg.value >= minBuyPerUser, \"you're not sending enough\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8231:8252   */\n      mstore\n        /* \"#utility.yul\":8288:8290   */\n      0x19\n        /* \"#utility.yul\":8268:8286   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8261:8291   */\n      mstore\n      shl(0x3b, 0x0f2deea4ee4ca40dcdee840e6cadcc8d2dcce40cadcdeeaced)\n        /* \"#utility.yul\":8307:8325   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8300:8355   */\n      mstore\n        /* \"#utility.yul\":8372:8390   */\n      0x64\n      add\n        /* \"launchpad/contracts/launchpadChild.sol\":8373:8437  require(msg.value >= minBuyPerUser, \"you're not sending enough\") */\n      tag_260\n        /* \"#utility.yul\":8047:8396   */\n      jump\n        /* \"launchpad/contracts/launchpadChild.sol\":8373:8437  require(msg.value >= minBuyPerUser, \"you're not sending enough\") */\n    tag_388:\n        /* \"launchpad/contracts/launchpadChild.sol\":8512:8530  tokenAmountForSale */\n      sload(0x11)\n        /* \"launchpad/contracts/launchpadChild.sol\":8492:8508  totalBuyTokens() */\n      tag_391\n        /* \"launchpad/contracts/launchpadChild.sol\":8492:8506  totalBuyTokens */\n      tag_215\n        /* \"launchpad/contracts/launchpadChild.sol\":8492:8508  totalBuyTokens() */\n      jump\t// in\n    tag_391:\n        /* \"launchpad/contracts/launchpadChild.sol\":8470:8489  saleTokensPerOneEth */\n      sload(0x0b)\n        /* \"launchpad/contracts/launchpadChild.sol\":8458:8489  msg.value * saleTokensPerOneEth */\n      tag_392\n      swap1\n        /* \"launchpad/contracts/launchpadChild.sol\":8458:8467  msg.value */\n      callvalue\n        /* \"launchpad/contracts/launchpadChild.sol\":8458:8489  msg.value * saleTokensPerOneEth */\n      tag_293\n      jump\t// in\n    tag_392:\n        /* \"launchpad/contracts/launchpadChild.sol\":8458:8508  msg.value * saleTokensPerOneEth + totalBuyTokens() */\n      tag_393\n      swap2\n      swap1\n      tag_303\n      jump\t// in\n    tag_393:\n        /* \"launchpad/contracts/launchpadChild.sol\":8458:8530  msg.value * saleTokensPerOneEth + totalBuyTokens() <= tokenAmountForSale */\n      gt\n      iszero\n        /* \"launchpad/contracts/launchpadChild.sol\":8443:8597  require(... */\n      tag_394\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_260\n      swap1\n      tag_396\n      jump\t// in\n    tag_394:\n        /* \"launchpad/contracts/launchpadChild.sol\":8645:8652  hardcap */\n      sload(0x05)\n        /* \"launchpad/contracts/launchpadChild.sol\":8632:8641  msg.value */\n      callvalue\n        /* \"launchpad/contracts/launchpadChild.sol\":8618:8629  totalBuyEth */\n      sload(0x1e)\n        /* \"launchpad/contracts/launchpadChild.sol\":8618:8641  totalBuyEth + msg.value */\n      tag_397\n      swap2\n      swap1\n      tag_303\n      jump\t// in\n    tag_397:\n        /* \"launchpad/contracts/launchpadChild.sol\":8618:8652  totalBuyEth + msg.value <= hardcap */\n      gt\n      iszero\n        /* \"launchpad/contracts/launchpadChild.sol\":8603:8706  require(... */\n      tag_398\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_260\n      swap1\n      tag_400\n      jump\t// in\n    tag_398:\n        /* \"launchpad/contracts/launchpadChild.sol\":8755:8765  msg.sender */\n      caller\n        /* \"launchpad/contracts/launchpadChild.sol\":8741:8766  userBuyAmount[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"launchpad/contracts/launchpadChild.sol\":8741:8754  userBuyAmount */\n      0x21\n        /* \"launchpad/contracts/launchpadChild.sol\":8741:8766  userBuyAmount[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"launchpad/contracts/launchpadChild.sol\":8741:8778  userBuyAmount[msg.sender] + msg.value */\n      tag_401\n      swap1\n        /* \"launchpad/contracts/launchpadChild.sol\":8769:8778  msg.value */\n      callvalue\n      swap1\n        /* \"launchpad/contracts/launchpadChild.sol\":8741:8778  userBuyAmount[msg.sender] + msg.value */\n      tag_303\n      jump\t// in\n    tag_401:\n        /* \"launchpad/contracts/launchpadChild.sol\":8727:8737  msg.sender */\n      caller\n        /* \"launchpad/contracts/launchpadChild.sol\":8713:8738  userBuyAmount[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"launchpad/contracts/launchpadChild.sol\":8713:8726  userBuyAmount */\n      0x21\n        /* \"launchpad/contracts/launchpadChild.sol\":8713:8738  userBuyAmount[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"launchpad/contracts/launchpadChild.sol\":8713:8778  userBuyAmount[msg.sender] = userBuyAmount[msg.sender] + msg.value */\n      sstore\n        /* \"launchpad/contracts/launchpadChild.sol\":8798:8809  totalBuyEth */\n      sload(0x1e)\n        /* \"launchpad/contracts/launchpadChild.sol\":8798:8821  totalBuyEth + msg.value */\n      tag_402\n      swap1\n        /* \"launchpad/contracts/launchpadChild.sol\":8812:8821  msg.value */\n      callvalue\n      swap1\n        /* \"launchpad/contracts/launchpadChild.sol\":8798:8821  totalBuyEth + msg.value */\n      tag_303\n      jump\t// in\n    tag_402:\n        /* \"launchpad/contracts/launchpadChild.sol\":8784:8795  totalBuyEth */\n      0x1e\n        /* \"launchpad/contracts/launchpadChild.sol\":8784:8821  totalBuyEth = totalBuyEth + msg.value */\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2635  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2650  _status = _NOT_ENTERED */\n      sstore\n        /* \"launchpad/contracts/launchpadChild.sol\":7821:8826  function buyTokensWhitelist(bytes memory signature)... */\n      jump\t// out\n        /* \"launchpad/contracts/launchpadChild.sol\":2646:2671  string public description */\n    tag_142:\n      0x1a\n      dup1\n      sload\n      tag_404\n      swap1\n      tag_405\n      jump\t// in\n    tag_404:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_406\n      swap1\n      tag_405\n      jump\t// in\n    tag_406:\n      dup1\n      iszero\n      tag_407\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_408\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_407)\n    tag_408:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_409:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_409\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_407:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"launchpad/contracts/launchpadChild.sol\":10397:10981  function claimStaleEth() external nonReentrant {... */\n    tag_159:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2332  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2344  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_411\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_260\n      swap1\n      tag_275\n      jump\t// in\n    tag_411:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2462  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2473  _status = _ENTERED */\n      sstore\n        /* \"launchpad/contracts/launchpadChild.sol\":10459:10468  saleEnded */\n      sload(0x1f)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"launchpad/contracts/launchpadChild.sol\":10458:10468  !saleEnded */\n      iszero\n        /* \"launchpad/contracts/launchpadChild.sol\":10450:10508  require(!saleEnded, \"sale has been ended : you can claim\") */\n      tag_414\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11952:11954   */\n      0x20\n        /* \"launchpad/contracts/launchpadChild.sol\":10450:10508  require(!saleEnded, \"sale has been ended : you can claim\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11934:11955   */\n      mstore\n        /* \"#utility.yul\":11991:11993   */\n      0x23\n        /* \"#utility.yul\":11971:11989   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11964:11994   */\n      mstore\n        /* \"#utility.yul\":12030:12064   */\n      0x73616c6520686173206265656e20656e646564203a20796f752063616e20636c\n        /* \"#utility.yul\":12010:12028   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12003:12065   */\n      mstore\n      shl(0xe8, 0x61696d)\n        /* \"#utility.yul\":12081:12099   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12074:12107   */\n      mstore\n        /* \"#utility.yul\":12124:12143   */\n      0x84\n      add\n        /* \"launchpad/contracts/launchpadChild.sol\":10450:10508  require(!saleEnded, \"sale has been ended : you can claim\") */\n      tag_260\n        /* \"#utility.yul\":11750:12149   */\n      jump\n        /* \"launchpad/contracts/launchpadChild.sol\":10450:10508  require(!saleEnded, \"sale has been ended : you can claim\") */\n    tag_414:\n        /* \"launchpad/contracts/launchpadChild.sol\":10578:10589  saleAborted */\n      sload(0x1f)\n      0x010000\n      swap1\n      div\n      0xff\n      and\n        /* \"launchpad/contracts/launchpadChild.sol\":10574:10622  if (saleAborted) {... */\n      iszero\n      tag_418\n      jumpi\n        /* \"launchpad/contracts/launchpadChild.sol\":10599:10615  _claimStaleEth() */\n      tag_418\n        /* \"launchpad/contracts/launchpadChild.sol\":10599:10613  _claimStaleEth */\n      tag_419\n        /* \"launchpad/contracts/launchpadChild.sol\":10599:10615  _claimStaleEth() */\n      jump\t// in\n    tag_418:\n        /* \"launchpad/contracts/launchpadChild.sol\":10725:10732  softcap */\n      sload(0x06)\n        /* \"launchpad/contracts/launchpadChild.sol\":10711:10722  totalBuyEth */\n      sload(0x1e)\n        /* \"launchpad/contracts/launchpadChild.sol\":10711:10732  totalBuyEth < softcap */\n      lt\n        /* \"launchpad/contracts/launchpadChild.sol\":10711:10761  totalBuyEth < softcap && block.timestamp > endTime */\n      dup1\n      iszero\n      tag_420\n      jumpi\n      pop\n        /* \"launchpad/contracts/launchpadChild.sol\":10754:10761  endTime */\n      sload(0x09)\n        /* \"launchpad/contracts/launchpadChild.sol\":10736:10751  block.timestamp */\n      timestamp\n        /* \"launchpad/contracts/launchpadChild.sol\":10736:10761  block.timestamp > endTime */\n      gt\n        /* \"launchpad/contracts/launchpadChild.sol\":10711:10761  totalBuyEth < softcap && block.timestamp > endTime */\n    tag_420:\n        /* \"launchpad/contracts/launchpadChild.sol\":10707:10794  if (totalBuyEth < softcap && block.timestamp > endTime) {... */\n      iszero\n      tag_422\n      jumpi\n        /* \"launchpad/contracts/launchpadChild.sol\":10771:10787  _claimStaleEth() */\n      tag_422\n        /* \"launchpad/contracts/launchpadChild.sol\":10771:10785  _claimStaleEth */\n      tag_419\n        /* \"launchpad/contracts/launchpadChild.sol\":10771:10787  _claimStaleEth() */\n      jump\t// in\n    tag_422:\n        /* \"launchpad/contracts/launchpadChild.sol\":10900:10907  softcap */\n      sload(0x06)\n        /* \"launchpad/contracts/launchpadChild.sol\":10886:10897  totalBuyEth */\n      sload(0x1e)\n        /* \"launchpad/contracts/launchpadChild.sol\":10886:10907  totalBuyEth > softcap */\n      gt\n        /* \"launchpad/contracts/launchpadChild.sol\":10886:10944  totalBuyEth > softcap && block.timestamp > endTime + 86400 */\n      dup1\n      iszero\n      tag_423\n      jumpi\n      pop\n        /* \"launchpad/contracts/launchpadChild.sol\":10929:10936  endTime */\n      sload(0x09)\n        /* \"launchpad/contracts/launchpadChild.sol\":10929:10944  endTime + 86400 */\n      tag_424\n      swap1\n        /* \"launchpad/contracts/launchpadChild.sol\":10939:10944  86400 */\n      0x015180\n        /* \"launchpad/contracts/launchpadChild.sol\":10929:10944  endTime + 86400 */\n      tag_303\n      jump\t// in\n    tag_424:\n        /* \"launchpad/contracts/launchpadChild.sol\":10911:10926  block.timestamp */\n      timestamp\n        /* \"launchpad/contracts/launchpadChild.sol\":10911:10944  block.timestamp > endTime + 86400 */\n      gt\n        /* \"launchpad/contracts/launchpadChild.sol\":10886:10944  totalBuyEth > softcap && block.timestamp > endTime + 86400 */\n    tag_423:\n        /* \"launchpad/contracts/launchpadChild.sol\":10882:10977  if (totalBuyEth > softcap && block.timestamp > endTime + 86400) {... */\n      iszero\n      tag_426\n      jumpi\n        /* \"launchpad/contracts/launchpadChild.sol\":10954:10970  _claimStaleEth() */\n      tag_426\n        /* \"launchpad/contracts/launchpadChild.sol\":10954:10968  _claimStaleEth */\n      tag_419\n        /* \"launchpad/contracts/launchpadChild.sol\":10954:10970  _claimStaleEth() */\n      jump\t// in\n    tag_426:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2635  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2650  _status = _NOT_ENTERED */\n      sstore\n        /* \"launchpad/contracts/launchpadChild.sol\":10397:10981  function claimStaleEth() external nonReentrant {... */\n      jump\t// out\n        /* \"launchpad/contracts/launchpadChild.sol\":6924:7817  function buyTokensPublic() external payable nonReentrant whenNotPaused {... */\n    tag_161:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2332  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2344  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_428\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_260\n      swap1\n      tag_275\n      jump\t// in\n    tag_428:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2462  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2473  _status = _ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1168:1175  _paused */\n      and(0xff, sload(0x01))\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1411:1420  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1403:1441  require(!paused(), \"Pausable: paused\") */\n      tag_432\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9375:9377   */\n      0x20\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1403:1441  require(!paused(), \"Pausable: paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9357:9378   */\n      mstore\n        /* \"#utility.yul\":9414:9416   */\n      0x10\n        /* \"#utility.yul\":9394:9412   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9387:9417   */\n      mstore\n      shl(0x82, 0x14185d5cd8589b194e881c185d5cd959)\n        /* \"#utility.yul\":9433:9451   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9426:9472   */\n      mstore\n        /* \"#utility.yul\":9489:9507   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1403:1441  require(!paused(), \"Pausable: paused\") */\n      tag_260\n        /* \"#utility.yul\":9173:9513   */\n      jump\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1403:1441  require(!paused(), \"Pausable: paused\") */\n    tag_432:\n        /* \"launchpad/contracts/launchpadChild.sol\":7010:7021  saleAborted */\n      sload(0x1f)\n      0x010000\n      swap1\n      div\n      0xff\n      and\n        /* \"launchpad/contracts/launchpadChild.sol\":7009:7021  !saleAborted */\n      iszero\n        /* \"launchpad/contracts/launchpadChild.sol\":7001:7042  require(!saleAborted, \"sale was aborted\") */\n      tag_435\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_260\n      swap1\n      tag_279\n      jump\t// in\n    tag_435:\n        /* \"launchpad/contracts/launchpadChild.sol\":7056:7069  saleFinalized */\n      and(0xff, sload(0x1f))\n        /* \"launchpad/contracts/launchpadChild.sol\":7048:7104  require(saleFinalized, \"sale hasn't been finalized yet\") */\n      tag_437\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10832:10834   */\n      0x20\n        /* \"launchpad/contracts/launchpadChild.sol\":7048:7104  require(saleFinalized, \"sale hasn't been finalized yet\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10814:10835   */\n      mstore\n        /* \"#utility.yul\":10871:10873   */\n      0x1e\n        /* \"#utility.yul\":10851:10869   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10844:10874   */\n      mstore\n        /* \"#utility.yul\":10910:10942   */\n      0x73616c65206861736e2774206265656e2066696e616c697a6564207965740000\n        /* \"#utility.yul\":10890:10908   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10883:10943   */\n      mstore\n        /* \"#utility.yul\":10960:10978   */\n      0x64\n      add\n        /* \"launchpad/contracts/launchpadChild.sol\":7048:7104  require(saleFinalized, \"sale hasn't been finalized yet\") */\n      tag_260\n        /* \"#utility.yul\":10630:10984   */\n      jump\n        /* \"launchpad/contracts/launchpadChild.sol\":7048:7104  require(saleFinalized, \"sale hasn't been finalized yet\") */\n    tag_437:\n        /* \"launchpad/contracts/launchpadChild.sol\":7136:7145  startTime */\n      sload(0x08)\n        /* \"launchpad/contracts/launchpadChild.sol\":7118:7133  block.timestamp */\n      timestamp\n        /* \"launchpad/contracts/launchpadChild.sol\":7118:7145  block.timestamp > startTime */\n      gt\n        /* \"launchpad/contracts/launchpadChild.sol\":7110:7173  require(block.timestamp > startTime, \"sale hasn't started yet\") */\n      tag_439\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9023:9025   */\n      0x20\n        /* \"launchpad/contracts/launchpadChild.sol\":7110:7173  require(block.timestamp > startTime, \"sale hasn't started yet\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9005:9026   */\n      mstore\n        /* \"#utility.yul\":9062:9064   */\n      0x17\n        /* \"#utility.yul\":9042:9060   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9035:9065   */\n      mstore\n      shl(0x4a, 0x1cd85b19481a185cdb89dd081cdd185c9d1959081e595d)\n        /* \"#utility.yul\":9081:9099   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9074:9127   */\n      mstore\n        /* \"#utility.yul\":9144:9162   */\n      0x64\n      add\n        /* \"launchpad/contracts/launchpadChild.sol\":7110:7173  require(block.timestamp > startTime, \"sale hasn't started yet\") */\n      tag_260\n        /* \"#utility.yul\":8821:9168   */\n      jump\n        /* \"launchpad/contracts/launchpadChild.sol\":7110:7173  require(block.timestamp > startTime, \"sale hasn't started yet\") */\n    tag_439:\n        /* \"launchpad/contracts/launchpadChild.sol\":7205:7212  endTime */\n      sload(0x09)\n        /* \"launchpad/contracts/launchpadChild.sol\":7187:7202  block.timestamp */\n      timestamp\n        /* \"launchpad/contracts/launchpadChild.sol\":7187:7212  block.timestamp < endTime */\n      lt\n        /* \"launchpad/contracts/launchpadChild.sol\":7179:7231  require(block.timestamp < endTime, \"sale has ended\") */\n      tag_441\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10489:10491   */\n      0x20\n        /* \"launchpad/contracts/launchpadChild.sol\":7179:7231  require(block.timestamp < endTime, \"sale has ended\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10471:10492   */\n      mstore\n        /* \"#utility.yul\":10528:10530   */\n      0x0e\n        /* \"#utility.yul\":10508:10526   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10501:10531   */\n      mstore\n      shl(0x92, 0x1cd85b19481a185cc8195b991959)\n        /* \"#utility.yul\":10547:10565   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10540:10584   */\n      mstore\n        /* \"#utility.yul\":10601:10619   */\n      0x64\n      add\n        /* \"launchpad/contracts/launchpadChild.sol\":7179:7231  require(block.timestamp < endTime, \"sale has ended\") */\n      tag_260\n        /* \"#utility.yul\":10287:10625   */\n      jump\n        /* \"launchpad/contracts/launchpadChild.sol\":7179:7231  require(block.timestamp < endTime, \"sale has ended\") */\n    tag_441:\n        /* \"launchpad/contracts/launchpadChild.sol\":7293:7306  maxBuyPerUser */\n      sload(0x0f)\n        /* \"launchpad/contracts/launchpadChild.sol\":7278:7288  msg.sender */\n      caller\n        /* \"launchpad/contracts/launchpadChild.sol\":7264:7289  userBuyAmount[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"launchpad/contracts/launchpadChild.sol\":7264:7277  userBuyAmount */\n      0x21\n        /* \"launchpad/contracts/launchpadChild.sol\":7264:7289  userBuyAmount[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"launchpad/contracts/launchpadChild.sol\":7252:7289  msg.value + userBuyAmount[msg.sender] */\n      tag_443\n      swap1\n        /* \"launchpad/contracts/launchpadChild.sol\":7252:7261  msg.value */\n      callvalue\n        /* \"launchpad/contracts/launchpadChild.sol\":7252:7289  msg.value + userBuyAmount[msg.sender] */\n      tag_303\n      jump\t// in\n    tag_443:\n        /* \"launchpad/contracts/launchpadChild.sol\":7252:7306  msg.value + userBuyAmount[msg.sender] <= maxBuyPerUser */\n      gt\n      iszero\n        /* \"launchpad/contracts/launchpadChild.sol\":7237:7358  require(... */\n      tag_444\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_260\n      swap1\n      tag_387\n      jump\t// in\n    tag_444:\n        /* \"launchpad/contracts/launchpadChild.sol\":7385:7398  minBuyPerUser */\n      sload(0x10)\n        /* \"launchpad/contracts/launchpadChild.sol\":7372:7381  msg.value */\n      callvalue\n        /* \"launchpad/contracts/launchpadChild.sol\":7372:7398  msg.value >= minBuyPerUser */\n      lt\n      iszero\n        /* \"launchpad/contracts/launchpadChild.sol\":7364:7428  require(msg.value >= minBuyPerUser, \"you're not sending enough\") */\n      tag_446\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8249:8251   */\n      0x20\n        /* \"launchpad/contracts/launchpadChild.sol\":7364:7428  require(msg.value >= minBuyPerUser, \"you're not sending enough\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8231:8252   */\n      mstore\n        /* \"#utility.yul\":8288:8290   */\n      0x19\n        /* \"#utility.yul\":8268:8286   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8261:8291   */\n      mstore\n      shl(0x3b, 0x0f2deea4ee4ca40dcdee840e6cadcc8d2dcce40cadcdeeaced)\n        /* \"#utility.yul\":8307:8325   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8300:8355   */\n      mstore\n        /* \"#utility.yul\":8372:8390   */\n      0x64\n      add\n        /* \"launchpad/contracts/launchpadChild.sol\":7364:7428  require(msg.value >= minBuyPerUser, \"you're not sending enough\") */\n      tag_260\n        /* \"#utility.yul\":8047:8396   */\n      jump\n        /* \"launchpad/contracts/launchpadChild.sol\":7364:7428  require(msg.value >= minBuyPerUser, \"you're not sending enough\") */\n    tag_446:\n        /* \"launchpad/contracts/launchpadChild.sol\":7503:7521  tokenAmountForSale */\n      sload(0x11)\n        /* \"launchpad/contracts/launchpadChild.sol\":7483:7499  totalBuyTokens() */\n      tag_448\n        /* \"launchpad/contracts/launchpadChild.sol\":7483:7497  totalBuyTokens */\n      tag_215\n        /* \"launchpad/contracts/launchpadChild.sol\":7483:7499  totalBuyTokens() */\n      jump\t// in\n    tag_448:\n        /* \"launchpad/contracts/launchpadChild.sol\":7461:7480  saleTokensPerOneEth */\n      sload(0x0b)\n        /* \"launchpad/contracts/launchpadChild.sol\":7449:7480  msg.value * saleTokensPerOneEth */\n      tag_449\n      swap1\n        /* \"launchpad/contracts/launchpadChild.sol\":7449:7458  msg.value */\n      callvalue\n        /* \"launchpad/contracts/launchpadChild.sol\":7449:7480  msg.value * saleTokensPerOneEth */\n      tag_293\n      jump\t// in\n    tag_449:\n        /* \"launchpad/contracts/launchpadChild.sol\":7449:7499  msg.value * saleTokensPerOneEth + totalBuyTokens() */\n      tag_450\n      swap2\n      swap1\n      tag_303\n      jump\t// in\n    tag_450:\n        /* \"launchpad/contracts/launchpadChild.sol\":7449:7521  msg.value * saleTokensPerOneEth + totalBuyTokens() <= tokenAmountForSale */\n      gt\n      iszero\n        /* \"launchpad/contracts/launchpadChild.sol\":7434:7588  require(... */\n      tag_451\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_260\n      swap1\n      tag_396\n      jump\t// in\n    tag_451:\n        /* \"launchpad/contracts/launchpadChild.sol\":7636:7643  hardcap */\n      sload(0x05)\n        /* \"launchpad/contracts/launchpadChild.sol\":7623:7632  msg.value */\n      callvalue\n        /* \"launchpad/contracts/launchpadChild.sol\":7609:7620  totalBuyEth */\n      sload(0x1e)\n        /* \"launchpad/contracts/launchpadChild.sol\":7609:7632  totalBuyEth + msg.value */\n      tag_453\n      swap2\n      swap1\n      tag_303\n      jump\t// in\n    tag_453:\n        /* \"launchpad/contracts/launchpadChild.sol\":7609:7643  totalBuyEth + msg.value <= hardcap */\n      gt\n      iszero\n        /* \"launchpad/contracts/launchpadChild.sol\":7594:7697  require(... */\n      tag_454\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_260\n      swap1\n      tag_400\n      jump\t// in\n    tag_454:\n        /* \"launchpad/contracts/launchpadChild.sol\":7746:7756  msg.sender */\n      caller\n        /* \"launchpad/contracts/launchpadChild.sol\":7732:7757  userBuyAmount[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"launchpad/contracts/launchpadChild.sol\":7732:7745  userBuyAmount */\n      0x21\n        /* \"launchpad/contracts/launchpadChild.sol\":7732:7757  userBuyAmount[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"launchpad/contracts/launchpadChild.sol\":7732:7769  userBuyAmount[msg.sender] + msg.value */\n      tag_456\n      swap1\n        /* \"launchpad/contracts/launchpadChild.sol\":7760:7769  msg.value */\n      callvalue\n      swap1\n        /* \"launchpad/contracts/launchpadChild.sol\":7732:7769  userBuyAmount[msg.sender] + msg.value */\n      tag_303\n      jump\t// in\n    tag_456:\n        /* \"launchpad/contracts/launchpadChild.sol\":7718:7728  msg.sender */\n      caller\n        /* \"launchpad/contracts/launchpadChild.sol\":7704:7729  userBuyAmount[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"launchpad/contracts/launchpadChild.sol\":7704:7717  userBuyAmount */\n      0x21\n        /* \"launchpad/contracts/launchpadChild.sol\":7704:7729  userBuyAmount[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"launchpad/contracts/launchpadChild.sol\":7704:7769  userBuyAmount[msg.sender] = userBuyAmount[msg.sender] + msg.value */\n      sstore\n        /* \"launchpad/contracts/launchpadChild.sol\":7789:7800  totalBuyEth */\n      sload(0x1e)\n        /* \"launchpad/contracts/launchpadChild.sol\":7789:7812  totalBuyEth + msg.value */\n      tag_457\n      swap1\n        /* \"launchpad/contracts/launchpadChild.sol\":7803:7812  msg.value */\n      callvalue\n      swap1\n        /* \"launchpad/contracts/launchpadChild.sol\":7789:7812  totalBuyEth + msg.value */\n      tag_303\n      jump\t// in\n    tag_457:\n        /* \"launchpad/contracts/launchpadChild.sol\":7775:7786  totalBuyEth */\n      0x1e\n        /* \"launchpad/contracts/launchpadChild.sol\":7775:7812  totalBuyEth = totalBuyEth + msg.value */\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2635  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2650  _status = _NOT_ENTERED */\n      sstore\n        /* \"launchpad/contracts/launchpadChild.sol\":6924:7817  function buyTokensPublic() external payable nonReentrant whenNotPaused {... */\n      jump\t// out\n        /* \"launchpad/contracts/launchpadChild.sol\":9315:9796  function splitSignature(bytes memory sig)... */\n    tag_181:\n        /* \"launchpad/contracts/launchpadChild.sol\":9397:9402  uint8 */\n      0x00\n        /* \"launchpad/contracts/launchpadChild.sol\":9410:9417  bytes32 */\n      dup1\n        /* \"launchpad/contracts/launchpadChild.sol\":9425:9432  bytes32 */\n      0x00\n        /* \"launchpad/contracts/launchpadChild.sol\":9455:9458  sig */\n      dup4\n        /* \"launchpad/contracts/launchpadChild.sol\":9455:9465  sig.length */\n      mload\n        /* \"launchpad/contracts/launchpadChild.sol\":9469:9471  65 */\n      0x41\n        /* \"launchpad/contracts/launchpadChild.sol\":9455:9471  sig.length == 65 */\n      eq\n        /* \"launchpad/contracts/launchpadChild.sol\":9447:9472  require(sig.length == 65) */\n      tag_459\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_459:\n      pop\n      pop\n      pop\n        /* \"launchpad/contracts/launchpadChild.sol\":9609:9611  32 */\n      0x20\n        /* \"launchpad/contracts/launchpadChild.sol\":9600:9612  add(sig, 32) */\n      dup2\n      add\n        /* \"launchpad/contracts/launchpadChild.sol\":9594:9613  mload(add(sig, 32)) */\n      mload\n        /* \"launchpad/contracts/launchpadChild.sol\":9665:9667  64 */\n      0x40\n        /* \"launchpad/contracts/launchpadChild.sol\":9656:9668  add(sig, 64) */\n      dup3\n      add\n        /* \"launchpad/contracts/launchpadChild.sol\":9650:9669  mload(add(sig, 64)) */\n      mload\n        /* \"launchpad/contracts/launchpadChild.sol\":9758:9760  96 */\n      0x60\n        /* \"launchpad/contracts/launchpadChild.sol\":9749:9761  add(sig, 96) */\n      swap1\n      swap3\n      add\n        /* \"launchpad/contracts/launchpadChild.sol\":9743:9762  mload(add(sig, 96)) */\n      mload\n        /* \"launchpad/contracts/launchpadChild.sol\":9479:9488  bytes32 r */\n      0x00\n        /* \"launchpad/contracts/launchpadChild.sol\":9735:9763  byte(0, mload(add(sig, 96))) */\n      byte\n      swap3\n        /* \"launchpad/contracts/launchpadChild.sol\":9594:9613  mload(add(sig, 32)) */\n      swap1\n      swap2\n        /* \"launchpad/contracts/launchpadChild.sol\":9650:9669  mload(add(sig, 64)) */\n      swap1\n        /* \"launchpad/contracts/launchpadChild.sol\":9315:9796  function splitSignature(bytes memory sig)... */\n      jump\t// out\n        /* \"launchpad/contracts/launchpadChild.sol\":2708:2730  string public imageUrl */\n    tag_186:\n      0x1b\n      dup1\n      sload\n      tag_404\n      swap1\n      tag_405\n      jump\t// in\n        /* \"launchpad/contracts/launchpadChild.sol\":6127:6236  function totalBuyTokens() public view returns (uint256) {... */\n    tag_215:\n        /* \"launchpad/contracts/launchpadChild.sol\":6174:6181  uint256 */\n      0x00\n        /* \"launchpad/contracts/launchpadChild.sol\":6211:6230  saleTokensPerOneEth */\n      sload(0x0b)\n        /* \"launchpad/contracts/launchpadChild.sol\":6197:6208  totalBuyEth */\n      sload(0x1e)\n        /* \"launchpad/contracts/launchpadChild.sol\":6197:6230  totalBuyEth * saleTokensPerOneEth */\n      tag_466\n      swap2\n      swap1\n      tag_293\n      jump\t// in\n    tag_466:\n        /* \"launchpad/contracts/launchpadChild.sol\":6189:6231  return (totalBuyEth * saleTokensPerOneEth) */\n      swap1\n      pop\n        /* \"launchpad/contracts/launchpadChild.sol\":6127:6236  function totalBuyTokens() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"launchpad/contracts/launchpadChild.sol\":8830:9311  function verify(... */\n    tag_233:\n        /* \"launchpad/contracts/launchpadChild.sol\":8963:8967  bool */\n      0x00\n        /* \"launchpad/contracts/launchpadChild.sol\":8975:8982  uint8 v */\n      dup1\n        /* \"launchpad/contracts/launchpadChild.sol\":8988:8997  bytes32 r */\n      0x00\n        /* \"launchpad/contracts/launchpadChild.sol\":9003:9012  bytes32 s */\n      dup1\n        /* \"launchpad/contracts/launchpadChild.sol\":9031:9056  splitSignature(signature) */\n      tag_468\n        /* \"launchpad/contracts/launchpadChild.sol\":9046:9055  signature */\n      dup9\n        /* \"launchpad/contracts/launchpadChild.sol\":9031:9045  splitSignature */\n      tag_181\n        /* \"launchpad/contracts/launchpadChild.sol\":9031:9056  splitSignature(signature) */\n      jump\t// in\n    tag_468:\n        /* \"launchpad/contracts/launchpadChild.sol\":9102:9140  abi.encode(_target, _saleId, _chainId) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5087:5119   */\n      dup13\n      and\n        /* \"launchpad/contracts/launchpadChild.sol\":9102:9140  abi.encode(_target, _saleId, _chainId) */\n      0x20\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":5069:5120   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":5136:5154   */\n      dup2\n      dup4\n      add\n        /* \"#utility.yul\":5129:5163   */\n      dup13\n      swap1\n      mstore\n        /* \"#utility.yul\":5179:5197   */\n      0x60\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":5172:5206   */\n      dup13\n      swap1\n      mstore\n        /* \"launchpad/contracts/launchpadChild.sol\":9102:9140  abi.encode(_target, _saleId, _chainId) */\n      dup4\n      mload\n      dup1\n      dup5\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n        /* \"#utility.yul\":5042:5060   */\n      0x80\n      dup4\n      add\n        /* \"launchpad/contracts/launchpadChild.sol\":9102:9140  abi.encode(_target, _saleId, _chainId) */\n      swap1\n      swap4\n      mstore\n        /* \"launchpad/contracts/launchpadChild.sol\":9085:9146  keccak256(... */\n      dup3\n      mload\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      keccak256\n        /* \"#utility.yul\":3191:3257   */\n      0x19457468657265756d205369676e6564204d6573736167653a0a333200000000\n        /* \"launchpad/contracts/launchpadChild.sol\":9185:9250  abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", payloadHash) */\n      0xa0\n      dup4\n      add\n        /* \"#utility.yul\":3179:3258   */\n      mstore\n        /* \"#utility.yul\":3274:3286   */\n      0xbc\n      dup3\n      add\n        /* \"#utility.yul\":3267:3295   */\n      dup2\n      swap1\n      mstore\n        /* \"launchpad/contracts/launchpadChild.sol\":9019:9056  (v, r, s) = splitSignature(signature) */\n      swap4\n      swap7\n      pop\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      0x00\n      swap1\n        /* \"#utility.yul\":3311:3323   */\n      0xdc\n      add\n        /* \"launchpad/contracts/launchpadChild.sol\":9185:9250  abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", payloadHash) */\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      dup3\n      dup3\n      mstore\n        /* \"launchpad/contracts/launchpadChild.sol\":9175:9251  keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", payloadHash)) */\n      dup1\n      mload\n        /* \"launchpad/contracts/launchpadChild.sol\":9185:9250  abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", payloadHash) */\n      0x20\n        /* \"launchpad/contracts/launchpadChild.sol\":9175:9251  keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", payloadHash)) */\n      swap2\n      dup3\n      add\n      keccak256\n        /* \"launchpad/contracts/launchpadChild.sol\":9274:9305  ecrecover(messageHash, v, r, s) */\n      0x00\n      dup5\n      mstore\n      swap1\n      dup4\n      add\n      dup1\n      dup4\n      mstore\n        /* \"#utility.yul\":5636:5661   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":5709:5713   */\n      0xff\n        /* \"#utility.yul\":5697:5714   */\n      dup9\n      and\n        /* \"#utility.yul\":5677:5695   */\n      swap2\n      dup4\n      add\n        /* \"#utility.yul\":5670:5715   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":5731:5749   */\n      0x60\n      dup3\n      add\n        /* \"#utility.yul\":5724:5758   */\n      dup7\n      swap1\n      mstore\n        /* \"#utility.yul\":5774:5792   */\n      0x80\n      dup3\n      add\n        /* \"#utility.yul\":5767:5801   */\n      dup6\n      swap1\n      mstore\n        /* \"launchpad/contracts/launchpadChild.sol\":9175:9251  keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", payloadHash)) */\n      swap2\n      pop\n        /* \"launchpad/contracts/launchpadChild.sol\":9274:9305  ecrecover(messageHash, v, r, s) */\n      0x01\n      swap1\n        /* \"#utility.yul\":5608:5627   */\n      0xa0\n      add\n        /* \"launchpad/contracts/launchpadChild.sol\":9274:9305  ecrecover(messageHash, v, r, s) */\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_476\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_476:\n      pop\n      pop\n      mload(add(not(0x1f), mload(0x40)))\n        /* \"launchpad/contracts/launchpadChild.sol\":9264:9270  signer */\n      sload(0x14)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"launchpad/contracts/launchpadChild.sol\":9264:9305  signer == ecrecover(messageHash, v, r, s) */\n      swap2\n      dup3\n      and\n        /* \"launchpad/contracts/launchpadChild.sol\":9264:9270  signer */\n      swap2\n      and\n        /* \"launchpad/contracts/launchpadChild.sol\":9264:9305  signer == ecrecover(messageHash, v, r, s) */\n      eq\n      swap12\n        /* \"launchpad/contracts/launchpadChild.sol\":8830:9311  function verify(... */\n      swap11\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"launchpad/contracts/launchpadChild.sol\":10985:11240  function _claimStaleEth() private {... */\n    tag_419:\n        /* \"launchpad/contracts/launchpadChild.sol\":11047:11057  msg.sender */\n      caller\n        /* \"launchpad/contracts/launchpadChild.sol\":11061:11062  0 */\n      0x00\n        /* \"launchpad/contracts/launchpadChild.sol\":11033:11058  userBuyAmount[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"launchpad/contracts/launchpadChild.sol\":11033:11046  userBuyAmount */\n      0x21\n        /* \"launchpad/contracts/launchpadChild.sol\":11033:11058  userBuyAmount[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"launchpad/contracts/launchpadChild.sol\":11025:11098  require(userBuyAmount[msg.sender] > 0, \"user hasn't any tokens to claim\") */\n      tag_478\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7540:7542   */\n      0x20\n        /* \"launchpad/contracts/launchpadChild.sol\":11025:11098  require(userBuyAmount[msg.sender] > 0, \"user hasn't any tokens to claim\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7522:7543   */\n      mstore\n        /* \"#utility.yul\":7579:7581   */\n      0x1f\n        /* \"#utility.yul\":7559:7577   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7552:7582   */\n      mstore\n        /* \"#utility.yul\":7618:7651   */\n      0x75736572206861736e277420616e7920746f6b656e7320746f20636c61696d00\n        /* \"#utility.yul\":7598:7616   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7591:7652   */\n      mstore\n        /* \"#utility.yul\":7669:7687   */\n      0x64\n      add\n        /* \"launchpad/contracts/launchpadChild.sol\":11025:11098  require(userBuyAmount[msg.sender] > 0, \"user hasn't any tokens to claim\") */\n      tag_260\n        /* \"#utility.yul\":7338:7693   */\n      jump\n        /* \"launchpad/contracts/launchpadChild.sol\":11025:11098  require(userBuyAmount[msg.sender] > 0, \"user hasn't any tokens to claim\") */\n    tag_478:\n        /* \"launchpad/contracts/launchpadChild.sol\":11142:11152  msg.sender */\n      caller\n        /* \"launchpad/contracts/launchpadChild.sol\":11104:11125  uint256 amountToClaim */\n      0x00\n        /* \"launchpad/contracts/launchpadChild.sol\":11128:11153  userBuyAmount[msg.sender] */\n      dup2\n      dup2\n      mstore\n        /* \"launchpad/contracts/launchpadChild.sol\":11128:11141  userBuyAmount */\n      0x21\n        /* \"launchpad/contracts/launchpadChild.sol\":11128:11153  userBuyAmount[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n      dup1\n      sload\n        /* \"launchpad/contracts/launchpadChild.sol\":11159:11188  userBuyAmount[msg.sender] = 0 */\n      swap1\n      dup4\n      swap1\n      sstore\n        /* \"launchpad/contracts/launchpadChild.sol\":11194:11235  msg.sender.call{value: amountToClaim}(\"\") */\n      swap1\n      mload\n        /* \"launchpad/contracts/launchpadChild.sol\":11128:11153  userBuyAmount[msg.sender] */\n      swap1\n      swap3\n        /* \"launchpad/contracts/launchpadChild.sol\":11142:11152  msg.sender */\n      swap2\n        /* \"launchpad/contracts/launchpadChild.sol\":11128:11153  userBuyAmount[msg.sender] */\n      dup4\n      swap2\n        /* \"launchpad/contracts/launchpadChild.sol\":11194:11235  msg.sender.call{value: amountToClaim}(\"\") */\n      swap1\n      dup2\n        /* \"launchpad/contracts/launchpadChild.sol\":11104:11125  uint256 amountToClaim */\n      dup2\n        /* \"launchpad/contracts/launchpadChild.sol\":11194:11235  msg.sender.call{value: amountToClaim}(\"\") */\n      dup2\n        /* \"launchpad/contracts/launchpadChild.sol\":11128:11153  userBuyAmount[msg.sender] */\n      dup6\n        /* \"launchpad/contracts/launchpadChild.sol\":11142:11152  msg.sender */\n      dup8\n        /* \"launchpad/contracts/launchpadChild.sol\":11194:11235  msg.sender.call{value: amountToClaim}(\"\") */\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_483\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_482)\n    tag_483:\n      0x60\n      swap2\n      pop\n    tag_482:\n      pop\n      pop\n      pop\n        /* \"launchpad/contracts/launchpadChild.sol\":11019:11240  {... */\n      pop\n        /* \"launchpad/contracts/launchpadChild.sol\":10985:11240  function _claimStaleEth() private {... */\n      jump\t// out\n        /* \"#utility.yul\":14:732   */\n    tag_485:\n        /* \"#utility.yul\":56:61   */\n      0x00\n        /* \"#utility.yul\":109:112   */\n      dup3\n        /* \"#utility.yul\":102:106   */\n      0x1f\n        /* \"#utility.yul\":94:100   */\n      dup4\n        /* \"#utility.yul\":90:107   */\n      add\n        /* \"#utility.yul\":86:113   */\n      slt\n        /* \"#utility.yul\":76:131   */\n      tag_487\n      jumpi\n        /* \"#utility.yul\":127:128   */\n      0x00\n        /* \"#utility.yul\":124:125   */\n      dup1\n        /* \"#utility.yul\":117:129   */\n      revert\n        /* \"#utility.yul\":76:131   */\n    tag_487:\n        /* \"#utility.yul\":163:169   */\n      dup2\n        /* \"#utility.yul\":150:170   */\n      calldataload\n        /* \"#utility.yul\":189:207   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":226:228   */\n      dup1\n        /* \"#utility.yul\":222:224   */\n      dup3\n        /* \"#utility.yul\":219:229   */\n      gt\n        /* \"#utility.yul\":216:252   */\n      iszero\n      tag_489\n      jumpi\n        /* \"#utility.yul\":232:250   */\n      tag_489\n      tag_490\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":307:309   */\n      0x40\n        /* \"#utility.yul\":301:310   */\n      mload\n        /* \"#utility.yul\":275:277   */\n      0x1f\n        /* \"#utility.yul\":361:374   */\n      dup4\n      add\n      not(0x1f)\n        /* \"#utility.yul\":357:379   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":381:383   */\n      0x3f\n        /* \"#utility.yul\":353:384   */\n      add\n        /* \"#utility.yul\":349:389   */\n      and\n        /* \"#utility.yul\":337:390   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":405:423   */\n      dup3\n      dup3\n      gt\n        /* \"#utility.yul\":425:447   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":402:448   */\n      or\n        /* \"#utility.yul\":399:471   */\n      iszero\n      tag_492\n      jumpi\n        /* \"#utility.yul\":451:469   */\n      tag_492\n      tag_490\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":491:501   */\n      dup2\n        /* \"#utility.yul\":487:489   */\n      0x40\n        /* \"#utility.yul\":480:502   */\n      mstore\n        /* \"#utility.yul\":526:528   */\n      dup4\n        /* \"#utility.yul\":518:524   */\n      dup2\n        /* \"#utility.yul\":511:529   */\n      mstore\n        /* \"#utility.yul\":572:575   */\n      dup7\n        /* \"#utility.yul\":565:569   */\n      0x20\n        /* \"#utility.yul\":560:562   */\n      dup6\n        /* \"#utility.yul\":552:558   */\n      dup9\n        /* \"#utility.yul\":548:563   */\n      add\n        /* \"#utility.yul\":544:570   */\n      add\n        /* \"#utility.yul\":541:576   */\n      gt\n        /* \"#utility.yul\":538:593   */\n      iszero\n      tag_493\n      jumpi\n        /* \"#utility.yul\":589:590   */\n      0x00\n        /* \"#utility.yul\":586:587   */\n      dup1\n        /* \"#utility.yul\":579:591   */\n      revert\n        /* \"#utility.yul\":538:593   */\n    tag_493:\n        /* \"#utility.yul\":653:655   */\n      dup4\n        /* \"#utility.yul\":646:650   */\n      0x20\n        /* \"#utility.yul\":638:644   */\n      dup8\n        /* \"#utility.yul\":634:651   */\n      add\n        /* \"#utility.yul\":627:631   */\n      0x20\n        /* \"#utility.yul\":619:625   */\n      dup4\n        /* \"#utility.yul\":615:632   */\n      add\n        /* \"#utility.yul\":602:656   */\n      calldatacopy\n        /* \"#utility.yul\":700:701   */\n      0x00\n        /* \"#utility.yul\":693:697   */\n      0x20\n        /* \"#utility.yul\":688:690   */\n      dup6\n        /* \"#utility.yul\":680:686   */\n      dup4\n        /* \"#utility.yul\":676:691   */\n      add\n        /* \"#utility.yul\":672:698   */\n      add\n        /* \"#utility.yul\":665:702   */\n      mstore\n        /* \"#utility.yul\":720:726   */\n      dup1\n        /* \"#utility.yul\":711:726   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14:732   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":737:984   */\n    tag_96:\n        /* \"#utility.yul\":796:802   */\n      0x00\n        /* \"#utility.yul\":849:851   */\n      0x20\n        /* \"#utility.yul\":837:846   */\n      dup3\n        /* \"#utility.yul\":828:835   */\n      dup5\n        /* \"#utility.yul\":824:847   */\n      sub\n        /* \"#utility.yul\":820:852   */\n      slt\n        /* \"#utility.yul\":817:869   */\n      iszero\n      tag_495\n      jumpi\n        /* \"#utility.yul\":865:866   */\n      0x00\n        /* \"#utility.yul\":862:863   */\n      dup1\n        /* \"#utility.yul\":855:867   */\n      revert\n        /* \"#utility.yul\":817:869   */\n    tag_495:\n        /* \"#utility.yul\":904:913   */\n      dup2\n        /* \"#utility.yul\":891:914   */\n      calldataload\n        /* \"#utility.yul\":923:954   */\n      tag_496\n        /* \"#utility.yul\":948:953   */\n      dup2\n        /* \"#utility.yul\":923:954   */\n      tag_497\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":973:978   */\n      swap4\n        /* \"#utility.yul\":737:984   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":989:1240   */\n    tag_315:\n        /* \"#utility.yul\":1059:1065   */\n      0x00\n        /* \"#utility.yul\":1112:1114   */\n      0x20\n        /* \"#utility.yul\":1100:1109   */\n      dup3\n        /* \"#utility.yul\":1091:1098   */\n      dup5\n        /* \"#utility.yul\":1087:1110   */\n      sub\n        /* \"#utility.yul\":1083:1115   */\n      slt\n        /* \"#utility.yul\":1080:1132   */\n      iszero\n      tag_499\n      jumpi\n        /* \"#utility.yul\":1128:1129   */\n      0x00\n        /* \"#utility.yul\":1125:1126   */\n      dup1\n        /* \"#utility.yul\":1118:1130   */\n      revert\n        /* \"#utility.yul\":1080:1132   */\n    tag_499:\n        /* \"#utility.yul\":1160:1169   */\n      dup2\n        /* \"#utility.yul\":1154:1170   */\n      mload\n        /* \"#utility.yul\":1179:1210   */\n      tag_496\n        /* \"#utility.yul\":1204:1209   */\n      dup2\n        /* \"#utility.yul\":1179:1210   */\n      tag_497\n      jump\t// in\n        /* \"#utility.yul\":1245:1522   */\n    tag_301:\n        /* \"#utility.yul\":1312:1318   */\n      0x00\n        /* \"#utility.yul\":1365:1367   */\n      0x20\n        /* \"#utility.yul\":1353:1362   */\n      dup3\n        /* \"#utility.yul\":1344:1351   */\n      dup5\n        /* \"#utility.yul\":1340:1363   */\n      sub\n        /* \"#utility.yul\":1336:1368   */\n      slt\n        /* \"#utility.yul\":1333:1385   */\n      iszero\n      tag_502\n      jumpi\n        /* \"#utility.yul\":1381:1382   */\n      0x00\n        /* \"#utility.yul\":1378:1379   */\n      dup1\n        /* \"#utility.yul\":1371:1383   */\n      revert\n        /* \"#utility.yul\":1333:1385   */\n    tag_502:\n        /* \"#utility.yul\":1413:1422   */\n      dup2\n        /* \"#utility.yul\":1407:1423   */\n      mload\n        /* \"#utility.yul\":1466:1471   */\n      dup1\n        /* \"#utility.yul\":1459:1472   */\n      iszero\n        /* \"#utility.yul\":1452:1473   */\n      iszero\n        /* \"#utility.yul\":1445:1450   */\n      dup2\n        /* \"#utility.yul\":1442:1474   */\n      eq\n        /* \"#utility.yul\":1432:1492   */\n      tag_496\n      jumpi\n        /* \"#utility.yul\":1488:1489   */\n      0x00\n        /* \"#utility.yul\":1485:1486   */\n      dup1\n        /* \"#utility.yul\":1478:1490   */\n      revert\n        /* \"#utility.yul\":1527:1847   */\n    tag_116:\n        /* \"#utility.yul\":1595:1601   */\n      0x00\n        /* \"#utility.yul\":1648:1650   */\n      0x20\n        /* \"#utility.yul\":1636:1645   */\n      dup3\n        /* \"#utility.yul\":1627:1634   */\n      dup5\n        /* \"#utility.yul\":1623:1646   */\n      sub\n        /* \"#utility.yul\":1619:1651   */\n      slt\n        /* \"#utility.yul\":1616:1668   */\n      iszero\n      tag_505\n      jumpi\n        /* \"#utility.yul\":1664:1665   */\n      0x00\n        /* \"#utility.yul\":1661:1662   */\n      dup1\n        /* \"#utility.yul\":1654:1666   */\n      revert\n        /* \"#utility.yul\":1616:1668   */\n    tag_505:\n        /* \"#utility.yul\":1704:1713   */\n      dup2\n        /* \"#utility.yul\":1691:1714   */\n      calldataload\n        /* \"#utility.yul\":1737:1755   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1729:1735   */\n      dup2\n        /* \"#utility.yul\":1726:1756   */\n      gt\n        /* \"#utility.yul\":1723:1773   */\n      iszero\n      tag_506\n      jumpi\n        /* \"#utility.yul\":1769:1770   */\n      0x00\n        /* \"#utility.yul\":1766:1767   */\n      dup1\n        /* \"#utility.yul\":1759:1771   */\n      revert\n        /* \"#utility.yul\":1723:1773   */\n    tag_506:\n        /* \"#utility.yul\":1792:1841   */\n      tag_507\n        /* \"#utility.yul\":1833:1840   */\n      dup5\n        /* \"#utility.yul\":1824:1830   */\n      dup3\n        /* \"#utility.yul\":1813:1822   */\n      dup6\n        /* \"#utility.yul\":1809:1831   */\n      add\n        /* \"#utility.yul\":1792:1841   */\n      tag_485\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":1782:1841   */\n      swap5\n        /* \"#utility.yul\":1527:1847   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1852:2444   */\n    tag_232:\n        /* \"#utility.yul\":1947:1953   */\n      0x00\n        /* \"#utility.yul\":1955:1961   */\n      dup1\n        /* \"#utility.yul\":1963:1969   */\n      0x00\n        /* \"#utility.yul\":1971:1977   */\n      dup1\n        /* \"#utility.yul\":2024:2027   */\n      0x80\n        /* \"#utility.yul\":2012:2021   */\n      dup6\n        /* \"#utility.yul\":2003:2010   */\n      dup8\n        /* \"#utility.yul\":1999:2022   */\n      sub\n        /* \"#utility.yul\":1995:2028   */\n      slt\n        /* \"#utility.yul\":1992:2045   */\n      iszero\n      tag_509\n      jumpi\n        /* \"#utility.yul\":2041:2042   */\n      0x00\n        /* \"#utility.yul\":2038:2039   */\n      dup1\n        /* \"#utility.yul\":2031:2043   */\n      revert\n        /* \"#utility.yul\":1992:2045   */\n    tag_509:\n        /* \"#utility.yul\":2081:2090   */\n      dup5\n        /* \"#utility.yul\":2068:2091   */\n      calldataload\n        /* \"#utility.yul\":2114:2132   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2106:2112   */\n      dup2\n        /* \"#utility.yul\":2103:2133   */\n      gt\n        /* \"#utility.yul\":2100:2150   */\n      iszero\n      tag_510\n      jumpi\n        /* \"#utility.yul\":2146:2147   */\n      0x00\n        /* \"#utility.yul\":2143:2144   */\n      dup1\n        /* \"#utility.yul\":2136:2148   */\n      revert\n        /* \"#utility.yul\":2100:2150   */\n    tag_510:\n        /* \"#utility.yul\":2169:2218   */\n      tag_511\n        /* \"#utility.yul\":2210:2217   */\n      dup8\n        /* \"#utility.yul\":2201:2207   */\n      dup3\n        /* \"#utility.yul\":2190:2199   */\n      dup9\n        /* \"#utility.yul\":2186:2208   */\n      add\n        /* \"#utility.yul\":2169:2218   */\n      tag_485\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":2159:2218   */\n      swap5\n      pop\n      pop\n        /* \"#utility.yul\":2268:2270   */\n      0x20\n        /* \"#utility.yul\":2257:2266   */\n      dup6\n        /* \"#utility.yul\":2253:2271   */\n      add\n        /* \"#utility.yul\":2240:2272   */\n      calldataload\n        /* \"#utility.yul\":2281:2312   */\n      tag_512\n        /* \"#utility.yul\":2306:2311   */\n      dup2\n        /* \"#utility.yul\":2281:2312   */\n      tag_497\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":1852:2444   */\n      swap4\n      swap7\n        /* \"#utility.yul\":2331:2336   */\n      swap4\n      swap6\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2383:2385   */\n      0x40\n        /* \"#utility.yul\":2368:2386   */\n      dup3\n      add\n        /* \"#utility.yul\":2355:2387   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":2434:2436   */\n      0x60\n        /* \"#utility.yul\":2419:2437   */\n      add\n        /* \"#utility.yul\":2406:2438   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":1852:2444   */\n      jump\t// out\n        /* \"#utility.yul\":2449:2633   */\n    tag_358:\n        /* \"#utility.yul\":2519:2525   */\n      0x00\n        /* \"#utility.yul\":2572:2574   */\n      0x20\n        /* \"#utility.yul\":2560:2569   */\n      dup3\n        /* \"#utility.yul\":2551:2558   */\n      dup5\n        /* \"#utility.yul\":2547:2570   */\n      sub\n        /* \"#utility.yul\":2543:2575   */\n      slt\n        /* \"#utility.yul\":2540:2592   */\n      iszero\n      tag_514\n      jumpi\n        /* \"#utility.yul\":2588:2589   */\n      0x00\n        /* \"#utility.yul\":2585:2586   */\n      dup1\n        /* \"#utility.yul\":2578:2590   */\n      revert\n        /* \"#utility.yul\":2540:2592   */\n    tag_514:\n      pop\n        /* \"#utility.yul\":2611:2627   */\n      mload\n      swap2\n        /* \"#utility.yul\":2449:2633   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2638:2944   */\n    tag_310:\n        /* \"#utility.yul\":2726:2732   */\n      0x00\n        /* \"#utility.yul\":2734:2740   */\n      dup1\n        /* \"#utility.yul\":2742:2748   */\n      0x00\n        /* \"#utility.yul\":2795:2797   */\n      0x60\n        /* \"#utility.yul\":2783:2792   */\n      dup5\n        /* \"#utility.yul\":2774:2781   */\n      dup7\n        /* \"#utility.yul\":2770:2793   */\n      sub\n        /* \"#utility.yul\":2766:2798   */\n      slt\n        /* \"#utility.yul\":2763:2815   */\n      iszero\n      tag_516\n      jumpi\n        /* \"#utility.yul\":2811:2812   */\n      0x00\n        /* \"#utility.yul\":2808:2809   */\n      dup1\n        /* \"#utility.yul\":2801:2813   */\n      revert\n        /* \"#utility.yul\":2763:2815   */\n    tag_516:\n        /* \"#utility.yul\":2840:2849   */\n      dup4\n        /* \"#utility.yul\":2834:2850   */\n      mload\n        /* \"#utility.yul\":2824:2850   */\n      swap3\n      pop\n        /* \"#utility.yul\":2890:2892   */\n      0x20\n        /* \"#utility.yul\":2879:2888   */\n      dup5\n        /* \"#utility.yul\":2875:2893   */\n      add\n        /* \"#utility.yul\":2869:2894   */\n      mload\n        /* \"#utility.yul\":2859:2894   */\n      swap2\n      pop\n        /* \"#utility.yul\":2934:2936   */\n      0x40\n        /* \"#utility.yul\":2923:2932   */\n      dup5\n        /* \"#utility.yul\":2919:2937   */\n      add\n        /* \"#utility.yul\":2913:2938   */\n      mload\n        /* \"#utility.yul\":2903:2938   */\n      swap1\n      pop\n        /* \"#utility.yul\":2638:2944   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":6736:7333   */\n    tag_144:\n        /* \"#utility.yul\":6848:6852   */\n      0x00\n        /* \"#utility.yul\":6877:6879   */\n      0x20\n        /* \"#utility.yul\":6906:6908   */\n      dup1\n        /* \"#utility.yul\":6895:6904   */\n      dup4\n        /* \"#utility.yul\":6888:6909   */\n      mstore\n        /* \"#utility.yul\":6938:6944   */\n      dup4\n        /* \"#utility.yul\":6932:6945   */\n      mload\n        /* \"#utility.yul\":6981:6987   */\n      dup1\n        /* \"#utility.yul\":6976:6978   */\n      dup3\n        /* \"#utility.yul\":6965:6974   */\n      dup6\n        /* \"#utility.yul\":6961:6979   */\n      add\n        /* \"#utility.yul\":6954:6988   */\n      mstore\n        /* \"#utility.yul\":7006:7007   */\n      0x00\n        /* \"#utility.yul\":7016:7156   */\n    tag_531:\n        /* \"#utility.yul\":7030:7036   */\n      dup2\n        /* \"#utility.yul\":7027:7028   */\n      dup2\n        /* \"#utility.yul\":7024:7037   */\n      lt\n        /* \"#utility.yul\":7016:7156   */\n      iszero\n      tag_533\n      jumpi\n        /* \"#utility.yul\":7125:7139   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":7121:7144   */\n      dup4\n      add\n        /* \"#utility.yul\":7115:7145   */\n      mload\n        /* \"#utility.yul\":7091:7108   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":7110:7112   */\n      0x40\n        /* \"#utility.yul\":7087:7113   */\n      add\n        /* \"#utility.yul\":7080:7146   */\n      mstore\n        /* \"#utility.yul\":7045:7055   */\n      dup3\n      add\n        /* \"#utility.yul\":7016:7156   */\n      jump(tag_531)\n    tag_533:\n        /* \"#utility.yul\":7174:7180   */\n      dup2\n        /* \"#utility.yul\":7171:7172   */\n      dup2\n        /* \"#utility.yul\":7168:7181   */\n      gt\n        /* \"#utility.yul\":7165:7256   */\n      iszero\n      tag_534\n      jumpi\n        /* \"#utility.yul\":7244:7245   */\n      0x00\n        /* \"#utility.yul\":7239:7241   */\n      0x40\n        /* \"#utility.yul\":7230:7236   */\n      dup4\n        /* \"#utility.yul\":7219:7228   */\n      dup8\n        /* \"#utility.yul\":7215:7237   */\n      add\n        /* \"#utility.yul\":7211:7242   */\n      add\n        /* \"#utility.yul\":7204:7246   */\n      mstore\n        /* \"#utility.yul\":7165:7256   */\n    tag_534:\n      pop\n        /* \"#utility.yul\":7317:7319   */\n      0x1f\n        /* \"#utility.yul\":7296:7311   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":7292:7321   */\n      and\n        /* \"#utility.yul\":7277:7322   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":7324:7326   */\n      0x40\n        /* \"#utility.yul\":7273:7327   */\n      add\n      swap4\n        /* \"#utility.yul\":6736:7333   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8401:8816   */\n    tag_396:\n        /* \"#utility.yul\":8603:8605   */\n      0x20\n        /* \"#utility.yul\":8585:8606   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":8642:8644   */\n      0x33\n        /* \"#utility.yul\":8622:8640   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":8615:8645   */\n      mstore\n        /* \"#utility.yul\":8681:8715   */\n      0x7468657265206172656e277420656e6f75676820746f6b656e73206c6566742e\n        /* \"#utility.yul\":8676:8678   */\n      0x40\n        /* \"#utility.yul\":8661:8679   */\n      dup3\n      add\n        /* \"#utility.yul\":8654:8716   */\n      mstore\n      shl(0x6a, 0x08151c9e4818481b1bddd95c88185b5bdd5b9d)\n        /* \"#utility.yul\":8747:8749   */\n      0x60\n        /* \"#utility.yul\":8732:8750   */\n      dup3\n      add\n        /* \"#utility.yul\":8725:8774   */\n      mstore\n        /* \"#utility.yul\":8806:8809   */\n      0x80\n        /* \"#utility.yul\":8791:8810   */\n      add\n      swap1\n        /* \"#utility.yul\":8401:8816   */\n      jump\t// out\n        /* \"#utility.yul\":10989:11389   */\n    tag_387:\n        /* \"#utility.yul\":11191:11193   */\n      0x20\n        /* \"#utility.yul\":11173:11194   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":11230:11232   */\n      0x24\n        /* \"#utility.yul\":11210:11228   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11203:11233   */\n      mstore\n        /* \"#utility.yul\":11269:11303   */\n      0x796f7527726520747279696e6720746f2062757920746f6f206d616e7920746f\n        /* \"#utility.yul\":11264:11266   */\n      0x40\n        /* \"#utility.yul\":11249:11267   */\n      dup3\n      add\n        /* \"#utility.yul\":11242:11304   */\n      mstore\n      shl(0xe0, 0x6b656e73)\n        /* \"#utility.yul\":11335:11337   */\n      0x60\n        /* \"#utility.yul\":11320:11338   */\n      dup3\n      add\n        /* \"#utility.yul\":11313:11347   */\n      mstore\n        /* \"#utility.yul\":11379:11382   */\n      0x80\n        /* \"#utility.yul\":11364:11383   */\n      add\n      swap1\n        /* \"#utility.yul\":10989:11389   */\n      jump\t// out\n        /* \"#utility.yul\":11394:11745   */\n    tag_261:\n        /* \"#utility.yul\":11596:11598   */\n      0x20\n        /* \"#utility.yul\":11578:11599   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":11635:11637   */\n      0x1b\n        /* \"#utility.yul\":11615:11633   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11608:11638   */\n      mstore\n        /* \"#utility.yul\":11674:11703   */\n      0x63616c6c6572206973206e6f742074686520696e69746961746f720000000000\n        /* \"#utility.yul\":11669:11671   */\n      0x40\n        /* \"#utility.yul\":11654:11672   */\n      dup3\n      add\n        /* \"#utility.yul\":11647:11704   */\n      mstore\n        /* \"#utility.yul\":11736:11738   */\n      0x60\n        /* \"#utility.yul\":11721:11739   */\n      add\n      swap1\n        /* \"#utility.yul\":11394:11745   */\n      jump\t// out\n        /* \"#utility.yul\":12861:13263   */\n    tag_400:\n        /* \"#utility.yul\":13063:13065   */\n      0x20\n        /* \"#utility.yul\":13045:13066   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":13102:13104   */\n      0x26\n        /* \"#utility.yul\":13082:13100   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":13075:13105   */\n      mstore\n        /* \"#utility.yul\":13141:13175   */\n      0x6861726463617020697320726561636865642e205472792061206c6f77657220\n        /* \"#utility.yul\":13136:13138   */\n      0x40\n        /* \"#utility.yul\":13121:13139   */\n      dup3\n      add\n        /* \"#utility.yul\":13114:13176   */\n      mstore\n      shl(0xd2, 0x185b5bdd5b9d)\n        /* \"#utility.yul\":13207:13209   */\n      0x60\n        /* \"#utility.yul\":13192:13210   */\n      dup3\n      add\n        /* \"#utility.yul\":13185:13221   */\n      mstore\n        /* \"#utility.yul\":13253:13256   */\n      0x80\n        /* \"#utility.yul\":13238:13257   */\n      add\n      swap1\n        /* \"#utility.yul\":12861:13263   */\n      jump\t// out\n        /* \"#utility.yul\":13690:14030   */\n    tag_279:\n        /* \"#utility.yul\":13892:13894   */\n      0x20\n        /* \"#utility.yul\":13874:13895   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":13931:13933   */\n      0x10\n        /* \"#utility.yul\":13911:13929   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":13904:13934   */\n      mstore\n      shl(0x82, 0x1cd85b19481dd85cc818589bdc9d1959)\n        /* \"#utility.yul\":13965:13967   */\n      0x40\n        /* \"#utility.yul\":13950:13968   */\n      dup3\n      add\n        /* \"#utility.yul\":13943:13989   */\n      mstore\n        /* \"#utility.yul\":14021:14023   */\n      0x60\n        /* \"#utility.yul\":14006:14024   */\n      add\n      swap1\n        /* \"#utility.yul\":13690:14030   */\n      jump\t// out\n        /* \"#utility.yul\":14795:15150   */\n    tag_275:\n        /* \"#utility.yul\":14997:14999   */\n      0x20\n        /* \"#utility.yul\":14979:15000   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":15036:15038   */\n      0x1f\n        /* \"#utility.yul\":15016:15034   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":15009:15039   */\n      mstore\n        /* \"#utility.yul\":15075:15108   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":15070:15072   */\n      0x40\n        /* \"#utility.yul\":15055:15073   */\n      dup3\n      add\n        /* \"#utility.yul\":15048:15109   */\n      mstore\n        /* \"#utility.yul\":15141:15143   */\n      0x60\n        /* \"#utility.yul\":15126:15144   */\n      add\n      swap1\n        /* \"#utility.yul\":14795:15150   */\n      jump\t// out\n        /* \"#utility.yul\":15668:15796   */\n    tag_303:\n        /* \"#utility.yul\":15708:15711   */\n      0x00\n        /* \"#utility.yul\":15739:15740   */\n      dup3\n        /* \"#utility.yul\":15735:15741   */\n      not\n        /* \"#utility.yul\":15732:15733   */\n      dup3\n        /* \"#utility.yul\":15729:15742   */\n      gt\n        /* \"#utility.yul\":15726:15765   */\n      iszero\n      tag_560\n      jumpi\n        /* \"#utility.yul\":15745:15763   */\n      tag_560\n      tag_561\n      jump\t// in\n    tag_560:\n      pop\n        /* \"#utility.yul\":15781:15790   */\n      add\n      swap1\n        /* \"#utility.yul\":15668:15796   */\n      jump\t// out\n        /* \"#utility.yul\":15801:16018   */\n    tag_291:\n        /* \"#utility.yul\":15841:15842   */\n      0x00\n        /* \"#utility.yul\":15867:15868   */\n      dup3\n        /* \"#utility.yul\":15857:15989   */\n      tag_563\n      jumpi\n        /* \"#utility.yul\":15911:15921   */\n      0x4e487b71\n        /* \"#utility.yul\":15906:15909   */\n      0xe0\n        /* \"#utility.yul\":15902:15922   */\n      shl\n        /* \"#utility.yul\":15899:15900   */\n      0x00\n        /* \"#utility.yul\":15892:15923   */\n      mstore\n        /* \"#utility.yul\":15946:15950   */\n      0x12\n        /* \"#utility.yul\":15943:15944   */\n      0x04\n        /* \"#utility.yul\":15936:15951   */\n      mstore\n        /* \"#utility.yul\":15974:15978   */\n      0x24\n        /* \"#utility.yul\":15971:15972   */\n      0x00\n        /* \"#utility.yul\":15964:15979   */\n      revert\n        /* \"#utility.yul\":15857:15989   */\n    tag_563:\n      pop\n        /* \"#utility.yul\":16003:16012   */\n      div\n      swap1\n        /* \"#utility.yul\":15801:16018   */\n      jump\t// out\n        /* \"#utility.yul\":16023:16191   */\n    tag_293:\n        /* \"#utility.yul\":16063:16070   */\n      0x00\n        /* \"#utility.yul\":16129:16130   */\n      dup2\n        /* \"#utility.yul\":16125:16126   */\n      0x00\n        /* \"#utility.yul\":16121:16127   */\n      not\n        /* \"#utility.yul\":16117:16131   */\n      div\n        /* \"#utility.yul\":16114:16115   */\n      dup4\n        /* \"#utility.yul\":16111:16132   */\n      gt\n        /* \"#utility.yul\":16106:16107   */\n      dup3\n        /* \"#utility.yul\":16099:16108   */\n      iszero\n        /* \"#utility.yul\":16092:16109   */\n      iszero\n        /* \"#utility.yul\":16088:16133   */\n      and\n        /* \"#utility.yul\":16085:16156   */\n      iszero\n      tag_566\n      jumpi\n        /* \"#utility.yul\":16136:16154   */\n      tag_566\n      tag_561\n      jump\t// in\n    tag_566:\n      pop\n        /* \"#utility.yul\":16176:16185   */\n      mul\n      swap1\n        /* \"#utility.yul\":16023:16191   */\n      jump\t// out\n        /* \"#utility.yul\":16196:16576   */\n    tag_405:\n        /* \"#utility.yul\":16275:16276   */\n      0x01\n        /* \"#utility.yul\":16271:16283   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":16318:16330   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":16339:16400   */\n      tag_568\n      jumpi\n        /* \"#utility.yul\":16393:16397   */\n      0x7f\n        /* \"#utility.yul\":16385:16391   */\n      dup3\n        /* \"#utility.yul\":16381:16398   */\n      and\n        /* \"#utility.yul\":16371:16398   */\n      swap2\n      pop\n        /* \"#utility.yul\":16339:16400   */\n    tag_568:\n        /* \"#utility.yul\":16446:16448   */\n      0x20\n        /* \"#utility.yul\":16438:16444   */\n      dup3\n        /* \"#utility.yul\":16435:16449   */\n      lt\n        /* \"#utility.yul\":16415:16433   */\n      dup2\n        /* \"#utility.yul\":16412:16450   */\n      eq\n        /* \"#utility.yul\":16409:16570   */\n      iszero\n      tag_569\n      jumpi\n        /* \"#utility.yul\":16492:16502   */\n      0x4e487b71\n        /* \"#utility.yul\":16487:16490   */\n      0xe0\n        /* \"#utility.yul\":16483:16503   */\n      shl\n        /* \"#utility.yul\":16480:16481   */\n      0x00\n        /* \"#utility.yul\":16473:16504   */\n      mstore\n        /* \"#utility.yul\":16527:16531   */\n      0x22\n        /* \"#utility.yul\":16524:16525   */\n      0x04\n        /* \"#utility.yul\":16517:16532   */\n      mstore\n        /* \"#utility.yul\":16555:16559   */\n      0x24\n        /* \"#utility.yul\":16552:16553   */\n      0x00\n        /* \"#utility.yul\":16545:16560   */\n      revert\n        /* \"#utility.yul\":16409:16570   */\n    tag_569:\n      pop\n        /* \"#utility.yul\":16196:16576   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16581:16708   */\n    tag_561:\n        /* \"#utility.yul\":16642:16652   */\n      0x4e487b71\n        /* \"#utility.yul\":16637:16640   */\n      0xe0\n        /* \"#utility.yul\":16633:16653   */\n      shl\n        /* \"#utility.yul\":16630:16631   */\n      0x00\n        /* \"#utility.yul\":16623:16654   */\n      mstore\n        /* \"#utility.yul\":16673:16677   */\n      0x11\n        /* \"#utility.yul\":16670:16671   */\n      0x04\n        /* \"#utility.yul\":16663:16678   */\n      mstore\n        /* \"#utility.yul\":16697:16701   */\n      0x24\n        /* \"#utility.yul\":16694:16695   */\n      0x00\n        /* \"#utility.yul\":16687:16702   */\n      revert\n        /* \"#utility.yul\":16713:16840   */\n    tag_490:\n        /* \"#utility.yul\":16774:16784   */\n      0x4e487b71\n        /* \"#utility.yul\":16769:16772   */\n      0xe0\n        /* \"#utility.yul\":16765:16785   */\n      shl\n        /* \"#utility.yul\":16762:16763   */\n      0x00\n        /* \"#utility.yul\":16755:16786   */\n      mstore\n        /* \"#utility.yul\":16805:16809   */\n      0x41\n        /* \"#utility.yul\":16802:16803   */\n      0x04\n        /* \"#utility.yul\":16795:16810   */\n      mstore\n        /* \"#utility.yul\":16829:16833   */\n      0x24\n        /* \"#utility.yul\":16826:16827   */\n      0x00\n        /* \"#utility.yul\":16819:16834   */\n      revert\n        /* \"#utility.yul\":16845:16976   */\n    tag_497:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":16920:16951   */\n      dup2\n      and\n        /* \"#utility.yul\":16910:16952   */\n      dup2\n      eq\n        /* \"#utility.yul\":16900:16970   */\n      tag_573\n      jumpi\n        /* \"#utility.yul\":16966:16967   */\n      0x00\n        /* \"#utility.yul\":16963:16964   */\n      dup1\n        /* \"#utility.yul\":16956:16968   */\n      revert\n        /* \"#utility.yul\":16900:16970   */\n    tag_573:\n        /* \"#utility.yul\":16845:16976   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c0f319c2275355e0601f5672cdf63a5ce48b326a39a1742c9b57162189004c9664736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1959": {
									"entryPoint": null,
									"id": 1959,
									"parameterSlots": 9,
									"returnSlots": 0
								},
								"@_408": {
									"entryPoint": null,
									"id": 408,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_492": {
									"entryPoint": null,
									"id": 492,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 1568,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_bool_fromMemory": {
									"entryPoint": 1597,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 1614,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 1763,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptrt_array$_t_uint256_$8_memory_ptrt_boolt_uint256t_uint256t_addresst_address_fromMemory": {
									"entryPoint": 1800,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 9
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 2099,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b253088eb843b61a79d6dacfebf6dd8590800840f2d12dcc8dec83049af7df61__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fd0d685c1aea5b2037f3c3abd58b011bee2d2bed9ec4cb7b6efa2c3035e44a7f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 2169,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_memory_998": {
									"entryPoint": 2125,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 2220,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2255,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2289,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2315,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2376,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 2398,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5924:14",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:14",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "74:117:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "84:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "93:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:14"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "169:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "178:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "181:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:14"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "154:3:14",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "159:1:14",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:14"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "163:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:14"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "118:50:14"
															},
															"nodeType": "YulIf",
															"src": "115:70:14"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "53:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:14",
														"type": ""
													}
												],
												"src": "14:177:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "253:107:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "263:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "278:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "272:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "272:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "263:5:14"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "338:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "347:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "350:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "340:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "340:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "340:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "307:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "328:5:14"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "321:6:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "321:13:14"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "314:6:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "314:21:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "304:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "304:32:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "297:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "297:40:14"
															},
															"nodeType": "YulIf",
															"src": "294:60:14"
														}
													]
												},
												"name": "abi_decode_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "232:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "243:5:14",
														"type": ""
													}
												],
												"src": "196:164:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "429:631:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "478:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "487:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "490:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "480:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "480:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "480:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "457:6:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "465:4:14",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "453:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "453:17:14"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "472:3:14"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "449:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "449:27:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "442:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "442:35:14"
															},
															"nodeType": "YulIf",
															"src": "439:55:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "503:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "519:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "513:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "513:13:14"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "507:2:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "565:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "567:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "567:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "567:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "541:2:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "553:2:14",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "557:1:14",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "549:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "549:10:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "561:1:14",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "545:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "545:18:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "538:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "538:26:14"
															},
															"nodeType": "YulIf",
															"src": "535:52:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "596:14:14",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "606:4:14",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "600:2:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "619:68:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "662:2:14"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "666:4:14",
																								"type": "",
																								"value": "0x1f"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "658:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "658:13:14"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "677:2:14",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "673:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "673:7:14"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "654:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "654:27:14"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "683:2:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "650:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "650:36:14"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "634:15:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "634:53:14"
															},
															"variables": [
																{
																	"name": "array_1",
																	"nodeType": "YulTypedName",
																	"src": "623:7:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array_1",
																		"nodeType": "YulIdentifier",
																		"src": "703:7:14"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "712:2:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "696:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "696:19:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "696:19:14"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "761:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "770:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "773:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "763:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "763:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "763:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "738:6:14"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "746:2:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "734:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "734:15:14"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "751:2:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "730:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "730:24:14"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "756:3:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "727:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "727:33:14"
															},
															"nodeType": "YulIf",
															"src": "724:53:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "786:10:14",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "795:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "790:1:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "851:88:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "array_1",
																									"nodeType": "YulIdentifier",
																									"src": "880:7:14"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "889:1:14"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "876:3:14"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "876:15:14"
																						},
																						{
																							"name": "_2",
																							"nodeType": "YulIdentifier",
																							"src": "893:2:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "872:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "872:24:14"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "912:6:14"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "920:1:14"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "908:3:14"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "908:14:14"
																								},
																								{
																									"name": "_2",
																									"nodeType": "YulIdentifier",
																									"src": "924:2:14"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "904:3:14"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "904:23:14"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "898:5:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "898:30:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "865:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "865:64:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "865:64:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "816:1:14"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "819:2:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "813:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "813:9:14"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "823:19:14",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "825:15:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "834:1:14"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "837:2:14"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "830:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "830:10:14"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "825:1:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "809:3:14",
																"statements": []
															},
															"src": "805:134:14"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "969:60:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "array_1",
																									"nodeType": "YulIdentifier",
																									"src": "998:7:14"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1007:2:14"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "994:3:14"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "994:16:14"
																						},
																						{
																							"name": "_2",
																							"nodeType": "YulIdentifier",
																							"src": "1012:2:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "990:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "990:25:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1017:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "983:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "983:36:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "983:36:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "954:1:14"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "957:2:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "951:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "951:9:14"
															},
															"nodeType": "YulIf",
															"src": "948:81:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1038:16:14",
															"value": {
																"name": "array_1",
																"nodeType": "YulIdentifier",
																"src": "1047:7:14"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1038:5:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "403:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "411:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "419:5:14",
														"type": ""
													}
												],
												"src": "365:695:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1146:127:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1192:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1201:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1204:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1194:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1194:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1194:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1167:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1176:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1163:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1163:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1188:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1159:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1159:32:14"
															},
															"nodeType": "YulIf",
															"src": "1156:52:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1217:50:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1257:9:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1227:29:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1227:40:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1217:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1112:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1123:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1135:6:14",
														"type": ""
													}
												],
												"src": "1065:208:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1535:1277:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1582:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1591:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1594:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1584:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1584:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1584:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1556:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1565:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1552:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1552:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1577:3:14",
																		"type": "",
																		"value": "512"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1548:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1548:33:14"
															},
															"nodeType": "YulIf",
															"src": "1545:53:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1607:50:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1647:9:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1617:29:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1617:40:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1607:6:14"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1666:12:14",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1676:2:14",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1670:2:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1687:39:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1711:9:14"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1722:2:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1707:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1707:18:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1701:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1701:25:14"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1691:6:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1735:28:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1753:2:14",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1757:1:14",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1749:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1749:10:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1761:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1745:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1745:18:14"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "1739:2:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1790:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1799:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1802:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1792:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1792:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1792:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1778:6:14"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1786:2:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1775:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1775:14:14"
															},
															"nodeType": "YulIf",
															"src": "1772:34:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1815:71:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1858:9:14"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1869:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1854:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1854:22:14"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1878:7:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1825:28:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1825:61:14"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1815:6:14"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1895:41:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1921:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1932:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1917:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1917:18:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1911:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1911:25:14"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1899:8:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1965:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1974:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1977:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1967:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1967:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1967:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1951:8:14"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1961:2:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1948:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1948:16:14"
															},
															"nodeType": "YulIf",
															"src": "1945:36:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1990:73:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2033:9:14"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "2044:8:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2029:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2029:24:14"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2055:7:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "2000:28:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2000:63:14"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1990:6:14"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2117:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2126:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2129:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2119:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2119:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2119:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2090:9:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2101:3:14",
																						"type": "",
																						"value": "127"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2086:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2086:19:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2107:7:14"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2082:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2082:33:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2075:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2075:41:14"
															},
															"nodeType": "YulIf",
															"src": "2072:61:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2142:32:14",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_memory_998",
																	"nodeType": "YulIdentifier",
																	"src": "2153:19:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2153:21:14"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2146:3:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2183:16:14",
															"value": {
																"name": "dst",
																"nodeType": "YulIdentifier",
																"src": "2196:3:14"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nodeType": "YulTypedName",
																	"src": "2187:5:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2208:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2223:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2234:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2219:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2219:18:14"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "2212:3:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2246:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2260:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2271:3:14",
																		"type": "",
																		"value": "352"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2256:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2256:19:14"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "2250:2:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2303:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2312:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2315:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2305:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2305:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2305:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "2290:2:14"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2294:7:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2287:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2287:15:14"
															},
															"nodeType": "YulIf",
															"src": "2284:35:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2328:10:14",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2337:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "2332:1:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2394:111:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "2415:3:14"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "2426:3:14"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2420:5:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2420:10:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2408:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2408:23:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2408:23:14"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2444:19:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "2455:3:14"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2460:2:14"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2451:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2451:12:14"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "2444:3:14"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2476:19:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "2487:3:14"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2492:2:14"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2483:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2483:12:14"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2476:3:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2358:1:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2361:4:14",
																		"type": "",
																		"value": "0x08"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2355:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2355:11:14"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2367:18:14",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2369:14:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "2378:1:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2381:1:14",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2374:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2374:9:14"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "2369:1:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2351:3:14",
																"statements": []
															},
															"src": "2347:158:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2514:15:14",
															"value": {
																"name": "dst_1",
																"nodeType": "YulIdentifier",
																"src": "2524:5:14"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "2514:6:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2538:40:14",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "2575:2:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bool_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "2548:26:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2548:30:14"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "2538:6:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2587:36:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2607:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2618:3:14",
																				"type": "",
																				"value": "384"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2603:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2603:19:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2597:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2597:26:14"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nodeType": "YulIdentifier",
																	"src": "2587:6:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2632:36:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2652:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2663:3:14",
																				"type": "",
																				"value": "416"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2648:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2648:19:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2642:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2642:26:14"
															},
															"variableNames": [
																{
																	"name": "value6",
																	"nodeType": "YulIdentifier",
																	"src": "2632:6:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2677:60:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2721:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2732:3:14",
																				"type": "",
																				"value": "448"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2717:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2717:19:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "2687:29:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2687:50:14"
															},
															"variableNames": [
																{
																	"name": "value7",
																	"nodeType": "YulIdentifier",
																	"src": "2677:6:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2746:60:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2790:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2801:3:14",
																				"type": "",
																				"value": "480"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2786:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2786:19:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "2756:29:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2756:50:14"
															},
															"variableNames": [
																{
																	"name": "value8",
																	"nodeType": "YulIdentifier",
																	"src": "2746:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptrt_array$_t_uint256_$8_memory_ptrt_boolt_uint256t_uint256t_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1437:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1448:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1460:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1468:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1476:6:14",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1484:6:14",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "1492:6:14",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "1500:6:14",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "1508:6:14",
														"type": ""
													},
													{
														"name": "value7",
														"nodeType": "YulTypedName",
														"src": "1516:6:14",
														"type": ""
													},
													{
														"name": "value8",
														"nodeType": "YulTypedName",
														"src": "1524:6:14",
														"type": ""
													}
												],
												"src": "1278:1534:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2898:103:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2944:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2953:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2956:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2946:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2946:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2946:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2919:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2928:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2915:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2915:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2940:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2911:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2911:32:14"
															},
															"nodeType": "YulIf",
															"src": "2908:52:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2969:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2985:9:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2979:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2979:16:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2969:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2864:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2875:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2887:6:14",
														"type": ""
													}
												],
												"src": "2817:184:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3180:229:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3197:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3208:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3190:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3190:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3190:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3231:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3242:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3227:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3227:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3247:2:14",
																		"type": "",
																		"value": "39"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3220:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3220:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3220:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3270:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3281:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3266:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3266:18:14"
																	},
																	{
																		"hexValue": "6d696e2062757920706572207573657220697320686967686572207468616e20",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3286:34:14",
																		"type": "",
																		"value": "min buy per user is higher than "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3259:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3259:62:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3259:62:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3341:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3352:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3337:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3337:18:14"
																	},
																	{
																		"hexValue": "68617264636170",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3357:9:14",
																		"type": "",
																		"value": "hardcap"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3330:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3330:37:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3330:37:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3376:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3388:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3399:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3384:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3384:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3376:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b253088eb843b61a79d6dacfebf6dd8590800840f2d12dcc8dec83049af7df61__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3157:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3171:4:14",
														"type": ""
													}
												],
												"src": "3006:403:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3588:310:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3605:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3616:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3598:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3598:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3598:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3639:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3650:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3635:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3635:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3655:2:14",
																		"type": "",
																		"value": "80"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3628:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3628:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3628:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3678:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3689:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3674:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3674:18:14"
																	},
																	{
																		"hexValue": "6e6f7420656e6f7567682045544820666f72206c69717569646974792c20696e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3694:34:14",
																		"type": "",
																		"value": "not enough ETH for liquidity, in"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3667:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3667:62:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3667:62:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3749:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3760:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3745:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3745:18:14"
																	},
																	{
																		"hexValue": "637265617365206c697374696e67207072696365206f72206465637265617365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3765:34:14",
																		"type": "",
																		"value": "crease listing price or decrease"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3738:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3738:62:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3738:62:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3820:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3831:3:14",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3816:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3816:19:14"
																	},
																	{
																		"hexValue": "206c6971756964697479207368617265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3837:18:14",
																		"type": "",
																		"value": " liquidity share"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3809:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3809:47:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3809:47:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3865:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3877:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3888:3:14",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3873:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3873:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3865:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fd0d685c1aea5b2037f3c3abd58b011bee2d2bed9ec4cb7b6efa2c3035e44a7f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3565:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3579:4:14",
														"type": ""
													}
												],
												"src": "3414:484:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4004:76:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4014:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4026:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4037:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4022:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4022:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4014:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4056:9:14"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4067:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4049:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4049:25:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4049:25:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3973:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3984:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3995:4:14",
														"type": ""
													}
												],
												"src": "3903:177:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4130:206:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4140:19:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4156:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4150:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4150:9:14"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "4140:6:14"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4168:34:14",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4190:6:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4198:3:14",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4186:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4186:16:14"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "4172:10:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4277:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4279:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4279:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4279:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "4220:10:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4240:2:14",
																								"type": "",
																								"value": "64"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4244:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4236:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4236:10:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4248:1:14",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4232:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4232:18:14"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4217:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4217:34:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "4256:10:14"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4268:6:14"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4253:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4253:22:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4214:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4214:62:14"
															},
															"nodeType": "YulIf",
															"src": "4211:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4315:2:14",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "4319:10:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4308:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4308:22:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4308:22:14"
														}
													]
												},
												"name": "allocate_memory_998",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4119:6:14",
														"type": ""
													}
												],
												"src": "4085:251:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4386:230:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4396:19:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4412:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4406:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4406:9:14"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "4396:6:14"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4424:58:14",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4446:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "4462:4:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4468:2:14",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4458:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4458:13:14"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4477:2:14",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "4473:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4473:7:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4454:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4454:27:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4442:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4442:40:14"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "4428:10:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4557:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4559:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4559:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4559:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "4500:10:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4520:2:14",
																								"type": "",
																								"value": "64"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4524:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4516:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4516:10:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4528:1:14",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4512:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4512:18:14"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4497:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4497:34:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "4536:10:14"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4548:6:14"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4533:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4533:22:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4494:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4494:62:14"
															},
															"nodeType": "YulIf",
															"src": "4491:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4595:2:14",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "4599:10:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4588:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4588:22:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4588:22:14"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "4366:4:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4375:6:14",
														"type": ""
													}
												],
												"src": "4341:275:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4667:171:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4698:111:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4719:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4726:3:14",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4731:10:14",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "4722:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4722:20:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4712:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4712:31:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4712:31:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4763:1:14",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4766:4:14",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4756:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4756:15:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4756:15:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4791:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4794:4:14",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4784:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4784:15:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4784:15:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4687:1:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4680:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4680:9:14"
															},
															"nodeType": "YulIf",
															"src": "4677:132:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4818:14:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4827:1:14"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4830:1:14"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "4823:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4823:9:14"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "4818:1:14"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4652:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4655:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "4661:1:14",
														"type": ""
													}
												],
												"src": "4621:217:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4895:116:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4954:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4956:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4956:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4956:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "4926:1:14"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4919:6:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4919:9:14"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "4912:6:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4912:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "4934:1:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4945:1:14",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "4941:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4941:6:14"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "4949:1:14"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "4937:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4937:14:14"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4931:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4931:21:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4908:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4908:45:14"
															},
															"nodeType": "YulIf",
															"src": "4905:71:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4985:20:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5000:1:14"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5003:1:14"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "4996:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4996:9:14"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "4985:7:14"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4874:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4877:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "4883:7:14",
														"type": ""
													}
												],
												"src": "4843:168:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5065:76:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5087:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5089:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5089:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5089:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5081:1:14"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5084:1:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5078:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5078:8:14"
															},
															"nodeType": "YulIf",
															"src": "5075:34:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5118:17:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5130:1:14"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5133:1:14"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "5126:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5126:9:14"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "5118:4:14"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5047:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5050:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "5056:4:14",
														"type": ""
													}
												],
												"src": "5016:125:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5201:325:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5211:22:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5225:1:14",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5228:4:14"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5221:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5221:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "5211:6:14"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5242:38:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5272:4:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5278:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5268:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5268:12:14"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "5246:18:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5319:31:14",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5321:27:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "5335:6:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5343:4:14",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "5331:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5331:17:14"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5321:6:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5299:18:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5292:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5292:26:14"
															},
															"nodeType": "YulIf",
															"src": "5289:61:14"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5409:111:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5430:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5437:3:14",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5442:10:14",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5433:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5433:20:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5423:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5423:31:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5423:31:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5474:1:14",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5477:4:14",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5467:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5467:15:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5467:15:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5502:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5505:4:14",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5495:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5495:15:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5495:15:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5365:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5388:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5396:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5385:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5385:14:14"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "5362:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5362:38:14"
															},
															"nodeType": "YulIf",
															"src": "5359:161:14"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "5181:4:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5190:6:14",
														"type": ""
													}
												],
												"src": "5146:380:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5563:95:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5580:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5587:3:14",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5592:10:14",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5583:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5583:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5573:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5573:31:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5573:31:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5620:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5623:4:14",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5613:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5613:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5613:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5644:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5647:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5637:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5637:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5637:15:14"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "5531:127:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5695:95:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5712:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5719:3:14",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5724:10:14",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5715:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5715:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5705:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5705:31:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5705:31:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5752:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5755:4:14",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5745:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5745:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5745:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5776:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5779:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5769:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5769:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5769:15:14"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "5663:127:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5827:95:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5844:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5851:3:14",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5856:10:14",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5847:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5847:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5837:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5837:31:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5837:31:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5884:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5887:4:14",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5877:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5877:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5877:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5908:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5911:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5901:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5901:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5901:15:14"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "5795:127:14"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_bool_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        if gt(_1, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        let _2 := 0x20\n        let array_1 := allocate_memory(add(and(add(_1, 0x1f), not(31)), _2))\n        mstore(array_1, _1)\n        if gt(add(add(offset, _1), _2), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _2) }\n        {\n            mstore(add(add(array_1, i), _2), mload(add(add(offset, i), _2)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(array_1, _1), _2), 0)\n        }\n        array := array_1\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n    }\n    function abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptrt_array$_t_uint256_$8_memory_ptrt_boolt_uint256t_uint256t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7, value8\n    {\n        if slt(sub(dataEnd, headStart), 512) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        let _1 := 32\n        let offset := mload(add(headStart, _1))\n        let _2 := sub(shl(64, 1), 1)\n        if gt(offset, _2) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 64))\n        if gt(offset_1, _2) { revert(0, 0) }\n        value2 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n        if iszero(slt(add(headStart, 127), dataEnd)) { revert(0, 0) }\n        let dst := allocate_memory_998()\n        let dst_1 := dst\n        let src := add(headStart, 96)\n        let _3 := add(headStart, 352)\n        if gt(_3, dataEnd) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, 0x08) { i := add(i, 1) }\n        {\n            mstore(dst, mload(src))\n            dst := add(dst, _1)\n            src := add(src, _1)\n        }\n        value3 := dst_1\n        value4 := abi_decode_bool_fromMemory(_3)\n        value5 := mload(add(headStart, 384))\n        value6 := mload(add(headStart, 416))\n        value7 := abi_decode_address_fromMemory(add(headStart, 448))\n        value8 := abi_decode_address_fromMemory(add(headStart, 480))\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_b253088eb843b61a79d6dacfebf6dd8590800840f2d12dcc8dec83049af7df61__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"min buy per user is higher than \")\n        mstore(add(headStart, 96), \"hardcap\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fd0d685c1aea5b2037f3c3abd58b011bee2d2bed9ec4cb7b6efa2c3035e44a7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 80)\n        mstore(add(headStart, 64), \"not enough ETH for liquidity, in\")\n        mstore(add(headStart, 96), \"crease listing price or decrease\")\n        mstore(add(headStart, 128), \" liquidity share\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function allocate_memory_998() -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, 256)\n        if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
									"id": 14,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052601380546301000000600160b81b03191664dead0000001790553480156200002b57600080fd5b5060405162002812380380620028128339810160408190526200004e9162000708565b60016000819055805460ff19169055601880546001600160a01b0319166001600160a01b038b1617905587516200008d90601a9060208b01906200057a565b508651620000a390601b9060208a01906200057a565b5085516002556020860151600355604086015160045560608601516005819055608087015160085560a087015160095560c0870151600f5560e0870151601081905510620001485760405162461bcd60e51b815260206004820152602760248201527f6d696e2062757920706572207573657220697320686967686572207468616e206044820152660686172646361760cc1b60648201526084015b60405180910390fd5b601580546001600160a01b03191633908117909155604080516373dc134960e01b815290516373dc134991600480820192602092909190829003018186803b1580156200019457600080fd5b505afa158015620001a9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001cf919062000833565b60075560055460045461271090620001e89082620008f1565b600254620001f79190620008cf565b620002039190620008ac565b6200020f9190620008ac565b600b556005546200022390600290620008ac565b600655600454600254612710916200023b91620008cf565b620002479190620008ac565b60128190556002546200025b9190620008f1565b60115560075461271090620002719082620008f1565b600554620002809190620008cf565b6200028c9190620008ac565b6003546012546200029e9190620008ac565b106200032c5760405162461bcd60e51b815260206004820152605060248201527f6e6f7420656e6f7567682045544820666f72206c69717569646974792c20696e60448201527f637265617365206c697374696e67207072696365206f7220646563726561736560648201526f206c697175696469747920736861726560801b608482015260a4016200013f565b600c8390556013805462ff000019166201000087151502179055600a84905560085484106200035a57600080fd5b601560009054906101000a90046001600160a01b03166001600160a01b0316632e8498946040518163ffffffff1660e01b815260040160206040518083038186803b158015620003a957600080fd5b505afa158015620003be573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003e4919062000833565b60195560135462010000900460ff1615620004a457601554601954604051630b1d2ef960e41b81526001600160a01b039092169163b1d2ef90916200042f9160040190815260200190565b60206040518083038186803b1580156200044857600080fd5b505afa1580156200045d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004839190620006e3565b601480546001600160a01b0319166001600160a01b03929092169190911790555b601560009054906101000a90046001600160a01b03166001600160a01b0316637e44d2cc6040518163ffffffff1660e01b815260040160206040518083038186803b158015620004f357600080fd5b505afa15801562000508573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200052e9190620006e3565b601c80546001600160a01b03199081166001600160a01b0393841617909155601d8054821693831693909317909255601680549092169216919091179055506200097495505050505050565b82805462000588906200090b565b90600052602060002090601f016020900481019282620005ac5760008555620005f7565b82601f10620005c757805160ff1916838001178555620005f7565b82800160010185558215620005f7579182015b82811115620005f7578251825591602001919060010190620005da565b506200060592915062000609565b5090565b5b808211156200060557600081556001016200060a565b80516001600160a01b03811681146200063857600080fd5b919050565b805180151581146200063857600080fd5b600082601f8301126200066057600080fd5b81516001600160401b038111156200067c576200067c6200095e565b602062000692601f8301601f1916820162000879565b8281528582848701011115620006a757600080fd5b60005b83811015620006c7578581018301518282018401528201620006aa565b83811115620006d95760008385840101525b5095945050505050565b600060208284031215620006f657600080fd5b620007018262000620565b9392505050565b60008060008060008060008060006102008a8c0312156200072857600080fd5b620007338a62000620565b60208b810151919a50906001600160401b03808211156200075357600080fd5b620007618e838f016200064e565b9a5060408d01519150808211156200077857600080fd5b50620007878d828e016200064e565b9850508b607f8c01126200079a57600080fd5b620007a46200084d565b8060608d016101608e018f811115620007bc57600080fd5b60005b6008811015620007de57825185529385019391850191600101620007bf565b50829a50620007ed816200063d565b995050505050506101808a015193506101a08a01519250620008136101c08b0162000620565b9150620008246101e08b0162000620565b90509295985092959850929598565b6000602082840312156200084657600080fd5b5051919050565b60405161010081016001600160401b03811182821017156200087357620008736200095e565b60405290565b604051601f8201601f191681016001600160401b0381118282101715620008a457620008a46200095e565b604052919050565b600082620008ca57634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615620008ec57620008ec62000948565b500290565b60008282101562000906576200090662000948565b500390565b600181811c908216806200092057607f821691505b602082108114156200094257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b611e8e80620009846000396000f3fe6080604052600436106102935760003560e01c80638f5d036b1161015a578063c7bf5166116100c1578063e49dce661161007a578063e49dce661461072d578063ea44c1bc1461074d578063ee97f7f314610763578063f887ea4014610783578063f89be593146107a3578063fc0c546a146107b957600080fd5b8063c7bf5166146106a6578063c84c0387146106bc578063d132a8f4146106d2578063d4b9de51146106e7578063da2cbd5014610701578063de284b3a1461071757600080fd5b8063a7bb580311610113578063a7bb5803146105e6578063aba8315014610625578063b071cbe61461063a578063bca1da8514610650578063be9feb3014610670578063c45a01551461068657600080fd5b80638f5d036b14610564578063957f1474146105795780639b8906ae14610581578063a0f7ab35146105a0578063a5f0dea2146105b6578063a611dc37146105d057600080fd5b806351fb012d116101fe5780636b7f3df3116101b75780636b7f3df3146104b45780636ef2e4d3146104e15780637284e416146104f757806378e979251461051957806383b17fdd1461052f57806385bf49461461054557600080fd5b806351fb012d1461040457806358a687ec1461043457806359663174146104495780635c975abb1461045c57806364db812e1461047457806366d003ac1461049457600080fd5b806327a72c961161025057806327a72c961461035157806327c8f835146103675780633197cbb61461038e5780633c876081146103a457806348c54b9d146103d95780634ae01d52146103ee57600080fd5b8063017f6fae14610298578063039ce157146102c157806303bcf11d146102d757806312e409c5146102ee578063201a341914610304578063238ac93314610319575b600080fd5b3480156102a457600080fd5b506102ae60075481565b6040519081526020015b60405180910390f35b3480156102cd57600080fd5b506102ae60115481565b3480156102e357600080fd5b506102ec6107d9565b005b3480156102fa57600080fd5b506102ae60105481565b34801561031057600080fd5b506102ec6108c7565b34801561032557600080fd5b50601454610339906001600160a01b031681565b6040516001600160a01b0390911681526020016102b8565b34801561035d57600080fd5b506102ae600e5481565b34801561037357600080fd5b5060135461033990630100000090046001600160a01b031681565b34801561039a57600080fd5b506102ae60095481565b3480156103b057600080fd5b506103396103bf366004611a70565b60208052600090815260409020546001600160a01b031681565b3480156103e557600080fd5b506102ec610d17565b3480156103fa57600080fd5b506102ae600c5481565b34801561041057600080fd5b506013546104249062010000900460ff1681565b60405190151581526020016102b8565b34801561044057600080fd5b506102ec610f6f565b6102ec610457366004611ad3565b6110b7565b34801561046857600080fd5b5060015460ff16610424565b34801561048057600080fd5b50601f546104249062010000900460ff1681565b3480156104a057600080fd5b50601c54610339906001600160a01b031681565b3480156104c057600080fd5b506102ae6104cf366004611a70565b60216020526000908152604090205481565b3480156104ed57600080fd5b506102ae60125481565b34801561050357600080fd5b5061050c611380565b6040516102b89190611bb6565b34801561052557600080fd5b506102ae60085481565b34801561053b57600080fd5b506102ae60025481565b34801561055157600080fd5b5060135461042490610100900460ff1681565b34801561057057600080fd5b506102ec61140e565b6102ec611509565b34801561058d57600080fd5b50601f5461042490610100900460ff1681565b3480156105ac57600080fd5b506102ae60035481565b3480156105c257600080fd5b50601f546104249060ff1681565b3480156105dc57600080fd5b506102ae60045481565b3480156105f257600080fd5b50610606610601366004611ad3565b6117ba565b6040805160ff90941684526020840192909252908201526060016102b8565b34801561063157600080fd5b5061050c6117e9565b34801561064657600080fd5b506102ae60055481565b34801561065c57600080fd5b50601d54610339906001600160a01b031681565b34801561067c57600080fd5b506102ae600a5481565b34801561069257600080fd5b50601754610339906001600160a01b031681565b3480156106b257600080fd5b506102ae600b5481565b3480156106c857600080fd5b506102ae60195481565b3480156106de57600080fd5b506102ae6117f6565b3480156106f357600080fd5b506013546104249060ff1681565b34801561070d57600080fd5b506102ae601e5481565b34801561072357600080fd5b506102ae600f5481565b34801561073957600080fd5b50610424610748366004611b10565b61180d565b34801561075957600080fd5b506102ae600d5481565b34801561076f57600080fd5b50601554610339906001600160a01b031681565b34801561078f57600080fd5b50601654610339906001600160a01b031681565b3480156107af57600080fd5b506102ae60065481565b3480156107c557600080fd5b50601854610339906001600160a01b031681565b601d546001600160a01b0316331461080c5760405162461bcd60e51b815260040161080390611ca2565b60405180910390fd5b601f54610100900460ff16156108645760405162461bcd60e51b815260206004820152601c60248201527f636c61696d696e672068617320616c72656164792073746172746564000000006044820152606401610803565b601f5462010000900460ff16156108b45760405162461bcd60e51b81526020600482015260146024820152731cd85b1948185b1c9958591e4818589bdc9d195960621b6044820152606401610803565b601f805462ff0000191662010000179055565b601d546001600160a01b031633146108f15760405162461bcd60e51b815260040161080390611ca2565b600260005414156109145760405162461bcd60e51b815260040161080390611d49565b6002600055601f5462010000900460ff16156109425760405162461bcd60e51b815260040161080390611d1f565b601f5460ff1661098c5760405162461bcd60e51b81526020600482015260156024820152741cd85b19481dd85cdb89dd08199a5b985b1a5e9959605a1b6044820152606401610803565b600654601e54116109df5760405162461bcd60e51b815260206004820152601b60248201527f6e6f7420656e6f75676820746f6b656e73207765726520736f6c6400000000006044820152606401610803565b601f54610100900460ff1615610a305760405162461bcd60e51b81526020600482015260166024820152751cd85b19481dd85cc8185b1c9958591e48195b99195960521b6044820152606401610803565b601f805461ff001916610100179055600354600090610a4d6117f6565b610a579190611d98565b90506000600554601e54601254610a6e9190611dba565b610a789190611d98565b60185460165460405163095ea7b360e01b81526001600160a01b03918216600482015260248101849052929350169063095ea7b390604401602060405180830381600087803b158015610aca57600080fd5b505af1158015610ade573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b029190611ab1565b506016546018546001600160a01b039182169163f305d719918591168460008030610b2f426103e8611d80565b60405160e089901b6001600160e01b03191681526001600160a01b039687166004820152602481019590955260448501939093526064840191909152909216608482015260a481019190915260c4016060604051808303818588803b158015610b9757600080fd5b505af1158015610bab573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610bd09190611b88565b505060155460408051631f9134b360e21b815290516001600160a01b039092169250637e44d2cc916004808301926020929190829003018186803b158015610c1757600080fd5b505afa158015610c2b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c4f9190611a94565b6001600160a01b0316612710600754601e54610c6b9190611dba565b610c759190611d98565b604051600081818185875af1925050503d8060008114610cb1576040519150601f19603f3d011682016040523d82523d6000602084013e610cb6565b606091505b5050601d546040516001600160a01b0390911691504790600081818185875af1925050503d8060008114610d06576040519150601f19603f3d011682016040523d82523d6000602084013e610d0b565b606091505b50506001600055505050565b60026000541415610d3a5760405162461bcd60e51b815260040161080390611d49565b6002600055601f5462010000900460ff1615610db65760405162461bcd60e51b815260206004820152603560248201527f73616c65207761732061626f727465642c20706c656173652075736520636c6160448201527434b6a9ba30b632a2ba34141490333ab731ba34b7b760591b6064820152608401610803565b33600090815260216020526040902054610e125760405162461bcd60e51b815260206004820152601f60248201527f75736572206861736e277420616e7920746f6b656e7320746f20636c61696d006044820152606401610803565b601f54610100900460ff16610e755760405162461bcd60e51b815260206004820152602360248201527f696e69746961746f72206861736e277420656e646564207468652073616c65206044820152621e595d60ea1b6064820152608401610803565b600b54336000908152602160205260408120549091610e9391611dba565b3360009081526021602052604080822091909155519091507f8a36f5a234186d446e36a7df36ace663a05a580d9bea2dd899c6dd76a075d5fa90610eda9083815260200190565b60405180910390a160185460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b158015610f2e57600080fd5b505af1158015610f42573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f669190611ab1565b50506001600055565b601d546001600160a01b03163314610f995760405162461bcd60e51b815260040161080390611ca2565b601f5462010000900460ff1615610fc25760405162461bcd60e51b815260040161080390611d1f565b6002546018546040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b15801561100857600080fd5b505afa15801561101c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110409190611b6f565b10156110a85760405162461bcd60e51b815260206004820152603160248201527f696e73756666696369656e7420616d6f756e74206f6620746f6b656e732073656044820152706e7420746f20746865206164647265737360781b6064820152608401610803565b601f805460ff19166001179055565b600260005414156110da5760405162461bcd60e51b815260040161080390611d49565b600260005560015460ff16156111255760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610803565b61113381336019544661180d565b61113c57600080fd5b601f5462010000900460ff16156111655760405162461bcd60e51b815260040161080390611d1f565b601f5460ff166111b75760405162461bcd60e51b815260206004820152601e60248201527f73616c65206861736e2774206265656e2066696e616c697a65642079657400006044820152606401610803565b60095442106111f95760405162461bcd60e51b815260206004820152600e60248201526d1cd85b19481a185cc8195b99195960921b6044820152606401610803565b600a5442116112445760405162461bcd60e51b81526020600482015260176024820152761cd85b19481a185cdb89dd081cdd185c9d1959081e595d604a1b6044820152606401610803565b600f54336000908152602160205260409020546112619034611d80565b111561127f5760405162461bcd60e51b815260040161080390611c5e565b6010543410156112cd5760405162461bcd60e51b81526020600482015260196024820152780f2deea4ee4ca40dcdee840e6cadcc8d2dcce40cadcdeeaced603b1b6044820152606401610803565b6011546112d86117f6565b600b546112e59034611dba565b6112ef9190611d80565b111561130d5760405162461bcd60e51b815260040161080390611c0b565b60055434601e5461131e9190611d80565b111561133c5760405162461bcd60e51b815260040161080390611cd9565b33600090815260216020526040902054611357903490611d80565b33600090815260216020526040902055601e54611375903490611d80565b601e55506001600055565b601a805461138d90611dd9565b80601f01602080910402602001604051908101604052809291908181526020018280546113b990611dd9565b80156114065780601f106113db57610100808354040283529160200191611406565b820191906000526020600020905b8154815290600101906020018083116113e957829003601f168201915b505050505081565b600260005414156114315760405162461bcd60e51b815260040161080390611d49565b6002600055601f54610100900460ff161561149a5760405162461bcd60e51b815260206004820152602360248201527f73616c6520686173206265656e20656e646564203a20796f752063616e20636c60448201526261696d60e81b6064820152608401610803565b601f5462010000900460ff16156114b3576114b3611927565b600654601e541080156114c7575060095442115b156114d4576114d4611927565b600654601e541180156114f557506009546114f29062015180611d80565b42115b1561150257611502611927565b6001600055565b6002600054141561152c5760405162461bcd60e51b815260040161080390611d49565b600260005560015460ff16156115775760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610803565b601f5462010000900460ff16156115a05760405162461bcd60e51b815260040161080390611d1f565b601f5460ff166115f25760405162461bcd60e51b815260206004820152601e60248201527f73616c65206861736e2774206265656e2066696e616c697a65642079657400006044820152606401610803565b600854421161163d5760405162461bcd60e51b81526020600482015260176024820152761cd85b19481a185cdb89dd081cdd185c9d1959081e595d604a1b6044820152606401610803565b600954421061167f5760405162461bcd60e51b815260206004820152600e60248201526d1cd85b19481a185cc8195b99195960921b6044820152606401610803565b600f543360009081526021602052604090205461169c9034611d80565b11156116ba5760405162461bcd60e51b815260040161080390611c5e565b6010543410156117085760405162461bcd60e51b81526020600482015260196024820152780f2deea4ee4ca40dcdee840e6cadcc8d2dcce40cadcdeeaced603b1b6044820152606401610803565b6011546117136117f6565b600b546117209034611dba565b61172a9190611d80565b11156117485760405162461bcd60e51b815260040161080390611c0b565b60055434601e546117599190611d80565b11156117775760405162461bcd60e51b815260040161080390611cd9565b33600090815260216020526040902054611792903490611d80565b33600090815260216020526040902055601e546117b0903490611d80565b601e556001600055565b600080600083516041146117cd57600080fd5b5050506020810151604082015160609092015160001a92909190565b601b805461138d90611dd9565b6000600b54601e546118089190611dba565b905090565b60008060008061181c886117ba565b604080516001600160a01b038c166020808301919091528183018c905260608083018c9052835180840390910181526080830190935282519201919091207f19457468657265756d205369676e6564204d6573736167653a0a33320000000060a083015260bc8201819052939650919450925060009060dc0160408051601f1981840301815282825280516020918201206000845290830180835281905260ff8816918301919091526060820186905260808201859052915060019060a0016020604051602081039080840390855afa1580156118fd573d6000803e3d6000fd5b5050604051601f1901516014546001600160a01b039182169116149b9a5050505050505050505050565b336000908152602160205260409020546119835760405162461bcd60e51b815260206004820152601f60248201527f75736572206861736e277420616e7920746f6b656e7320746f20636c61696d006044820152606401610803565b33600081815260216020526040808220805490839055905190929183919081818185875af1925050503d80600081146119d8576040519150601f19603f3d011682016040523d82523d6000602084013e6119dd565b606091505b50505050565b600082601f8301126119f457600080fd5b813567ffffffffffffffff80821115611a0f57611a0f611e2a565b604051601f8301601f19908116603f01168101908282118183101715611a3757611a37611e2a565b81604052838152866020858801011115611a5057600080fd5b836020870160208301376000602085830101528094505050505092915050565b600060208284031215611a8257600080fd5b8135611a8d81611e40565b9392505050565b600060208284031215611aa657600080fd5b8151611a8d81611e40565b600060208284031215611ac357600080fd5b81518015158114611a8d57600080fd5b600060208284031215611ae557600080fd5b813567ffffffffffffffff811115611afc57600080fd5b611b08848285016119e3565b949350505050565b60008060008060808587031215611b2657600080fd5b843567ffffffffffffffff811115611b3d57600080fd5b611b49878288016119e3565b9450506020850135611b5a81611e40565b93969395505050506040820135916060013590565b600060208284031215611b8157600080fd5b5051919050565b600080600060608486031215611b9d57600080fd5b8351925060208401519150604084015190509250925092565b600060208083528351808285015260005b81811015611be357858101830151858201604001528201611bc7565b81811115611bf5576000604083870101525b50601f01601f1916929092016040019392505050565b60208082526033908201527f7468657265206172656e277420656e6f75676820746f6b656e73206c6566742e60408201527208151c9e4818481b1bddd95c88185b5bdd5b9d606a1b606082015260800190565b60208082526024908201527f796f7527726520747279696e6720746f2062757920746f6f206d616e7920746f6040820152636b656e7360e01b606082015260800190565b6020808252601b908201527f63616c6c6572206973206e6f742074686520696e69746961746f720000000000604082015260600190565b60208082526026908201527f6861726463617020697320726561636865642e205472792061206c6f77657220604082015265185b5bdd5b9d60d21b606082015260800190565b60208082526010908201526f1cd85b19481dd85cc818589bdc9d195960821b604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60008219821115611d9357611d93611e14565b500190565b600082611db557634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615611dd457611dd4611e14565b500290565b600181811c90821680611ded57607f821691505b60208210811415611e0e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114611e5557600080fd5b5056fea2646970667358221220c0f319c2275355e0601f5672cdf63a5ce48b326a39a1742c9b57162189004c9664736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x13 DUP1 SLOAD PUSH4 0x1000000 PUSH1 0x1 PUSH1 0xB8 SHL SUB NOT AND PUSH5 0xDEAD000000 OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2812 CODESIZE SUB DUP1 PUSH3 0x2812 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x4E SWAP2 PUSH3 0x708 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x18 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND OR SWAP1 SSTORE DUP8 MLOAD PUSH3 0x8D SWAP1 PUSH1 0x1A SWAP1 PUSH1 0x20 DUP12 ADD SWAP1 PUSH3 0x57A JUMP JUMPDEST POP DUP7 MLOAD PUSH3 0xA3 SWAP1 PUSH1 0x1B SWAP1 PUSH1 0x20 DUP11 ADD SWAP1 PUSH3 0x57A JUMP JUMPDEST POP DUP6 MLOAD PUSH1 0x2 SSTORE PUSH1 0x20 DUP7 ADD MLOAD PUSH1 0x3 SSTORE PUSH1 0x40 DUP7 ADD MLOAD PUSH1 0x4 SSTORE PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x5 DUP2 SWAP1 SSTORE PUSH1 0x80 DUP8 ADD MLOAD PUSH1 0x8 SSTORE PUSH1 0xA0 DUP8 ADD MLOAD PUSH1 0x9 SSTORE PUSH1 0xC0 DUP8 ADD MLOAD PUSH1 0xF SSTORE PUSH1 0xE0 DUP8 ADD MLOAD PUSH1 0x10 DUP2 SWAP1 SSTORE LT PUSH3 0x148 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6D696E2062757920706572207573657220697320686967686572207468616E20 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x6861726463617 PUSH1 0xCC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x15 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0x73DC1349 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH4 0x73DC1349 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x194 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x1A9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x1CF SWAP2 SWAP1 PUSH3 0x833 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x5 SLOAD PUSH1 0x4 SLOAD PUSH2 0x2710 SWAP1 PUSH3 0x1E8 SWAP1 DUP3 PUSH3 0x8F1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH3 0x1F7 SWAP2 SWAP1 PUSH3 0x8CF JUMP JUMPDEST PUSH3 0x203 SWAP2 SWAP1 PUSH3 0x8AC JUMP JUMPDEST PUSH3 0x20F SWAP2 SWAP1 PUSH3 0x8AC JUMP JUMPDEST PUSH1 0xB SSTORE PUSH1 0x5 SLOAD PUSH3 0x223 SWAP1 PUSH1 0x2 SWAP1 PUSH3 0x8AC JUMP JUMPDEST PUSH1 0x6 SSTORE PUSH1 0x4 SLOAD PUSH1 0x2 SLOAD PUSH2 0x2710 SWAP2 PUSH3 0x23B SWAP2 PUSH3 0x8CF JUMP JUMPDEST PUSH3 0x247 SWAP2 SWAP1 PUSH3 0x8AC JUMP JUMPDEST PUSH1 0x12 DUP2 SWAP1 SSTORE PUSH1 0x2 SLOAD PUSH3 0x25B SWAP2 SWAP1 PUSH3 0x8F1 JUMP JUMPDEST PUSH1 0x11 SSTORE PUSH1 0x7 SLOAD PUSH2 0x2710 SWAP1 PUSH3 0x271 SWAP1 DUP3 PUSH3 0x8F1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH3 0x280 SWAP2 SWAP1 PUSH3 0x8CF JUMP JUMPDEST PUSH3 0x28C SWAP2 SWAP1 PUSH3 0x8AC JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x12 SLOAD PUSH3 0x29E SWAP2 SWAP1 PUSH3 0x8AC JUMP JUMPDEST LT PUSH3 0x32C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x50 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6E6F7420656E6F7567682045544820666F72206C69717569646974792C20696E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x637265617365206C697374696E67207072696365206F72206465637265617365 PUSH1 0x64 DUP3 ADD MSTORE PUSH16 0x206C6971756964697479207368617265 PUSH1 0x80 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH3 0x13F JUMP JUMPDEST PUSH1 0xC DUP4 SWAP1 SSTORE PUSH1 0x13 DUP1 SLOAD PUSH3 0xFF0000 NOT AND PUSH3 0x10000 DUP8 ISZERO ISZERO MUL OR SWAP1 SSTORE PUSH1 0xA DUP5 SWAP1 SSTORE PUSH1 0x8 SLOAD DUP5 LT PUSH3 0x35A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x15 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x2E849894 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x3A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x3BE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x3E4 SWAP2 SWAP1 PUSH3 0x833 JUMP JUMPDEST PUSH1 0x19 SSTORE PUSH1 0x13 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH3 0x4A4 JUMPI PUSH1 0x15 SLOAD PUSH1 0x19 SLOAD PUSH1 0x40 MLOAD PUSH4 0xB1D2EF9 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xB1D2EF90 SWAP2 PUSH3 0x42F SWAP2 PUSH1 0x4 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x448 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x45D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x483 SWAP2 SWAP1 PUSH3 0x6E3 JUMP JUMPDEST PUSH1 0x14 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST PUSH1 0x15 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x7E44D2CC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x4F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x508 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x52E SWAP2 SWAP1 PUSH3 0x6E3 JUMP JUMPDEST PUSH1 0x1C DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x1D DUP1 SLOAD DUP3 AND SWAP4 DUP4 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH1 0x16 DUP1 SLOAD SWAP1 SWAP3 AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP PUSH3 0x974 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x588 SWAP1 PUSH3 0x90B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x5AC JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x5F7 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x5C7 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x5F7 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x5F7 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x5F7 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x5DA JUMP JUMPDEST POP PUSH3 0x605 SWAP3 SWAP2 POP PUSH3 0x609 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x605 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x60A JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x638 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH3 0x638 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x660 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x67C JUMPI PUSH3 0x67C PUSH3 0x95E JUMP JUMPDEST PUSH1 0x20 PUSH3 0x692 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH3 0x879 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP6 DUP3 DUP5 DUP8 ADD ADD GT ISZERO PUSH3 0x6A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x6C7 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP3 DUP3 ADD DUP5 ADD MSTORE DUP3 ADD PUSH3 0x6AA JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x6D9 JUMPI PUSH1 0x0 DUP4 DUP6 DUP5 ADD ADD MSTORE JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x6F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x701 DUP3 PUSH3 0x620 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x200 DUP11 DUP13 SUB SLT ISZERO PUSH3 0x728 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x733 DUP11 PUSH3 0x620 JUMP JUMPDEST PUSH1 0x20 DUP12 DUP2 ADD MLOAD SWAP2 SWAP11 POP SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x753 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x761 DUP15 DUP4 DUP16 ADD PUSH3 0x64E JUMP JUMPDEST SWAP11 POP PUSH1 0x40 DUP14 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x778 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x787 DUP14 DUP3 DUP15 ADD PUSH3 0x64E JUMP JUMPDEST SWAP9 POP POP DUP12 PUSH1 0x7F DUP13 ADD SLT PUSH3 0x79A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x7A4 PUSH3 0x84D JUMP JUMPDEST DUP1 PUSH1 0x60 DUP14 ADD PUSH2 0x160 DUP15 ADD DUP16 DUP2 GT ISZERO PUSH3 0x7BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x8 DUP2 LT ISZERO PUSH3 0x7DE JUMPI DUP3 MLOAD DUP6 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP2 DUP6 ADD SWAP2 PUSH1 0x1 ADD PUSH3 0x7BF JUMP JUMPDEST POP DUP3 SWAP11 POP PUSH3 0x7ED DUP2 PUSH3 0x63D JUMP JUMPDEST SWAP10 POP POP POP POP POP POP PUSH2 0x180 DUP11 ADD MLOAD SWAP4 POP PUSH2 0x1A0 DUP11 ADD MLOAD SWAP3 POP PUSH3 0x813 PUSH2 0x1C0 DUP12 ADD PUSH3 0x620 JUMP JUMPDEST SWAP2 POP PUSH3 0x824 PUSH2 0x1E0 DUP12 ADD PUSH3 0x620 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x846 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x100 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH3 0x873 JUMPI PUSH3 0x873 PUSH3 0x95E JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH3 0x8A4 JUMPI PUSH3 0x8A4 PUSH3 0x95E JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0x8CA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH3 0x8EC JUMPI PUSH3 0x8EC PUSH3 0x948 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH3 0x906 JUMPI PUSH3 0x906 PUSH3 0x948 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x920 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x942 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1E8E DUP1 PUSH3 0x984 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x293 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8F5D036B GT PUSH2 0x15A JUMPI DUP1 PUSH4 0xC7BF5166 GT PUSH2 0xC1 JUMPI DUP1 PUSH4 0xE49DCE66 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xE49DCE66 EQ PUSH2 0x72D JUMPI DUP1 PUSH4 0xEA44C1BC EQ PUSH2 0x74D JUMPI DUP1 PUSH4 0xEE97F7F3 EQ PUSH2 0x763 JUMPI DUP1 PUSH4 0xF887EA40 EQ PUSH2 0x783 JUMPI DUP1 PUSH4 0xF89BE593 EQ PUSH2 0x7A3 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x7B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC7BF5166 EQ PUSH2 0x6A6 JUMPI DUP1 PUSH4 0xC84C0387 EQ PUSH2 0x6BC JUMPI DUP1 PUSH4 0xD132A8F4 EQ PUSH2 0x6D2 JUMPI DUP1 PUSH4 0xD4B9DE51 EQ PUSH2 0x6E7 JUMPI DUP1 PUSH4 0xDA2CBD50 EQ PUSH2 0x701 JUMPI DUP1 PUSH4 0xDE284B3A EQ PUSH2 0x717 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA7BB5803 GT PUSH2 0x113 JUMPI DUP1 PUSH4 0xA7BB5803 EQ PUSH2 0x5E6 JUMPI DUP1 PUSH4 0xABA83150 EQ PUSH2 0x625 JUMPI DUP1 PUSH4 0xB071CBE6 EQ PUSH2 0x63A JUMPI DUP1 PUSH4 0xBCA1DA85 EQ PUSH2 0x650 JUMPI DUP1 PUSH4 0xBE9FEB30 EQ PUSH2 0x670 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x686 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8F5D036B EQ PUSH2 0x564 JUMPI DUP1 PUSH4 0x957F1474 EQ PUSH2 0x579 JUMPI DUP1 PUSH4 0x9B8906AE EQ PUSH2 0x581 JUMPI DUP1 PUSH4 0xA0F7AB35 EQ PUSH2 0x5A0 JUMPI DUP1 PUSH4 0xA5F0DEA2 EQ PUSH2 0x5B6 JUMPI DUP1 PUSH4 0xA611DC37 EQ PUSH2 0x5D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x51FB012D GT PUSH2 0x1FE JUMPI DUP1 PUSH4 0x6B7F3DF3 GT PUSH2 0x1B7 JUMPI DUP1 PUSH4 0x6B7F3DF3 EQ PUSH2 0x4B4 JUMPI DUP1 PUSH4 0x6EF2E4D3 EQ PUSH2 0x4E1 JUMPI DUP1 PUSH4 0x7284E416 EQ PUSH2 0x4F7 JUMPI DUP1 PUSH4 0x78E97925 EQ PUSH2 0x519 JUMPI DUP1 PUSH4 0x83B17FDD EQ PUSH2 0x52F JUMPI DUP1 PUSH4 0x85BF4946 EQ PUSH2 0x545 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x51FB012D EQ PUSH2 0x404 JUMPI DUP1 PUSH4 0x58A687EC EQ PUSH2 0x434 JUMPI DUP1 PUSH4 0x59663174 EQ PUSH2 0x449 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x45C JUMPI DUP1 PUSH4 0x64DB812E EQ PUSH2 0x474 JUMPI DUP1 PUSH4 0x66D003AC EQ PUSH2 0x494 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x27A72C96 GT PUSH2 0x250 JUMPI DUP1 PUSH4 0x27A72C96 EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0x27C8F835 EQ PUSH2 0x367 JUMPI DUP1 PUSH4 0x3197CBB6 EQ PUSH2 0x38E JUMPI DUP1 PUSH4 0x3C876081 EQ PUSH2 0x3A4 JUMPI DUP1 PUSH4 0x48C54B9D EQ PUSH2 0x3D9 JUMPI DUP1 PUSH4 0x4AE01D52 EQ PUSH2 0x3EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x17F6FAE EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0x39CE157 EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x3BCF11D EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0x12E409C5 EQ PUSH2 0x2EE JUMPI DUP1 PUSH4 0x201A3419 EQ PUSH2 0x304 JUMPI DUP1 PUSH4 0x238AC933 EQ PUSH2 0x319 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AE PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AE PUSH1 0x11 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EC PUSH2 0x7D9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AE PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x310 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EC PUSH2 0x8C7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x325 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x14 SLOAD PUSH2 0x339 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2B8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AE PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x373 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x13 SLOAD PUSH2 0x339 SWAP1 PUSH4 0x1000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AE PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x339 PUSH2 0x3BF CALLDATASIZE PUSH1 0x4 PUSH2 0x1A70 JUMP JUMPDEST PUSH1 0x20 DUP1 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EC PUSH2 0xD17 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AE PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x410 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x13 SLOAD PUSH2 0x424 SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2B8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x440 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EC PUSH2 0xF6F JUMP JUMPDEST PUSH2 0x2EC PUSH2 0x457 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AD3 JUMP JUMPDEST PUSH2 0x10B7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x468 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0xFF AND PUSH2 0x424 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x480 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1F SLOAD PUSH2 0x424 SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1C SLOAD PUSH2 0x339 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AE PUSH2 0x4CF CALLDATASIZE PUSH1 0x4 PUSH2 0x1A70 JUMP JUMPDEST PUSH1 0x21 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AE PUSH1 0x12 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x503 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x50C PUSH2 0x1380 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B8 SWAP2 SWAP1 PUSH2 0x1BB6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x525 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AE PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x53B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AE PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x551 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x13 SLOAD PUSH2 0x424 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x570 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EC PUSH2 0x140E JUMP JUMPDEST PUSH2 0x2EC PUSH2 0x1509 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1F SLOAD PUSH2 0x424 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AE PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1F SLOAD PUSH2 0x424 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AE PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x606 PUSH2 0x601 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AD3 JUMP JUMPDEST PUSH2 0x17BA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP5 AND DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x2B8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x631 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x50C PUSH2 0x17E9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x646 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AE PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x65C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1D SLOAD PUSH2 0x339 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x67C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AE PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x692 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x17 SLOAD PUSH2 0x339 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AE PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AE PUSH1 0x19 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AE PUSH2 0x17F6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x13 SLOAD PUSH2 0x424 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x70D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AE PUSH1 0x1E SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x723 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AE PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x739 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x424 PUSH2 0x748 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B10 JUMP JUMPDEST PUSH2 0x180D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x759 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AE PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x76F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x15 SLOAD PUSH2 0x339 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x78F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x16 SLOAD PUSH2 0x339 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AE PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x18 SLOAD PUSH2 0x339 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1D SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x80C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x803 SWAP1 PUSH2 0x1CA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1F SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x864 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x636C61696D696E672068617320616C7265616479207374617274656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x1F SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x8B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x1CD85B1948185B1C9958591E4818589BDC9D1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x1F DUP1 SLOAD PUSH3 0xFF0000 NOT AND PUSH3 0x10000 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1D SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8F1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x803 SWAP1 PUSH2 0x1CA2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x914 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x803 SWAP1 PUSH2 0x1D49 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE PUSH1 0x1F SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x942 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x803 SWAP1 PUSH2 0x1D1F JUMP JUMPDEST PUSH1 0x1F SLOAD PUSH1 0xFF AND PUSH2 0x98C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x1CD85B19481DD85CDB89DD08199A5B985B1A5E9959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1E SLOAD GT PUSH2 0x9DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6E6F7420656E6F75676820746F6B656E73207765726520736F6C640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x1F SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xA30 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x1CD85B19481DD85CC8185B1C9958591E48195B991959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x1F DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 PUSH2 0xA4D PUSH2 0x17F6 JUMP JUMPDEST PUSH2 0xA57 SWAP2 SWAP1 PUSH2 0x1D98 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x5 SLOAD PUSH1 0x1E SLOAD PUSH1 0x12 SLOAD PUSH2 0xA6E SWAP2 SWAP1 PUSH2 0x1DBA JUMP JUMPDEST PUSH2 0xA78 SWAP2 SWAP1 PUSH2 0x1D98 JUMP JUMPDEST PUSH1 0x18 SLOAD PUSH1 0x16 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP3 SWAP4 POP AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xACA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xADE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB02 SWAP2 SWAP1 PUSH2 0x1AB1 JUMP JUMPDEST POP PUSH1 0x16 SLOAD PUSH1 0x18 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 PUSH4 0xF305D719 SWAP2 DUP6 SWAP2 AND DUP5 PUSH1 0x0 DUP1 ADDRESS PUSH2 0xB2F TIMESTAMP PUSH2 0x3E8 PUSH2 0x1D80 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xE0 DUP10 SWAP1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x44 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x64 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP3 AND PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xC4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBAB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBD0 SWAP2 SWAP1 PUSH2 0x1B88 JUMP JUMPDEST POP POP PUSH1 0x15 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x1F9134B3 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 POP PUSH4 0x7E44D2CC SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC2B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC4F SWAP2 SWAP1 PUSH2 0x1A94 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2710 PUSH1 0x7 SLOAD PUSH1 0x1E SLOAD PUSH2 0xC6B SWAP2 SWAP1 PUSH2 0x1DBA JUMP JUMPDEST PUSH2 0xC75 SWAP2 SWAP1 PUSH2 0x1D98 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xCB1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xCB6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP PUSH1 0x1D SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 POP SELFBALANCE SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xD06 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xD0B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x0 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0xD3A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x803 SWAP1 PUSH2 0x1D49 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE PUSH1 0x1F SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xDB6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x73616C65207761732061626F727465642C20706C656173652075736520636C61 PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x34B6A9BA30B632A2BA34141490333AB731BA34B7B7 PUSH1 0x59 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x803 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x21 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xE12 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x75736572206861736E277420616E7920746F6B656E7320746F20636C61696D00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x1F SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xE75 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E69746961746F72206861736E277420656E646564207468652073616C6520 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x1E595D PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0xB SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x21 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0xE93 SWAP2 PUSH2 0x1DBA JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x21 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE MLOAD SWAP1 SWAP2 POP PUSH32 0x8A36F5A234186D446E36A7DF36ACE663A05A580D9BEA2DD899C6DD76A075D5FA SWAP1 PUSH2 0xEDA SWAP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x18 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF2E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF42 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF66 SWAP2 SWAP1 PUSH2 0x1AB1 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x1D SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xF99 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x803 SWAP1 PUSH2 0x1CA2 JUMP JUMPDEST PUSH1 0x1F SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xFC2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x803 SWAP1 PUSH2 0x1D1F JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x18 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1008 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x101C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1040 SWAP2 SWAP1 PUSH2 0x1B6F JUMP JUMPDEST LT ISZERO PUSH2 0x10A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E73756666696369656E7420616D6F756E74206F6620746F6B656E73207365 PUSH1 0x44 DUP3 ADD MSTORE PUSH17 0x6E7420746F207468652061646472657373 PUSH1 0x78 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x1F DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x10DA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x803 SWAP1 PUSH2 0x1D49 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE PUSH1 0x1 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1125 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH2 0x1133 DUP2 CALLER PUSH1 0x19 SLOAD CHAINID PUSH2 0x180D JUMP JUMPDEST PUSH2 0x113C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1F SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1165 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x803 SWAP1 PUSH2 0x1D1F JUMP JUMPDEST PUSH1 0x1F SLOAD PUSH1 0xFF AND PUSH2 0x11B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x73616C65206861736E2774206265656E2066696E616C697A6564207965740000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x9 SLOAD TIMESTAMP LT PUSH2 0x11F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x1CD85B19481A185CC8195B991959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0xA SLOAD TIMESTAMP GT PUSH2 0x1244 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x1CD85B19481A185CDB89DD081CDD185C9D1959081E595D PUSH1 0x4A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0xF SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x21 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1261 SWAP1 CALLVALUE PUSH2 0x1D80 JUMP JUMPDEST GT ISZERO PUSH2 0x127F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x803 SWAP1 PUSH2 0x1C5E JUMP JUMPDEST PUSH1 0x10 SLOAD CALLVALUE LT ISZERO PUSH2 0x12CD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0xF2DEEA4EE4CA40DCDEE840E6CADCC8D2DCCE40CADCDEEACED PUSH1 0x3B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH2 0x12D8 PUSH2 0x17F6 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x12E5 SWAP1 CALLVALUE PUSH2 0x1DBA JUMP JUMPDEST PUSH2 0x12EF SWAP2 SWAP1 PUSH2 0x1D80 JUMP JUMPDEST GT ISZERO PUSH2 0x130D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x803 SWAP1 PUSH2 0x1C0B JUMP JUMPDEST PUSH1 0x5 SLOAD CALLVALUE PUSH1 0x1E SLOAD PUSH2 0x131E SWAP2 SWAP1 PUSH2 0x1D80 JUMP JUMPDEST GT ISZERO PUSH2 0x133C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x803 SWAP1 PUSH2 0x1CD9 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x21 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1357 SWAP1 CALLVALUE SWAP1 PUSH2 0x1D80 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x21 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x1E SLOAD PUSH2 0x1375 SWAP1 CALLVALUE SWAP1 PUSH2 0x1D80 JUMP JUMPDEST PUSH1 0x1E SSTORE POP PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x1A DUP1 SLOAD PUSH2 0x138D SWAP1 PUSH2 0x1DD9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x13B9 SWAP1 PUSH2 0x1DD9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1406 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x13DB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1406 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x13E9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x1431 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x803 SWAP1 PUSH2 0x1D49 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE PUSH1 0x1F SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x149A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x73616C6520686173206265656E20656E646564203A20796F752063616E20636C PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x61696D PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x1F SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x14B3 JUMPI PUSH2 0x14B3 PUSH2 0x1927 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1E SLOAD LT DUP1 ISZERO PUSH2 0x14C7 JUMPI POP PUSH1 0x9 SLOAD TIMESTAMP GT JUMPDEST ISZERO PUSH2 0x14D4 JUMPI PUSH2 0x14D4 PUSH2 0x1927 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1E SLOAD GT DUP1 ISZERO PUSH2 0x14F5 JUMPI POP PUSH1 0x9 SLOAD PUSH2 0x14F2 SWAP1 PUSH3 0x15180 PUSH2 0x1D80 JUMP JUMPDEST TIMESTAMP GT JUMPDEST ISZERO PUSH2 0x1502 JUMPI PUSH2 0x1502 PUSH2 0x1927 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x152C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x803 SWAP1 PUSH2 0x1D49 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE PUSH1 0x1 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1577 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x1F SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x15A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x803 SWAP1 PUSH2 0x1D1F JUMP JUMPDEST PUSH1 0x1F SLOAD PUSH1 0xFF AND PUSH2 0x15F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x73616C65206861736E2774206265656E2066696E616C697A6564207965740000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x8 SLOAD TIMESTAMP GT PUSH2 0x163D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x1CD85B19481A185CDB89DD081CDD185C9D1959081E595D PUSH1 0x4A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x9 SLOAD TIMESTAMP LT PUSH2 0x167F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x1CD85B19481A185CC8195B991959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0xF SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x21 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x169C SWAP1 CALLVALUE PUSH2 0x1D80 JUMP JUMPDEST GT ISZERO PUSH2 0x16BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x803 SWAP1 PUSH2 0x1C5E JUMP JUMPDEST PUSH1 0x10 SLOAD CALLVALUE LT ISZERO PUSH2 0x1708 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0xF2DEEA4EE4CA40DCDEE840E6CADCC8D2DCCE40CADCDEEACED PUSH1 0x3B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH2 0x1713 PUSH2 0x17F6 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x1720 SWAP1 CALLVALUE PUSH2 0x1DBA JUMP JUMPDEST PUSH2 0x172A SWAP2 SWAP1 PUSH2 0x1D80 JUMP JUMPDEST GT ISZERO PUSH2 0x1748 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x803 SWAP1 PUSH2 0x1C0B JUMP JUMPDEST PUSH1 0x5 SLOAD CALLVALUE PUSH1 0x1E SLOAD PUSH2 0x1759 SWAP2 SWAP1 PUSH2 0x1D80 JUMP JUMPDEST GT ISZERO PUSH2 0x1777 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x803 SWAP1 PUSH2 0x1CD9 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x21 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1792 SWAP1 CALLVALUE SWAP1 PUSH2 0x1D80 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x21 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x1E SLOAD PUSH2 0x17B0 SWAP1 CALLVALUE SWAP1 PUSH2 0x1D80 JUMP JUMPDEST PUSH1 0x1E SSTORE PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 MLOAD PUSH1 0x41 EQ PUSH2 0x17CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x60 SWAP1 SWAP3 ADD MLOAD PUSH1 0x0 BYTE SWAP3 SWAP1 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x1B DUP1 SLOAD PUSH2 0x138D SWAP1 PUSH2 0x1DD9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB SLOAD PUSH1 0x1E SLOAD PUSH2 0x1808 SWAP2 SWAP1 PUSH2 0x1DBA JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x181C DUP9 PUSH2 0x17BA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 DUP4 ADD DUP13 SWAP1 MSTORE PUSH1 0x60 DUP1 DUP4 ADD DUP13 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x80 DUP4 ADD SWAP1 SWAP4 MSTORE DUP3 MLOAD SWAP3 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xBC DUP3 ADD DUP2 SWAP1 MSTORE SWAP4 SWAP7 POP SWAP2 SWAP5 POP SWAP3 POP PUSH1 0x0 SWAP1 PUSH1 0xDC ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x0 DUP5 MSTORE SWAP1 DUP4 ADD DUP1 DUP4 MSTORE DUP2 SWAP1 MSTORE PUSH1 0xFF DUP9 AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP3 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 POP PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x18FD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD PUSH1 0x14 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND EQ SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x21 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1983 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x75736572206861736E277420616E7920746F6B656E7320746F20636C61696D00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x21 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD SWAP1 DUP4 SWAP1 SSTORE SWAP1 MLOAD SWAP1 SWAP3 SWAP2 DUP4 SWAP2 SWAP1 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x19D8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x19DD JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x19F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1A0F JUMPI PUSH2 0x1A0F PUSH2 0x1E2A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1A37 JUMPI PUSH2 0x1A37 PUSH2 0x1E2A JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x1A50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1A8D DUP2 PUSH2 0x1E40 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1A8D DUP2 PUSH2 0x1E40 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1A8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1AFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B08 DUP5 DUP3 DUP6 ADD PUSH2 0x19E3 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1B26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B49 DUP8 DUP3 DUP9 ADD PUSH2 0x19E3 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x1B5A DUP2 PUSH2 0x1E40 JUMP JUMPDEST SWAP4 SWAP7 SWAP4 SWAP6 POP POP POP POP PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1B9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MLOAD SWAP3 POP PUSH1 0x20 DUP5 ADD MLOAD SWAP2 POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1BE3 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x1BC7 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1BF5 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x33 SWAP1 DUP3 ADD MSTORE PUSH32 0x7468657265206172656E277420656E6F75676820746F6B656E73206C6566742E PUSH1 0x40 DUP3 ADD MSTORE PUSH19 0x8151C9E4818481B1BDDD95C88185B5BDD5B9D PUSH1 0x6A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x796F7527726520747279696E6720746F2062757920746F6F206D616E7920746F PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x6B656E73 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH32 0x63616C6C6572206973206E6F742074686520696E69746961746F720000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x6861726463617020697320726561636865642E205472792061206C6F77657220 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x185B5BDD5B9D PUSH1 0xD2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x1CD85B19481DD85CC818589BDC9D1959 PUSH1 0x82 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1D93 JUMPI PUSH2 0x1D93 PUSH2 0x1E14 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1DB5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1DD4 JUMPI PUSH2 0x1DD4 PUSH2 0x1E14 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1DED JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1E0E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1E55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC0 RETURN NOT 0xC2 0x27 MSTORE8 SSTORE 0xE0 PUSH1 0x1F JUMP PUSH19 0xCDF63A5CE48B326A39A1742C9B57162189004C SWAP7 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "422:12011:13:-:0;;;2021:71;;;-1:-1:-1;;;;;;2021:71:13;;;;;3427:2536;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1701:1:3;1806:7;:22;;;981:15:2;;-1:-1:-1;;981:15:2;;;4065:5:13;:22;;-1:-1:-1;;;;;;4065:22:13;-1:-1:-1;;;;;4065:22:13;;;;;4093:26;;;;:11;;:26;;;;;:::i;:::-;-1:-1:-1;4125:20:13;;;;:8;;:20;;;;;:::i;:::-;-1:-1:-1;4194:14:13;;4175:16;:33;4194:14;4239;;;4214:22;:39;4278:14;;;;4259:16;:33;4308:14;;;;4298:7;:24;;;4340:14;;;;4328:9;:26;4370:14;;;;4360:7;:24;4406:14;;;;4390:13;:30;4442:14;;;;4426:13;:30;;;-1:-1:-1;4462:75:13;;;;-1:-1:-1;;;4462:75:13;;3208:2:14;4462:75:13;;;3190:21:14;3247:2;3227:18;;;3220:30;3286:34;3266:18;;;3259:62;-1:-1:-1;;;3337:18:14;;;3330:37;3384:19;;4462:75:13;;;;;;;;;4544:6;:37;;-1:-1:-1;;;;;;4544:37:13;4570:10;4544:37;;;;;;4595:15;;;-1:-1:-1;;;4595:15:13;;;;:13;;:15;;;;;;;;;;;;;;;4570:10;4595:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4587:5;:23;4713:7;;4676:16;;4697:6;;4667:25;;4697:6;4667:25;:::i;:::-;4647:16;;:46;;;;:::i;:::-;4646:57;;;;:::i;:::-;4645:75;;;;:::i;:::-;4617:19;:103;4737:7;;:11;;4747:1;;4737:11;:::i;:::-;4727:7;:21;4800:16;;4781;;4820:6;;4781:35;;;:::i;:::-;4780:46;;;;:::i;:::-;4754:23;:72;;;4853:16;;:42;;4754:72;4853:42;:::i;:::-;4832:18;:63;5147:5;;5157:6;;5138:14;;5157:6;5138:14;:::i;:::-;5127:7;;:26;;;;:::i;:::-;5126:37;;;;:::i;:::-;5092:22;;5066:23;;:48;;;;:::i;:::-;:98;5051:209;;;;-1:-1:-1;;;5051:209:13;;3616:2:14;5051:209:13;;;3598:21:14;3655:2;3635:18;;;3628:30;3694:34;3674:18;;;3667:62;3765:34;3745:18;;;3738:62;-1:-1:-1;;;3816:19:14;;;3809:47;3873:19;;5051:209:13;3414:484:14;5051:209:13;5267:21;:46;;;5534:16;:36;;-1:-1:-1;;5534:36:13;;;;;;;;;5576:11;:26;;;5630:9;;5616:23;;5608:32;;;;;;5656:6;;;;;;;;;-1:-1:-1;;;;;5656:6:13;-1:-1:-1;;;;;5656:20:13;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5647:6;:31;5689:16;;;;;;;5685:73;;;5724:6;;5744;;5724:27;;-1:-1:-1;;;5724:27:13;;-1:-1:-1;;;;;5724:6:13;;;;:19;;:27;;;;4049:25:14;;;4037:2;4022:18;;3903:177;5724:27:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5715:6;:36;;-1:-1:-1;;;;;;5715:36:13;-1:-1:-1;;;;;5715:36:13;;;;;;;;;;5685:73;5784:6;;;;;;;;;-1:-1:-1;;;;;5784:6:13;-1:-1:-1;;;;;5784:17:13;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5764:9;:40;;-1:-1:-1;;;;;;5764:40:13;;;-1:-1:-1;;;;;5764:40:13;;;;;;;5810:13;:39;;;;;;;;;;;;;;5856:6;:36;;;;;;;;;;;;;-1:-1:-1;422:12011:13;;-1:-1:-1;;;;;;422:12011:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;422:12011:13;;;-1:-1:-1;422:12011:13;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:177:14;93:13;;-1:-1:-1;;;;;135:31:14;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:164::-;272:13;;321;;314:21;304:32;;294:60;;350:1;347;340:12;365:695;419:5;472:3;465:4;457:6;453:17;449:27;439:55;;490:1;487;480:12;439:55;513:13;;-1:-1:-1;;;;;538:26:14;;535:52;;;567:18;;:::i;:::-;606:4;634:53;677:2;658:13;;-1:-1:-1;;654:27:14;650:36;;634:53;:::i;:::-;712:2;703:7;696:19;756:3;751:2;746;738:6;734:15;730:24;727:33;724:53;;;773:1;770;763:12;724:53;795:1;805:134;819:2;816:1;813:9;805:134;;;908:14;;;904:23;;898:30;876:15;;;872:24;;865:64;830:10;;805:134;;;957:2;954:1;951:9;948:81;;;1017:1;1012:2;1007;998:7;994:16;990:25;983:36;948:81;-1:-1:-1;1047:7:14;365:695;-1:-1:-1;;;;;365:695:14:o;1065:208::-;1135:6;1188:2;1176:9;1167:7;1163:23;1159:32;1156:52;;;1204:1;1201;1194:12;1156:52;1227:40;1257:9;1227:40;:::i;:::-;1217:50;1065:208;-1:-1:-1;;;1065:208:14:o;1278:1534::-;1460:6;1468;1476;1484;1492;1500;1508;1516;1524;1577:3;1565:9;1556:7;1552:23;1548:33;1545:53;;;1594:1;1591;1584:12;1545:53;1617:40;1647:9;1617:40;:::i;:::-;1676:2;1707:18;;;1701:25;1607:50;;-1:-1:-1;1676:2:14;-1:-1:-1;;;;;1775:14:14;;;1772:34;;;1802:1;1799;1792:12;1772:34;1825:61;1878:7;1869:6;1858:9;1854:22;1825:61;:::i;:::-;1815:71;;1932:2;1921:9;1917:18;1911:25;1895:41;;1961:2;1951:8;1948:16;1945:36;;;1977:1;1974;1967:12;1945:36;;2000:63;2055:7;2044:8;2033:9;2029:24;2000:63;:::i;:::-;1990:73;;;2107:7;2101:3;2090:9;2086:19;2082:33;2072:61;;2129:1;2126;2119:12;2072:61;2153:21;;:::i;:::-;2196:3;2234:2;2223:9;2219:18;2271:3;2260:9;2256:19;2294:7;2290:2;2287:15;2284:35;;;2315:1;2312;2305:12;2284:35;2337:1;2347:158;2361:4;2358:1;2355:11;2347:158;;;2420:10;;2408:23;;2451:12;;;;2483;;;;2381:1;2374:9;2347:158;;;2351:3;2524:5;2514:15;;2548:30;2575:2;2548:30;:::i;:::-;2538:40;;;;;;;2618:3;2607:9;2603:19;2597:26;2587:36;;2663:3;2652:9;2648:19;2642:26;2632:36;;2687:50;2732:3;2721:9;2717:19;2687:50;:::i;:::-;2677:60;;2756:50;2801:3;2790:9;2786:19;2756:50;:::i;:::-;2746:60;;1278:1534;;;;;;;;;;;:::o;2817:184::-;2887:6;2940:2;2928:9;2919:7;2915:23;2911:32;2908:52;;;2956:1;2953;2946:12;2908:52;-1:-1:-1;2979:16:14;;2817:184;-1:-1:-1;2817:184:14:o;4085:251::-;4156:2;4150:9;4198:3;4186:16;;-1:-1:-1;;;;;4217:34:14;;4253:22;;;4214:62;4211:88;;;4279:18;;:::i;:::-;4315:2;4308:22;4085:251;:::o;4341:275::-;4412:2;4406:9;4477:2;4458:13;;-1:-1:-1;;4454:27:14;4442:40;;-1:-1:-1;;;;;4497:34:14;;4533:22;;;4494:62;4491:88;;;4559:18;;:::i;:::-;4595:2;4588:22;4341:275;;-1:-1:-1;4341:275:14:o;4621:217::-;4661:1;4687;4677:132;;4731:10;4726:3;4722:20;4719:1;4712:31;4766:4;4763:1;4756:15;4794:4;4791:1;4784:15;4677:132;-1:-1:-1;4823:9:14;;4621:217::o;4843:168::-;4883:7;4949:1;4945;4941:6;4937:14;4934:1;4931:21;4926:1;4919:9;4912:17;4908:45;4905:71;;;4956:18;;:::i;:::-;-1:-1:-1;4996:9:14;;4843:168::o;5016:125::-;5056:4;5084:1;5081;5078:8;5075:34;;;5089:18;;:::i;:::-;-1:-1:-1;5126:9:14;;5016:125::o;5146:380::-;5225:1;5221:12;;;;5268;;;5289:61;;5343:4;5335:6;5331:17;5321:27;;5289:61;5396:2;5388:6;5385:14;5365:18;5362:38;5359:161;;;5442:10;5437:3;5433:20;5430:1;5423:31;5477:4;5474:1;5467:15;5505:4;5502:1;5495:15;5359:161;;5146:380;;;:::o;5531:127::-;5592:10;5587:3;5583:20;5580:1;5573:31;5623:4;5620:1;5613:15;5647:4;5644:1;5637:15;5795:127;5856:10;5851:3;5847:20;5844:1;5837:31;5887:4;5884:1;5877:15;5911:4;5908:1;5901:15;5795:127;422:12011:13;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_claimStaleEth_2480": {
									"entryPoint": 6439,
									"id": 2480,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@abortSale_2004": {
									"entryPoint": 2009,
									"id": 2004,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@buyTokensPublic_2132": {
									"entryPoint": 5385,
									"id": 2132,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@buyTokensWhitelist_2244": {
									"entryPoint": 4279,
									"id": 2244,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@claimStaleEth_2442": {
									"entryPoint": 5134,
									"id": 2442,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@claimTokens_2396": {
									"entryPoint": 3351,
									"id": 2396,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@deadAddress_1699": {
									"entryPoint": null,
									"id": 1699,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@description_1717": {
									"entryPoint": 4992,
									"id": 1717,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@endSaleAllowClaim_2592": {
									"entryPoint": 2247,
									"id": 2592,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@endTime_1672": {
									"entryPoint": null,
									"id": 1672,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@factory_1710": {
									"entryPoint": null,
									"id": 1710,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@feeBP_1668": {
									"entryPoint": null,
									"id": 1668,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@finalizeSale_2033": {
									"entryPoint": 3951,
									"id": 2033,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@hardcap_1664": {
									"entryPoint": null,
									"id": 1664,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@imageUrl_1719": {
									"entryPoint": 6121,
									"id": 1719,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@liquidityLockDuration_1678": {
									"entryPoint": null,
									"id": 1678,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@liquidityShareBP_1662": {
									"entryPoint": null,
									"id": 1662,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@listingTokensPerOneEth_1660": {
									"entryPoint": null,
									"id": 1660,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@master_1704": {
									"entryPoint": null,
									"id": 1704,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@maxBuyPerUser_1684": {
									"entryPoint": null,
									"id": 1684,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@minBuyPerUser_1686": {
									"entryPoint": null,
									"id": 1686,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_417": {
									"entryPoint": null,
									"id": 417,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@recipient_1721": {
									"entryPoint": null,
									"id": 1721,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@router_1707": {
									"entryPoint": null,
									"id": 1707,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@saleAborted_1731": {
									"entryPoint": null,
									"id": 1731,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@saleEnded_1729": {
									"entryPoint": null,
									"id": 1729,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@saleFinalized_1727": {
									"entryPoint": null,
									"id": 1727,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@saleId_1715": {
									"entryPoint": null,
									"id": 1715,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@saleInitiator_1723": {
									"entryPoint": null,
									"id": 1723,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@saleTokensPerOneEth_1676": {
									"entryPoint": null,
									"id": 1676,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@signer_1701": {
									"entryPoint": null,
									"id": 1701,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@softcap_1666": {
									"entryPoint": null,
									"id": 1666,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@splitSignature_2341": {
									"entryPoint": 6074,
									"id": 2341,
									"parameterSlots": 1,
									"returnSlots": 3
								},
								"@startTime_1670": {
									"entryPoint": null,
									"id": 1670,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@teamVestDuration_1682": {
									"entryPoint": null,
									"id": 1682,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@teamVestEnabled_1694": {
									"entryPoint": null,
									"id": 1694,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenAmountForLiquidity_1690": {
									"entryPoint": null,
									"id": 1690,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenAmountForSale_1688": {
									"entryPoint": null,
									"id": 1688,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenTotalAmount_1658": {
									"entryPoint": null,
									"id": 1658,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@token_1713": {
									"entryPoint": null,
									"id": 1713,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalBuyEth_1725": {
									"entryPoint": null,
									"id": 1725,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalBuyTokens_1982": {
									"entryPoint": 6134,
									"id": 1982,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@userBuyAmount_1739": {
									"entryPoint": null,
									"id": 1739,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@userVestDuration_1680": {
									"entryPoint": null,
									"id": 1680,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@userVestEnabled_1692": {
									"entryPoint": null,
									"id": 1692,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@usersVestingWallets_1735": {
									"entryPoint": null,
									"id": 1735,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@verify_2307": {
									"entryPoint": 6157,
									"id": 2307,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@whitelistEnabled_1696": {
									"entryPoint": null,
									"id": 1696,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@wlStartTime_1674": {
									"entryPoint": null,
									"id": 1674,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_bytes": {
									"entryPoint": 6627,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6768,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 6804,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 6833,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes_memory_ptr": {
									"entryPoint": 6867,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes_memory_ptrt_addresst_uint256t_uint256": {
									"entryPoint": 6928,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 7023,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint256_fromMemory": {
									"entryPoint": 7048,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_tuple_packed_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_rational_0_by_1_t_rational_0_by_1_t_address_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$591__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ILaunchpadMaster_$1186__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IUniswapV2Factory_$1249__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IUniswapV2Router02_$1642__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7094,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_141451834b4f73e4445d82a62172036d5b5d5eb658e8bd5bcc3cd7764faaeb1c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24b1a4c6f79d5c5aaa26c5a97ee11271e530551566a6d2db18850d832232b204__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24ce45409782dae9f20878144b76ac5554ba72ec77f6c3e45581ecd8648b50e4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2a056393c3c4e9b910fc381cd9f3e42169c90d3a34b1ab9e96af9a5e76135932__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7179,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2cc9aeec6e31d1d4d41d3a4052b418ae4d2bf05b728be0f65352a318589e6544__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6d2e427d2d5ae0a6a45b02e560a7a3d7bab0f9ccdfa5894afdedfd29b2f6613c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7fe6eaeacd817413cd3d644dc731083134b7fd2481c312560441d9626d1702a2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_910016fcba5f3c495db91eda71589fc5b0e9a221d09feda00eef62020cb88280__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_98c86f59fdcbeb736e3b86fd1a71dc66836dfc40e27f24dced2fe4ad98b5863a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_990006b6d6b184aa953bccc6f49227f3d19c9361b60f3c8d1011665c9a7f17f6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7262,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9cb0afc8c9b5b9fc27a027f975ade36198094a1ec0c916df62820d443e1a1c77__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7330,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_aa45f346974086e46ef8ac721d9f9594dcbc7cbd93c8f7b95ee484df37242b90__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ae2f0be3c86f1f4c70b5b8e37f9dfeccf0055bff7f58990234fe3c550983b010__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b13a5e015676912b1112c867e0dfefd574586eb4bed77e8fcd93eea707633c98__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b970a525c25274d556107dbbd3917b840fffe3c64537aa03a137eaaa8ab7c556__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7385,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c28b289d97fe6866e9d13a7bc6018754aac608e30a3bf1ece8ce7995bd4c3efd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c769e5d2e8ac99c64c2d1f0a6746ec097b7e2850242705fdb33d040c4a20431c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7455,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e1b18e3606be74dd019e19c6aa57e7f5fabee4053ce559a76c27104271c860aa__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e902201ab37430ad12a93efaf7ddb5a5c942f73b571ab342d42adac578a3cc74__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7497,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8_t_bytes32_t_bytes32__to_t_uint8_t_bytes32_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7552,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 7576,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 7610,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 7641,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7700,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 7722,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 7744,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:16978:14",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:14",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:666:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "115:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "124:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "127:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "117:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "117:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "117:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "94:6:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "102:4:14",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "90:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "90:17:14"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "109:3:14"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "86:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "86:27:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "79:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "79:35:14"
															},
															"nodeType": "YulIf",
															"src": "76:55:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "140:30:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "163:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "150:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "150:20:14"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "144:2:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "179:28:14",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "189:18:14",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "183:2:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "230:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "232:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "232:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "232:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "222:2:14"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "226:2:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "219:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "219:10:14"
															},
															"nodeType": "YulIf",
															"src": "216:36:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "261:17:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "275:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "271:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "271:7:14"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "265:2:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "287:23:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "307:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "301:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "301:9:14"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "291:6:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "319:71:14",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "341:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "365:2:14"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "369:4:14",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "361:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "361:13:14"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "376:2:14"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "357:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "357:22:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "381:2:14",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "353:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "353:31:14"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "386:2:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "349:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "349:40:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "337:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "337:53:14"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "323:10:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "449:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "451:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "451:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "451:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "408:10:14"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "420:2:14"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "405:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "405:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "428:10:14"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "440:6:14"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "425:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "425:22:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "402:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "402:46:14"
															},
															"nodeType": "YulIf",
															"src": "399:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "487:2:14",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "491:10:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "480:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "480:22:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "480:22:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "518:6:14"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "526:2:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "511:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "511:18:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "511:18:14"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "577:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "586:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "589:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "579:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "579:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "579:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "552:6:14"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "560:2:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "548:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "548:15:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "565:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "544:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "544:26:14"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "572:3:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "541:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "541:35:14"
															},
															"nodeType": "YulIf",
															"src": "538:55:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "619:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "627:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "615:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "615:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "638:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "646:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "634:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "634:17:14"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "653:2:14"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "602:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "602:54:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "602:54:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "680:6:14"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "688:2:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "676:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "676:15:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "693:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "672:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "672:26:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "700:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "665:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "665:37:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "665:37:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "711:15:14",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "720:6:14"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "711:5:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "40:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "48:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "56:5:14",
														"type": ""
													}
												],
												"src": "14:718:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "807:177:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "853:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "862:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "865:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "855:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "855:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "855:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "828:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "837:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "824:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "824:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "849:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "820:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "820:32:14"
															},
															"nodeType": "YulIf",
															"src": "817:52:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "878:36:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "904:9:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "891:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "891:23:14"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "882:5:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "948:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "923:24:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "923:31:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "923:31:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "963:15:14",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "973:5:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "963:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "773:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "784:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "796:6:14",
														"type": ""
													}
												],
												"src": "737:247:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1070:170:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1116:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1125:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1128:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1118:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1118:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1118:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1091:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1100:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1087:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1087:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1112:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1083:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1083:32:14"
															},
															"nodeType": "YulIf",
															"src": "1080:52:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1141:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1160:9:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1154:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1154:16:14"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1145:5:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1204:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1179:24:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1179:31:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1179:31:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1219:15:14",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1229:5:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1219:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1036:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1047:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1059:6:14",
														"type": ""
													}
												],
												"src": "989:251:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1323:199:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1369:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1378:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1381:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1371:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1371:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1371:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1344:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1353:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1340:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1340:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1365:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1336:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1336:32:14"
															},
															"nodeType": "YulIf",
															"src": "1333:52:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1394:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1413:9:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1407:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1407:16:14"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1398:5:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1476:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1485:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1488:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1478:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1478:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1478:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1445:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "1466:5:14"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "1459:6:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1459:13:14"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1452:6:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1452:21:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1442:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1442:32:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1435:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1435:40:14"
															},
															"nodeType": "YulIf",
															"src": "1432:60:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1501:15:14",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1511:5:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1501:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1289:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1300:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1312:6:14",
														"type": ""
													}
												],
												"src": "1245:277:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1606:241:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1652:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1661:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1664:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1654:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1654:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1654:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1627:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1636:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1623:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1623:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1648:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1619:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1619:32:14"
															},
															"nodeType": "YulIf",
															"src": "1616:52:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1677:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1704:9:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1691:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1691:23:14"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1681:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1757:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1766:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1769:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1759:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1759:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1759:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1729:6:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1737:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1726:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1726:30:14"
															},
															"nodeType": "YulIf",
															"src": "1723:50:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1782:59:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1813:9:14"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1824:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1809:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1809:22:14"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1833:7:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "1792:16:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1792:49:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1782:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1572:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1583:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1595:6:14",
														"type": ""
													}
												],
												"src": "1527:320:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1982:462:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2029:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2038:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2041:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2031:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2031:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2031:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2003:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2012:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1999:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1999:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2024:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1995:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1995:33:14"
															},
															"nodeType": "YulIf",
															"src": "1992:53:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2054:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2081:9:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2068:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2068:23:14"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "2058:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2134:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2143:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2146:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2136:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2136:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2136:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2106:6:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2114:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2103:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2103:30:14"
															},
															"nodeType": "YulIf",
															"src": "2100:50:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2159:59:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2190:9:14"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2201:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2186:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2186:22:14"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2210:7:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "2169:16:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2169:49:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2159:6:14"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2227:45:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2257:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2268:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2253:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2253:18:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2240:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2240:32:14"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2231:5:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2306:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "2281:24:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2281:31:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2281:31:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2321:15:14",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2331:5:14"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2321:6:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2345:42:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2372:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2383:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2368:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2368:18:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2355:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2355:32:14"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2345:6:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2396:42:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2423:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2434:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2419:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2419:18:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2406:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2406:32:14"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "2396:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes_memory_ptrt_addresst_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1924:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1935:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1947:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1955:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1963:6:14",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1971:6:14",
														"type": ""
													}
												],
												"src": "1852:592:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2530:103:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2576:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2585:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2588:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2578:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2578:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2578:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2551:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2560:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2547:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2547:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2572:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2543:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2543:32:14"
															},
															"nodeType": "YulIf",
															"src": "2540:52:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2601:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2617:9:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2611:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2611:16:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2601:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2496:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2507:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2519:6:14",
														"type": ""
													}
												],
												"src": "2449:184:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2753:191:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2799:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2808:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2811:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2801:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2801:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2801:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2774:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2783:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2770:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2770:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2795:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2766:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2766:32:14"
															},
															"nodeType": "YulIf",
															"src": "2763:52:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2824:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2840:9:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2834:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2834:16:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2824:6:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2859:35:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2879:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2890:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2875:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2875:18:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2869:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2869:25:14"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2859:6:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2903:35:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2923:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2934:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2919:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2919:18:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2913:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2913:25:14"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2903:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2703:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2714:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2726:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2734:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2742:6:14",
														"type": ""
													}
												],
												"src": "2638:306:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3169:160:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3186:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3191:66:14",
																		"type": "",
																		"value": "0x19457468657265756d205369676e6564204d6573736167653a0a333200000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3179:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3179:79:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3179:79:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3278:3:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3283:2:14",
																				"type": "",
																				"value": "28"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3274:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3274:12:14"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3288:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3267:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3267:28:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3267:28:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3304:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3315:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3320:2:14",
																		"type": "",
																		"value": "60"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3311:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3311:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3304:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3145:3:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3150:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3161:3:14",
														"type": ""
													}
												],
												"src": "2949:380:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3525:14:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3527:10:14",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "3534:3:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3527:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3509:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3517:3:14",
														"type": ""
													}
												],
												"src": "3334:205:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3645:102:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3655:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3667:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3678:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3663:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3663:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3655:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3697:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3712:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3728:3:14",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3733:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3724:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3724:11:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3737:1:14",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3720:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3720:19:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3708:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3708:32:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3690:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3690:51:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3690:51:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3614:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3625:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3636:4:14",
														"type": ""
													}
												],
												"src": "3544:203:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3869:102:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3879:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3891:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3902:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3887:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3887:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3879:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3921:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3936:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3952:3:14",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3957:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3948:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3948:11:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3961:1:14",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3944:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3944:19:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3932:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3932:32:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3914:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3914:51:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3914:51:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3838:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3849:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3860:4:14",
														"type": ""
													}
												],
												"src": "3752:219:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4105:145:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4115:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4127:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4138:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4123:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4123:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4115:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4157:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4172:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4188:3:14",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4193:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4184:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4184:11:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4197:1:14",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4180:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4180:19:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4168:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4168:32:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4150:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4150:51:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4150:51:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4221:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4232:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4217:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4217:18:14"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4237:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4210:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4210:34:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4210:34:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4066:9:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4077:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4085:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4096:4:14",
														"type": ""
													}
												],
												"src": "3976:274:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4512:350:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4522:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4534:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4545:3:14",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4530:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4530:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4522:4:14"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4558:29:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4576:3:14",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4581:1:14",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4572:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4572:11:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4585:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "4568:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4568:19:14"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4562:2:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4603:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4618:6:14"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4626:2:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4614:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4614:15:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4596:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4596:34:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4596:34:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4650:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4661:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4646:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4646:18:14"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4666:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4639:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4639:34:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4639:34:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4693:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4704:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4689:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4689:18:14"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "4709:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4682:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4682:34:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4682:34:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4736:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4747:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4732:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4732:18:14"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "4752:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4725:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4725:34:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4725:34:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4779:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4790:3:14",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4775:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4775:19:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value4",
																				"nodeType": "YulIdentifier",
																				"src": "4800:6:14"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4808:2:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4796:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4796:15:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4768:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4768:44:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4768:44:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4832:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4843:3:14",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4828:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4828:19:14"
																	},
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "4849:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4821:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4821:35:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4821:35:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_rational_0_by_1_t_rational_0_by_1_t_address_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4441:9:14",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "4452:6:14",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "4460:6:14",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4468:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4476:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4484:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4492:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4503:4:14",
														"type": ""
													}
												],
												"src": "4255:607:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5024:188:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5034:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5046:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5057:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5042:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5042:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5034:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5076:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5091:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5107:3:14",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5112:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "5103:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5103:11:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5116:1:14",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "5099:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5099:19:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5087:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5087:32:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5069:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5069:51:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5069:51:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5140:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5151:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5136:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5136:18:14"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5156:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5129:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5129:34:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5129:34:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5183:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5194:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5179:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5179:18:14"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "5199:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5172:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5172:34:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5172:34:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4977:9:14",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4988:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4996:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5004:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5015:4:14",
														"type": ""
													}
												],
												"src": "4867:345:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5312:92:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5322:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5334:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5345:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5330:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5330:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5322:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5364:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "5389:6:14"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "5382:6:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5382:14:14"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "5375:6:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5375:22:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5357:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5357:41:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5357:41:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5281:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5292:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5303:4:14",
														"type": ""
													}
												],
												"src": "5217:187:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5590:217:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5600:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5612:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5623:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5608:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5608:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5600:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5643:9:14"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5654:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5636:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5636:25:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5636:25:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5681:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5692:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5677:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5677:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "5701:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5709:4:14",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5697:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5697:17:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5670:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5670:45:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5670:45:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5735:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5746:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5731:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5731:18:14"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "5751:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5724:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5724:34:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5724:34:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5778:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5789:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5774:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5774:18:14"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "5794:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5767:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5767:34:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5767:34:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5535:9:14",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "5546:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5554:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5562:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5570:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5581:4:14",
														"type": ""
													}
												],
												"src": "5409:398:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5927:102:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5937:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5949:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5960:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5945:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5945:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5937:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5979:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5994:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6010:3:14",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6015:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "6006:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6006:11:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6019:1:14",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "6002:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6002:19:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5990:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5990:32:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5972:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5972:51:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5972:51:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$591__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5896:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5907:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5918:4:14",
														"type": ""
													}
												],
												"src": "5812:217:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6160:102:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6170:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6182:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6193:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6178:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6178:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6170:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6212:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "6227:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6243:3:14",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6248:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "6239:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6239:11:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6252:1:14",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "6235:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6235:19:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6223:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6223:32:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6205:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6205:51:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6205:51:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ILaunchpadMaster_$1186__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6129:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6140:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6151:4:14",
														"type": ""
													}
												],
												"src": "6034:228:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6394:102:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6404:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6416:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6427:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6412:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6412:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6404:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6446:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "6461:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6477:3:14",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6482:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "6473:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6473:11:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6486:1:14",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "6469:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6469:19:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6457:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6457:32:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6439:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6439:51:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6439:51:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IUniswapV2Factory_$1249__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6363:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6374:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6385:4:14",
														"type": ""
													}
												],
												"src": "6267:229:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6629:102:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6639:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6651:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6662:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6647:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6647:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6639:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6681:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "6696:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6712:3:14",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6717:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "6708:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6708:11:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6721:1:14",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "6704:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6704:19:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6692:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6692:32:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6674:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6674:51:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6674:51:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IUniswapV2Router02_$1642__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6598:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6609:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6620:4:14",
														"type": ""
													}
												],
												"src": "6501:230:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6857:476:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6867:12:14",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6877:2:14",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6871:2:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6895:9:14"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6906:2:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6888:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6888:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6888:21:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6918:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6938:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6932:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6932:13:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6922:6:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6965:9:14"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "6976:2:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6961:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6961:18:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6981:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6954:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6954:34:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6954:34:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6997:10:14",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7006:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "7001:1:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7066:90:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "7095:9:14"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "7106:1:14"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "7091:3:14"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7091:17:14"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7110:2:14",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "7087:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7087:26:14"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "7129:6:14"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "7137:1:14"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "7125:3:14"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "7125:14:14"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "7141:2:14"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "7121:3:14"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7121:23:14"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "7115:5:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7115:30:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7080:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7080:66:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7080:66:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "7027:1:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7030:6:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "7024:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7024:13:14"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "7038:19:14",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7040:15:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "7049:1:14"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "7052:2:14"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7045:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7045:10:14"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "7040:1:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "7020:3:14",
																"statements": []
															},
															"src": "7016:140:14"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7190:66:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "7219:9:14"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "7230:6:14"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "7215:3:14"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7215:22:14"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7239:2:14",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "7211:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7211:31:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7244:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7204:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7204:42:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7204:42:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "7171:1:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7174:6:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7168:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7168:13:14"
															},
															"nodeType": "YulIf",
															"src": "7165:91:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7265:62:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7281:9:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "7300:6:14"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7308:2:14",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "7296:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7296:15:14"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7317:2:14",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "7313:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7313:7:14"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "7292:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7292:29:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7277:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7277:45:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7324:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7273:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7273:54:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7265:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6826:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6837:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6848:4:14",
														"type": ""
													}
												],
												"src": "6736:597:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7512:181:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7529:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7540:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7522:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7522:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7522:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7563:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7574:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7559:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7559:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7579:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7552:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7552:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7552:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7602:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7613:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7598:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7598:18:14"
																	},
																	{
																		"hexValue": "75736572206861736e277420616e7920746f6b656e7320746f20636c61696d",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7618:33:14",
																		"type": "",
																		"value": "user hasn't any tokens to claim"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7591:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7591:61:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7591:61:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7661:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7673:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7684:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7669:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7669:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7661:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_141451834b4f73e4445d82a62172036d5b5d5eb658e8bd5bcc3cd7764faaeb1c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7489:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7503:4:14",
														"type": ""
													}
												],
												"src": "7338:355:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7872:170:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7889:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7900:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7882:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7882:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7882:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7923:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7934:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7919:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7919:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7939:2:14",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7912:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7912:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7912:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7962:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7973:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7958:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7958:18:14"
																	},
																	{
																		"hexValue": "73616c6520616c72656164792061626f72746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7978:22:14",
																		"type": "",
																		"value": "sale already aborted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7951:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7951:50:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7951:50:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8010:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8022:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8033:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8018:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8018:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8010:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24b1a4c6f79d5c5aaa26c5a97ee11271e530551566a6d2db18850d832232b204__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7849:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7863:4:14",
														"type": ""
													}
												],
												"src": "7698:344:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8221:175:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8238:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8249:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8231:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8231:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8231:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8272:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8283:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8268:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8268:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8288:2:14",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8261:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8261:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8261:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8311:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8322:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8307:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8307:18:14"
																	},
																	{
																		"hexValue": "796f75277265206e6f742073656e64696e6720656e6f756768",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8327:27:14",
																		"type": "",
																		"value": "you're not sending enough"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8300:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8300:55:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8300:55:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8364:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8376:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8387:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8372:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8372:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8364:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24ce45409782dae9f20878144b76ac5554ba72ec77f6c3e45581ecd8648b50e4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8198:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8212:4:14",
														"type": ""
													}
												],
												"src": "8047:349:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8575:241:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8592:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8603:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8585:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8585:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8585:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8626:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8637:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8622:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8622:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8642:2:14",
																		"type": "",
																		"value": "51"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8615:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8615:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8615:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8665:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8676:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8661:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8661:18:14"
																	},
																	{
																		"hexValue": "7468657265206172656e277420656e6f75676820746f6b656e73206c6566742e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8681:34:14",
																		"type": "",
																		"value": "there aren't enough tokens left."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8654:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8654:62:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8654:62:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8736:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8747:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8732:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8732:18:14"
																	},
																	{
																		"hexValue": "205472792061206c6f77657220616d6f756e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8752:21:14",
																		"type": "",
																		"value": " Try a lower amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8725:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8725:49:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8725:49:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8783:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8795:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8806:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8791:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8791:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8783:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2a056393c3c4e9b910fc381cd9f3e42169c90d3a34b1ab9e96af9a5e76135932__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8552:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8566:4:14",
														"type": ""
													}
												],
												"src": "8401:415:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8995:173:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9012:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9023:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9005:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9005:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9005:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9046:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9057:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9042:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9042:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9062:2:14",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9035:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9035:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9035:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9085:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9096:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9081:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9081:18:14"
																	},
																	{
																		"hexValue": "73616c65206861736e2774207374617274656420796574",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9101:25:14",
																		"type": "",
																		"value": "sale hasn't started yet"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9074:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9074:53:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9074:53:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9136:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9148:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9159:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9144:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9144:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9136:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2cc9aeec6e31d1d4d41d3a4052b418ae4d2bf05b728be0f65352a318589e6544__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8972:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8986:4:14",
														"type": ""
													}
												],
												"src": "8821:347:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9347:166:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9364:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9375:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9357:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9357:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9357:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9398:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9409:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9394:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9394:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9414:2:14",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9387:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9387:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9387:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9437:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9448:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9433:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9433:18:14"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9453:18:14",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9426:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9426:46:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9426:46:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9481:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9493:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9504:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9489:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9489:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9481:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9324:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9338:4:14",
														"type": ""
													}
												],
												"src": "9173:340:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9692:239:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9709:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9720:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9702:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9702:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9702:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9743:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9754:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9739:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9739:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9759:2:14",
																		"type": "",
																		"value": "49"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9732:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9732:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9732:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9782:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9793:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9778:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9778:18:14"
																	},
																	{
																		"hexValue": "696e73756666696369656e7420616d6f756e74206f6620746f6b656e73207365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9798:34:14",
																		"type": "",
																		"value": "insufficient amount of tokens se"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9771:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9771:62:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9771:62:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9853:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9864:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9849:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9849:18:14"
																	},
																	{
																		"hexValue": "6e7420746f207468652061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9869:19:14",
																		"type": "",
																		"value": "nt to the address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9842:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9842:47:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9842:47:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9898:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9910:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9921:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9906:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9906:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9898:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6d2e427d2d5ae0a6a45b02e560a7a3d7bab0f9ccdfa5894afdedfd29b2f6613c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9669:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9683:4:14",
														"type": ""
													}
												],
												"src": "9518:413:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10110:172:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10127:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10138:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10120:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10120:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10120:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10161:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10172:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10157:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10157:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10177:2:14",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10150:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10150:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10150:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10200:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10211:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10196:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10196:18:14"
																	},
																	{
																		"hexValue": "73616c652077617320616c726561647920656e646564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10216:24:14",
																		"type": "",
																		"value": "sale was already ended"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10189:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10189:52:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10189:52:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10250:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10262:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10273:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10258:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10258:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10250:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7fe6eaeacd817413cd3d644dc731083134b7fd2481c312560441d9626d1702a2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10087:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10101:4:14",
														"type": ""
													}
												],
												"src": "9936:346:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10461:164:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10478:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10489:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10471:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10471:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10471:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10512:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10523:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10508:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10508:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10528:2:14",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10501:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10501:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10501:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10551:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10562:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10547:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10547:18:14"
																	},
																	{
																		"hexValue": "73616c652068617320656e646564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10567:16:14",
																		"type": "",
																		"value": "sale has ended"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10540:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10540:44:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10540:44:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10593:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10605:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10616:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10601:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10601:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10593:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_910016fcba5f3c495db91eda71589fc5b0e9a221d09feda00eef62020cb88280__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10438:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10452:4:14",
														"type": ""
													}
												],
												"src": "10287:338:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10804:180:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10821:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10832:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10814:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10814:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10814:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10855:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10866:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10851:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10851:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10871:2:14",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10844:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10844:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10844:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10894:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10905:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10890:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10890:18:14"
																	},
																	{
																		"hexValue": "73616c65206861736e2774206265656e2066696e616c697a656420796574",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10910:32:14",
																		"type": "",
																		"value": "sale hasn't been finalized yet"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10883:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10883:60:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10883:60:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10952:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10964:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10975:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10960:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10960:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10952:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_98c86f59fdcbeb736e3b86fd1a71dc66836dfc40e27f24dced2fe4ad98b5863a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10781:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10795:4:14",
														"type": ""
													}
												],
												"src": "10630:354:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11163:226:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11180:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11191:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11173:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11173:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11173:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11214:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11225:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11210:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11210:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11230:2:14",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11203:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11203:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11203:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11253:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11264:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11249:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11249:18:14"
																	},
																	{
																		"hexValue": "796f7527726520747279696e6720746f2062757920746f6f206d616e7920746f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11269:34:14",
																		"type": "",
																		"value": "you're trying to buy too many to"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11242:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11242:62:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11242:62:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11324:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11335:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11320:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11320:18:14"
																	},
																	{
																		"hexValue": "6b656e73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11340:6:14",
																		"type": "",
																		"value": "kens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11313:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11313:34:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11313:34:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11356:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11368:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11379:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11364:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11364:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11356:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_990006b6d6b184aa953bccc6f49227f3d19c9361b60f3c8d1011665c9a7f17f6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11140:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11154:4:14",
														"type": ""
													}
												],
												"src": "10989:400:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11568:177:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11585:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11596:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11578:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11578:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11578:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11619:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11630:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11615:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11615:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11635:2:14",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11608:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11608:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11608:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11658:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11669:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11654:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11654:18:14"
																	},
																	{
																		"hexValue": "63616c6c6572206973206e6f742074686520696e69746961746f72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11674:29:14",
																		"type": "",
																		"value": "caller is not the initiator"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11647:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11647:57:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11647:57:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11713:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11725:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11736:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11721:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11721:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11713:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9cb0afc8c9b5b9fc27a027f975ade36198094a1ec0c916df62820d443e1a1c77__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11545:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11559:4:14",
														"type": ""
													}
												],
												"src": "11394:351:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11924:225:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11941:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11952:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11934:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11934:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11934:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11975:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11986:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11971:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11971:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11991:2:14",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11964:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11964:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11964:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12014:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12025:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12010:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12010:18:14"
																	},
																	{
																		"hexValue": "73616c6520686173206265656e20656e646564203a20796f752063616e20636c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12030:34:14",
																		"type": "",
																		"value": "sale has been ended : you can cl"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12003:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12003:62:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12003:62:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12085:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12096:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12081:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12081:18:14"
																	},
																	{
																		"hexValue": "61696d",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12101:5:14",
																		"type": "",
																		"value": "aim"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12074:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12074:33:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12074:33:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12116:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12128:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12139:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12124:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12124:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12116:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_aa45f346974086e46ef8ac721d9f9594dcbc7cbd93c8f7b95ee484df37242b90__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11901:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11915:4:14",
														"type": ""
													}
												],
												"src": "11750:399:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12328:171:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12345:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12356:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12338:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12338:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12338:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12379:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12390:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12375:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12375:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12395:2:14",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12368:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12368:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12368:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12418:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12429:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12414:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12414:18:14"
																	},
																	{
																		"hexValue": "73616c65207761736e27742066696e616c697a6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12434:23:14",
																		"type": "",
																		"value": "sale wasn't finalized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12407:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12407:51:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12407:51:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12467:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12479:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12490:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12475:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12475:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12467:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ae2f0be3c86f1f4c70b5b8e37f9dfeccf0055bff7f58990234fe3c550983b010__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12305:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12319:4:14",
														"type": ""
													}
												],
												"src": "12154:345:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12678:178:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12695:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12706:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12688:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12688:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12688:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12729:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12740:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12725:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12725:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12745:2:14",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12718:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12718:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12718:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12768:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12779:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12764:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12764:18:14"
																	},
																	{
																		"hexValue": "636c61696d696e672068617320616c72656164792073746172746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12784:30:14",
																		"type": "",
																		"value": "claiming has already started"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12757:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12757:58:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12757:58:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12824:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12836:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12847:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12832:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12832:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12824:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b13a5e015676912b1112c867e0dfefd574586eb4bed77e8fcd93eea707633c98__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12655:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12669:4:14",
														"type": ""
													}
												],
												"src": "12504:352:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13035:228:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13052:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13063:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13045:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13045:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13045:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13086:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13097:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13082:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13082:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13102:2:14",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13075:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13075:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13075:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13125:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13136:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13121:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13121:18:14"
																	},
																	{
																		"hexValue": "6861726463617020697320726561636865642e205472792061206c6f77657220",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13141:34:14",
																		"type": "",
																		"value": "hardcap is reached. Try a lower "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13114:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13114:62:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13114:62:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13196:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13207:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13192:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13192:18:14"
																	},
																	{
																		"hexValue": "616d6f756e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13212:8:14",
																		"type": "",
																		"value": "amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13185:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13185:36:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13185:36:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13230:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13242:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13253:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13238:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13238:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13230:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b970a525c25274d556107dbbd3917b840fffe3c64537aa03a137eaaa8ab7c556__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13012:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13026:4:14",
														"type": ""
													}
												],
												"src": "12861:402:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13442:243:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13459:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13470:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13452:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13452:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13452:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13493:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13504:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13489:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13489:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13509:2:14",
																		"type": "",
																		"value": "53"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13482:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13482:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13482:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13532:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13543:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13528:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13528:18:14"
																	},
																	{
																		"hexValue": "73616c65207761732061626f727465642c20706c656173652075736520636c61",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13548:34:14",
																		"type": "",
																		"value": "sale was aborted, please use cla"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13521:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13521:62:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13521:62:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13603:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13614:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13599:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13599:18:14"
																	},
																	{
																		"hexValue": "696d5374616c6545746828292066756e6374696f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13619:23:14",
																		"type": "",
																		"value": "imStaleEth() function"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13592:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13592:51:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13592:51:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13652:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13664:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13675:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13660:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13660:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13652:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c28b289d97fe6866e9d13a7bc6018754aac608e30a3bf1ece8ce7995bd4c3efd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13419:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13433:4:14",
														"type": ""
													}
												],
												"src": "13268:417:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13864:166:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13881:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13892:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13874:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13874:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13874:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13915:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13926:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13911:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13911:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13931:2:14",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13904:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13904:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13904:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13954:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13965:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13950:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13950:18:14"
																	},
																	{
																		"hexValue": "73616c65207761732061626f72746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13970:18:14",
																		"type": "",
																		"value": "sale was aborted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13943:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13943:46:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13943:46:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13998:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14010:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14021:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14006:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14006:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13998:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c769e5d2e8ac99c64c2d1f0a6746ec097b7e2850242705fdb33d040c4a20431c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13841:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13855:4:14",
														"type": ""
													}
												],
												"src": "13690:340:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14209:177:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14226:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14237:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14219:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14219:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14219:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14260:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14271:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14256:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14256:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14276:2:14",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14249:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14249:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14249:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14299:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14310:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14295:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14295:18:14"
																	},
																	{
																		"hexValue": "6e6f7420656e6f75676820746f6b656e73207765726520736f6c64",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14315:29:14",
																		"type": "",
																		"value": "not enough tokens were sold"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14288:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14288:57:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14288:57:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14354:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14366:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14377:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14362:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14362:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14354:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e1b18e3606be74dd019e19c6aa57e7f5fabee4053ce559a76c27104271c860aa__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14186:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14200:4:14",
														"type": ""
													}
												],
												"src": "14035:351:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14565:225:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14582:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14593:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14575:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14575:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14575:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14616:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14627:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14612:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14612:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14632:2:14",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14605:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14605:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14605:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14655:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14666:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14651:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14651:18:14"
																	},
																	{
																		"hexValue": "696e69746961746f72206861736e277420656e646564207468652073616c6520",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14671:34:14",
																		"type": "",
																		"value": "initiator hasn't ended the sale "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14644:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14644:62:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14644:62:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14726:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14737:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14722:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14722:18:14"
																	},
																	{
																		"hexValue": "796574",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14742:5:14",
																		"type": "",
																		"value": "yet"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14715:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14715:33:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14715:33:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14757:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14769:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14780:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14765:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14765:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14757:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e902201ab37430ad12a93efaf7ddb5a5c942f73b571ab342d42adac578a3cc74__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14542:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14556:4:14",
														"type": ""
													}
												],
												"src": "14391:399:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14969:181:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14986:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14997:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14979:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14979:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14979:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15020:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15031:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15016:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15016:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15036:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15009:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15009:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15009:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15059:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15070:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15055:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15055:18:14"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15075:33:14",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15048:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15048:61:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15048:61:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15118:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15130:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15141:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15126:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15126:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15118:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14946:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14960:4:14",
														"type": ""
													}
												],
												"src": "14795:355:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15256:76:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15266:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15278:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15289:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15274:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15274:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15266:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15308:9:14"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15319:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15301:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15301:25:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15301:25:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15225:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15236:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15247:4:14",
														"type": ""
													}
												],
												"src": "15155:177:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15490:173:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15500:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15512:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15523:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15508:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15508:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15500:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15542:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "15557:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15565:4:14",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "15553:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15553:17:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15535:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15535:36:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15535:36:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15591:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15602:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15587:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15587:18:14"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "15607:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15580:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15580:34:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15580:34:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15634:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15645:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15630:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15630:18:14"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "15650:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15623:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15623:34:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15623:34:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8_t_bytes32_t_bytes32__to_t_uint8_t_bytes32_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15443:9:14",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "15454:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15462:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15470:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15481:4:14",
														"type": ""
													}
												],
												"src": "15337:326:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15716:80:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15743:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "15745:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15745:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15745:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15732:1:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "15739:1:14"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "15735:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15735:6:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "15729:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15729:13:14"
															},
															"nodeType": "YulIf",
															"src": "15726:39:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15774:16:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15785:1:14"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15788:1:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15781:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15781:9:14"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "15774:3:14"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "15699:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "15702:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "15708:3:14",
														"type": ""
													}
												],
												"src": "15668:128:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15847:171:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15878:111:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15899:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "15906:3:14",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "15911:10:14",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "15902:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15902:20:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "15892:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15892:31:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15892:31:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15943:1:14",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15946:4:14",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "15936:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15936:15:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15936:15:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15971:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15974:4:14",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "15964:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15964:15:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15964:15:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15867:1:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "15860:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15860:9:14"
															},
															"nodeType": "YulIf",
															"src": "15857:132:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15998:14:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16007:1:14"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16010:1:14"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "16003:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16003:9:14"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "15998:1:14"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "15832:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "15835:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "15841:1:14",
														"type": ""
													}
												],
												"src": "15801:217:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16075:116:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16134:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "16136:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16136:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16136:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "16106:1:14"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "16099:6:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16099:9:14"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "16092:6:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16092:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "16114:1:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "16125:1:14",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "16121:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "16121:6:14"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "16129:1:14"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "16117:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16117:14:14"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "16111:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16111:21:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "16088:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16088:45:14"
															},
															"nodeType": "YulIf",
															"src": "16085:71:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16165:20:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16180:1:14"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16183:1:14"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "16176:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16176:9:14"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "16165:7:14"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "16054:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "16057:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "16063:7:14",
														"type": ""
													}
												],
												"src": "16023:168:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16251:325:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16261:22:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16275:1:14",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "16278:4:14"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "16271:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16271:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "16261:6:14"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16292:38:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "16322:4:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16328:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "16318:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16318:12:14"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "16296:18:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16369:31:14",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "16371:27:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "16385:6:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16393:4:14",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "16381:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16381:17:14"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "16371:6:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "16349:18:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "16342:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16342:26:14"
															},
															"nodeType": "YulIf",
															"src": "16339:61:14"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16459:111:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16480:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "16487:3:14",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "16492:10:14",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "16483:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "16483:20:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "16473:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16473:31:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16473:31:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16524:1:14",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16527:4:14",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "16517:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16517:15:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16517:15:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16552:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16555:4:14",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "16545:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16545:15:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16545:15:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "16415:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "16438:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16446:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "16435:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16435:14:14"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "16412:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16412:38:14"
															},
															"nodeType": "YulIf",
															"src": "16409:161:14"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "16231:4:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "16240:6:14",
														"type": ""
													}
												],
												"src": "16196:380:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16613:95:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16630:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16637:3:14",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16642:10:14",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "16633:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16633:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16623:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16623:31:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16623:31:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16670:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16673:4:14",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16663:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16663:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16663:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16694:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16697:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "16687:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16687:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16687:15:14"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "16581:127:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16745:95:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16762:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16769:3:14",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16774:10:14",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "16765:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16765:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16755:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16755:31:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16755:31:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16802:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16805:4:14",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16795:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16795:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16795:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16826:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16829:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "16819:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16819:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16819:15:14"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "16713:127:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16890:86:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16954:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16963:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16966:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "16956:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16956:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16956:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "16913:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "16924:5:14"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "16939:3:14",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "16944:1:14",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "16935:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "16935:11:14"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "16948:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "16931:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "16931:19:14"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "16920:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16920:31:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "16910:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16910:42:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "16903:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16903:50:14"
															},
															"nodeType": "YulIf",
															"src": "16900:70:14"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16879:5:14",
														"type": ""
													}
												],
												"src": "16845:131:14"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_bytes_memory_ptrt_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_bytes(add(headStart, offset), dataEnd)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := mload(headStart)\n        value1 := mload(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n    }\n    function abi_encode_tuple_packed_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, 0x19457468657265756d205369676e6564204d6573736167653a0a333200000000)\n        mstore(add(pos, 28), value0)\n        end := add(pos, 60)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_rational_0_by_1_t_rational_0_by_1_t_address_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_address_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, _1))\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$591__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_ILaunchpadMaster_$1186__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IUniswapV2Factory_$1249__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IUniswapV2Router02_$1642__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_141451834b4f73e4445d82a62172036d5b5d5eb658e8bd5bcc3cd7764faaeb1c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"user hasn't any tokens to claim\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_24b1a4c6f79d5c5aaa26c5a97ee11271e530551566a6d2db18850d832232b204__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"sale already aborted\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_24ce45409782dae9f20878144b76ac5554ba72ec77f6c3e45581ecd8648b50e4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"you're not sending enough\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2a056393c3c4e9b910fc381cd9f3e42169c90d3a34b1ab9e96af9a5e76135932__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 51)\n        mstore(add(headStart, 64), \"there aren't enough tokens left.\")\n        mstore(add(headStart, 96), \" Try a lower amount\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_2cc9aeec6e31d1d4d41d3a4052b418ae4d2bf05b728be0f65352a318589e6544__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"sale hasn't started yet\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6d2e427d2d5ae0a6a45b02e560a7a3d7bab0f9ccdfa5894afdedfd29b2f6613c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 49)\n        mstore(add(headStart, 64), \"insufficient amount of tokens se\")\n        mstore(add(headStart, 96), \"nt to the address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7fe6eaeacd817413cd3d644dc731083134b7fd2481c312560441d9626d1702a2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"sale was already ended\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_910016fcba5f3c495db91eda71589fc5b0e9a221d09feda00eef62020cb88280__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"sale has ended\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_98c86f59fdcbeb736e3b86fd1a71dc66836dfc40e27f24dced2fe4ad98b5863a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"sale hasn't been finalized yet\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_990006b6d6b184aa953bccc6f49227f3d19c9361b60f3c8d1011665c9a7f17f6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"you're trying to buy too many to\")\n        mstore(add(headStart, 96), \"kens\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9cb0afc8c9b5b9fc27a027f975ade36198094a1ec0c916df62820d443e1a1c77__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"caller is not the initiator\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_aa45f346974086e46ef8ac721d9f9594dcbc7cbd93c8f7b95ee484df37242b90__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"sale has been ended : you can cl\")\n        mstore(add(headStart, 96), \"aim\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ae2f0be3c86f1f4c70b5b8e37f9dfeccf0055bff7f58990234fe3c550983b010__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"sale wasn't finalized\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b13a5e015676912b1112c867e0dfefd574586eb4bed77e8fcd93eea707633c98__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"claiming has already started\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b970a525c25274d556107dbbd3917b840fffe3c64537aa03a137eaaa8ab7c556__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"hardcap is reached. Try a lower \")\n        mstore(add(headStart, 96), \"amount\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c28b289d97fe6866e9d13a7bc6018754aac608e30a3bf1ece8ce7995bd4c3efd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 53)\n        mstore(add(headStart, 64), \"sale was aborted, please use cla\")\n        mstore(add(headStart, 96), \"imStaleEth() function\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c769e5d2e8ac99c64c2d1f0a6746ec097b7e2850242705fdb33d040c4a20431c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"sale was aborted\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e1b18e3606be74dd019e19c6aa57e7f5fabee4053ce559a76c27104271c860aa__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"not enough tokens were sold\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e902201ab37430ad12a93efaf7ddb5a5c942f73b571ab342d42adac578a3cc74__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"initiator hasn't ended the sale \")\n        mstore(add(headStart, 96), \"yet\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8_t_bytes32_t_bytes32__to_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, 0xff))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}",
									"id": 14,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106102935760003560e01c80638f5d036b1161015a578063c7bf5166116100c1578063e49dce661161007a578063e49dce661461072d578063ea44c1bc1461074d578063ee97f7f314610763578063f887ea4014610783578063f89be593146107a3578063fc0c546a146107b957600080fd5b8063c7bf5166146106a6578063c84c0387146106bc578063d132a8f4146106d2578063d4b9de51146106e7578063da2cbd5014610701578063de284b3a1461071757600080fd5b8063a7bb580311610113578063a7bb5803146105e6578063aba8315014610625578063b071cbe61461063a578063bca1da8514610650578063be9feb3014610670578063c45a01551461068657600080fd5b80638f5d036b14610564578063957f1474146105795780639b8906ae14610581578063a0f7ab35146105a0578063a5f0dea2146105b6578063a611dc37146105d057600080fd5b806351fb012d116101fe5780636b7f3df3116101b75780636b7f3df3146104b45780636ef2e4d3146104e15780637284e416146104f757806378e979251461051957806383b17fdd1461052f57806385bf49461461054557600080fd5b806351fb012d1461040457806358a687ec1461043457806359663174146104495780635c975abb1461045c57806364db812e1461047457806366d003ac1461049457600080fd5b806327a72c961161025057806327a72c961461035157806327c8f835146103675780633197cbb61461038e5780633c876081146103a457806348c54b9d146103d95780634ae01d52146103ee57600080fd5b8063017f6fae14610298578063039ce157146102c157806303bcf11d146102d757806312e409c5146102ee578063201a341914610304578063238ac93314610319575b600080fd5b3480156102a457600080fd5b506102ae60075481565b6040519081526020015b60405180910390f35b3480156102cd57600080fd5b506102ae60115481565b3480156102e357600080fd5b506102ec6107d9565b005b3480156102fa57600080fd5b506102ae60105481565b34801561031057600080fd5b506102ec6108c7565b34801561032557600080fd5b50601454610339906001600160a01b031681565b6040516001600160a01b0390911681526020016102b8565b34801561035d57600080fd5b506102ae600e5481565b34801561037357600080fd5b5060135461033990630100000090046001600160a01b031681565b34801561039a57600080fd5b506102ae60095481565b3480156103b057600080fd5b506103396103bf366004611a70565b60208052600090815260409020546001600160a01b031681565b3480156103e557600080fd5b506102ec610d17565b3480156103fa57600080fd5b506102ae600c5481565b34801561041057600080fd5b506013546104249062010000900460ff1681565b60405190151581526020016102b8565b34801561044057600080fd5b506102ec610f6f565b6102ec610457366004611ad3565b6110b7565b34801561046857600080fd5b5060015460ff16610424565b34801561048057600080fd5b50601f546104249062010000900460ff1681565b3480156104a057600080fd5b50601c54610339906001600160a01b031681565b3480156104c057600080fd5b506102ae6104cf366004611a70565b60216020526000908152604090205481565b3480156104ed57600080fd5b506102ae60125481565b34801561050357600080fd5b5061050c611380565b6040516102b89190611bb6565b34801561052557600080fd5b506102ae60085481565b34801561053b57600080fd5b506102ae60025481565b34801561055157600080fd5b5060135461042490610100900460ff1681565b34801561057057600080fd5b506102ec61140e565b6102ec611509565b34801561058d57600080fd5b50601f5461042490610100900460ff1681565b3480156105ac57600080fd5b506102ae60035481565b3480156105c257600080fd5b50601f546104249060ff1681565b3480156105dc57600080fd5b506102ae60045481565b3480156105f257600080fd5b50610606610601366004611ad3565b6117ba565b6040805160ff90941684526020840192909252908201526060016102b8565b34801561063157600080fd5b5061050c6117e9565b34801561064657600080fd5b506102ae60055481565b34801561065c57600080fd5b50601d54610339906001600160a01b031681565b34801561067c57600080fd5b506102ae600a5481565b34801561069257600080fd5b50601754610339906001600160a01b031681565b3480156106b257600080fd5b506102ae600b5481565b3480156106c857600080fd5b506102ae60195481565b3480156106de57600080fd5b506102ae6117f6565b3480156106f357600080fd5b506013546104249060ff1681565b34801561070d57600080fd5b506102ae601e5481565b34801561072357600080fd5b506102ae600f5481565b34801561073957600080fd5b50610424610748366004611b10565b61180d565b34801561075957600080fd5b506102ae600d5481565b34801561076f57600080fd5b50601554610339906001600160a01b031681565b34801561078f57600080fd5b50601654610339906001600160a01b031681565b3480156107af57600080fd5b506102ae60065481565b3480156107c557600080fd5b50601854610339906001600160a01b031681565b601d546001600160a01b0316331461080c5760405162461bcd60e51b815260040161080390611ca2565b60405180910390fd5b601f54610100900460ff16156108645760405162461bcd60e51b815260206004820152601c60248201527f636c61696d696e672068617320616c72656164792073746172746564000000006044820152606401610803565b601f5462010000900460ff16156108b45760405162461bcd60e51b81526020600482015260146024820152731cd85b1948185b1c9958591e4818589bdc9d195960621b6044820152606401610803565b601f805462ff0000191662010000179055565b601d546001600160a01b031633146108f15760405162461bcd60e51b815260040161080390611ca2565b600260005414156109145760405162461bcd60e51b815260040161080390611d49565b6002600055601f5462010000900460ff16156109425760405162461bcd60e51b815260040161080390611d1f565b601f5460ff1661098c5760405162461bcd60e51b81526020600482015260156024820152741cd85b19481dd85cdb89dd08199a5b985b1a5e9959605a1b6044820152606401610803565b600654601e54116109df5760405162461bcd60e51b815260206004820152601b60248201527f6e6f7420656e6f75676820746f6b656e73207765726520736f6c6400000000006044820152606401610803565b601f54610100900460ff1615610a305760405162461bcd60e51b81526020600482015260166024820152751cd85b19481dd85cc8185b1c9958591e48195b99195960521b6044820152606401610803565b601f805461ff001916610100179055600354600090610a4d6117f6565b610a579190611d98565b90506000600554601e54601254610a6e9190611dba565b610a789190611d98565b60185460165460405163095ea7b360e01b81526001600160a01b03918216600482015260248101849052929350169063095ea7b390604401602060405180830381600087803b158015610aca57600080fd5b505af1158015610ade573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b029190611ab1565b506016546018546001600160a01b039182169163f305d719918591168460008030610b2f426103e8611d80565b60405160e089901b6001600160e01b03191681526001600160a01b039687166004820152602481019590955260448501939093526064840191909152909216608482015260a481019190915260c4016060604051808303818588803b158015610b9757600080fd5b505af1158015610bab573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610bd09190611b88565b505060155460408051631f9134b360e21b815290516001600160a01b039092169250637e44d2cc916004808301926020929190829003018186803b158015610c1757600080fd5b505afa158015610c2b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c4f9190611a94565b6001600160a01b0316612710600754601e54610c6b9190611dba565b610c759190611d98565b604051600081818185875af1925050503d8060008114610cb1576040519150601f19603f3d011682016040523d82523d6000602084013e610cb6565b606091505b5050601d546040516001600160a01b0390911691504790600081818185875af1925050503d8060008114610d06576040519150601f19603f3d011682016040523d82523d6000602084013e610d0b565b606091505b50506001600055505050565b60026000541415610d3a5760405162461bcd60e51b815260040161080390611d49565b6002600055601f5462010000900460ff1615610db65760405162461bcd60e51b815260206004820152603560248201527f73616c65207761732061626f727465642c20706c656173652075736520636c6160448201527434b6a9ba30b632a2ba34141490333ab731ba34b7b760591b6064820152608401610803565b33600090815260216020526040902054610e125760405162461bcd60e51b815260206004820152601f60248201527f75736572206861736e277420616e7920746f6b656e7320746f20636c61696d006044820152606401610803565b601f54610100900460ff16610e755760405162461bcd60e51b815260206004820152602360248201527f696e69746961746f72206861736e277420656e646564207468652073616c65206044820152621e595d60ea1b6064820152608401610803565b600b54336000908152602160205260408120549091610e9391611dba565b3360009081526021602052604080822091909155519091507f8a36f5a234186d446e36a7df36ace663a05a580d9bea2dd899c6dd76a075d5fa90610eda9083815260200190565b60405180910390a160185460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b158015610f2e57600080fd5b505af1158015610f42573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f669190611ab1565b50506001600055565b601d546001600160a01b03163314610f995760405162461bcd60e51b815260040161080390611ca2565b601f5462010000900460ff1615610fc25760405162461bcd60e51b815260040161080390611d1f565b6002546018546040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b15801561100857600080fd5b505afa15801561101c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110409190611b6f565b10156110a85760405162461bcd60e51b815260206004820152603160248201527f696e73756666696369656e7420616d6f756e74206f6620746f6b656e732073656044820152706e7420746f20746865206164647265737360781b6064820152608401610803565b601f805460ff19166001179055565b600260005414156110da5760405162461bcd60e51b815260040161080390611d49565b600260005560015460ff16156111255760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610803565b61113381336019544661180d565b61113c57600080fd5b601f5462010000900460ff16156111655760405162461bcd60e51b815260040161080390611d1f565b601f5460ff166111b75760405162461bcd60e51b815260206004820152601e60248201527f73616c65206861736e2774206265656e2066696e616c697a65642079657400006044820152606401610803565b60095442106111f95760405162461bcd60e51b815260206004820152600e60248201526d1cd85b19481a185cc8195b99195960921b6044820152606401610803565b600a5442116112445760405162461bcd60e51b81526020600482015260176024820152761cd85b19481a185cdb89dd081cdd185c9d1959081e595d604a1b6044820152606401610803565b600f54336000908152602160205260409020546112619034611d80565b111561127f5760405162461bcd60e51b815260040161080390611c5e565b6010543410156112cd5760405162461bcd60e51b81526020600482015260196024820152780f2deea4ee4ca40dcdee840e6cadcc8d2dcce40cadcdeeaced603b1b6044820152606401610803565b6011546112d86117f6565b600b546112e59034611dba565b6112ef9190611d80565b111561130d5760405162461bcd60e51b815260040161080390611c0b565b60055434601e5461131e9190611d80565b111561133c5760405162461bcd60e51b815260040161080390611cd9565b33600090815260216020526040902054611357903490611d80565b33600090815260216020526040902055601e54611375903490611d80565b601e55506001600055565b601a805461138d90611dd9565b80601f01602080910402602001604051908101604052809291908181526020018280546113b990611dd9565b80156114065780601f106113db57610100808354040283529160200191611406565b820191906000526020600020905b8154815290600101906020018083116113e957829003601f168201915b505050505081565b600260005414156114315760405162461bcd60e51b815260040161080390611d49565b6002600055601f54610100900460ff161561149a5760405162461bcd60e51b815260206004820152602360248201527f73616c6520686173206265656e20656e646564203a20796f752063616e20636c60448201526261696d60e81b6064820152608401610803565b601f5462010000900460ff16156114b3576114b3611927565b600654601e541080156114c7575060095442115b156114d4576114d4611927565b600654601e541180156114f557506009546114f29062015180611d80565b42115b1561150257611502611927565b6001600055565b6002600054141561152c5760405162461bcd60e51b815260040161080390611d49565b600260005560015460ff16156115775760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610803565b601f5462010000900460ff16156115a05760405162461bcd60e51b815260040161080390611d1f565b601f5460ff166115f25760405162461bcd60e51b815260206004820152601e60248201527f73616c65206861736e2774206265656e2066696e616c697a65642079657400006044820152606401610803565b600854421161163d5760405162461bcd60e51b81526020600482015260176024820152761cd85b19481a185cdb89dd081cdd185c9d1959081e595d604a1b6044820152606401610803565b600954421061167f5760405162461bcd60e51b815260206004820152600e60248201526d1cd85b19481a185cc8195b99195960921b6044820152606401610803565b600f543360009081526021602052604090205461169c9034611d80565b11156116ba5760405162461bcd60e51b815260040161080390611c5e565b6010543410156117085760405162461bcd60e51b81526020600482015260196024820152780f2deea4ee4ca40dcdee840e6cadcc8d2dcce40cadcdeeaced603b1b6044820152606401610803565b6011546117136117f6565b600b546117209034611dba565b61172a9190611d80565b11156117485760405162461bcd60e51b815260040161080390611c0b565b60055434601e546117599190611d80565b11156117775760405162461bcd60e51b815260040161080390611cd9565b33600090815260216020526040902054611792903490611d80565b33600090815260216020526040902055601e546117b0903490611d80565b601e556001600055565b600080600083516041146117cd57600080fd5b5050506020810151604082015160609092015160001a92909190565b601b805461138d90611dd9565b6000600b54601e546118089190611dba565b905090565b60008060008061181c886117ba565b604080516001600160a01b038c166020808301919091528183018c905260608083018c9052835180840390910181526080830190935282519201919091207f19457468657265756d205369676e6564204d6573736167653a0a33320000000060a083015260bc8201819052939650919450925060009060dc0160408051601f1981840301815282825280516020918201206000845290830180835281905260ff8816918301919091526060820186905260808201859052915060019060a0016020604051602081039080840390855afa1580156118fd573d6000803e3d6000fd5b5050604051601f1901516014546001600160a01b039182169116149b9a5050505050505050505050565b336000908152602160205260409020546119835760405162461bcd60e51b815260206004820152601f60248201527f75736572206861736e277420616e7920746f6b656e7320746f20636c61696d006044820152606401610803565b33600081815260216020526040808220805490839055905190929183919081818185875af1925050503d80600081146119d8576040519150601f19603f3d011682016040523d82523d6000602084013e6119dd565b606091505b50505050565b600082601f8301126119f457600080fd5b813567ffffffffffffffff80821115611a0f57611a0f611e2a565b604051601f8301601f19908116603f01168101908282118183101715611a3757611a37611e2a565b81604052838152866020858801011115611a5057600080fd5b836020870160208301376000602085830101528094505050505092915050565b600060208284031215611a8257600080fd5b8135611a8d81611e40565b9392505050565b600060208284031215611aa657600080fd5b8151611a8d81611e40565b600060208284031215611ac357600080fd5b81518015158114611a8d57600080fd5b600060208284031215611ae557600080fd5b813567ffffffffffffffff811115611afc57600080fd5b611b08848285016119e3565b949350505050565b60008060008060808587031215611b2657600080fd5b843567ffffffffffffffff811115611b3d57600080fd5b611b49878288016119e3565b9450506020850135611b5a81611e40565b93969395505050506040820135916060013590565b600060208284031215611b8157600080fd5b5051919050565b600080600060608486031215611b9d57600080fd5b8351925060208401519150604084015190509250925092565b600060208083528351808285015260005b81811015611be357858101830151858201604001528201611bc7565b81811115611bf5576000604083870101525b50601f01601f1916929092016040019392505050565b60208082526033908201527f7468657265206172656e277420656e6f75676820746f6b656e73206c6566742e60408201527208151c9e4818481b1bddd95c88185b5bdd5b9d606a1b606082015260800190565b60208082526024908201527f796f7527726520747279696e6720746f2062757920746f6f206d616e7920746f6040820152636b656e7360e01b606082015260800190565b6020808252601b908201527f63616c6c6572206973206e6f742074686520696e69746961746f720000000000604082015260600190565b60208082526026908201527f6861726463617020697320726561636865642e205472792061206c6f77657220604082015265185b5bdd5b9d60d21b606082015260800190565b60208082526010908201526f1cd85b19481dd85cc818589bdc9d195960821b604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60008219821115611d9357611d93611e14565b500190565b600082611db557634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615611dd457611dd4611e14565b500290565b600181811c90821680611ded57607f821691505b60208210811415611e0e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114611e5557600080fd5b5056fea2646970667358221220c0f319c2275355e0601f5672cdf63a5ce48b326a39a1742c9b57162189004c9664736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x293 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8F5D036B GT PUSH2 0x15A JUMPI DUP1 PUSH4 0xC7BF5166 GT PUSH2 0xC1 JUMPI DUP1 PUSH4 0xE49DCE66 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xE49DCE66 EQ PUSH2 0x72D JUMPI DUP1 PUSH4 0xEA44C1BC EQ PUSH2 0x74D JUMPI DUP1 PUSH4 0xEE97F7F3 EQ PUSH2 0x763 JUMPI DUP1 PUSH4 0xF887EA40 EQ PUSH2 0x783 JUMPI DUP1 PUSH4 0xF89BE593 EQ PUSH2 0x7A3 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x7B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC7BF5166 EQ PUSH2 0x6A6 JUMPI DUP1 PUSH4 0xC84C0387 EQ PUSH2 0x6BC JUMPI DUP1 PUSH4 0xD132A8F4 EQ PUSH2 0x6D2 JUMPI DUP1 PUSH4 0xD4B9DE51 EQ PUSH2 0x6E7 JUMPI DUP1 PUSH4 0xDA2CBD50 EQ PUSH2 0x701 JUMPI DUP1 PUSH4 0xDE284B3A EQ PUSH2 0x717 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA7BB5803 GT PUSH2 0x113 JUMPI DUP1 PUSH4 0xA7BB5803 EQ PUSH2 0x5E6 JUMPI DUP1 PUSH4 0xABA83150 EQ PUSH2 0x625 JUMPI DUP1 PUSH4 0xB071CBE6 EQ PUSH2 0x63A JUMPI DUP1 PUSH4 0xBCA1DA85 EQ PUSH2 0x650 JUMPI DUP1 PUSH4 0xBE9FEB30 EQ PUSH2 0x670 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x686 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8F5D036B EQ PUSH2 0x564 JUMPI DUP1 PUSH4 0x957F1474 EQ PUSH2 0x579 JUMPI DUP1 PUSH4 0x9B8906AE EQ PUSH2 0x581 JUMPI DUP1 PUSH4 0xA0F7AB35 EQ PUSH2 0x5A0 JUMPI DUP1 PUSH4 0xA5F0DEA2 EQ PUSH2 0x5B6 JUMPI DUP1 PUSH4 0xA611DC37 EQ PUSH2 0x5D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x51FB012D GT PUSH2 0x1FE JUMPI DUP1 PUSH4 0x6B7F3DF3 GT PUSH2 0x1B7 JUMPI DUP1 PUSH4 0x6B7F3DF3 EQ PUSH2 0x4B4 JUMPI DUP1 PUSH4 0x6EF2E4D3 EQ PUSH2 0x4E1 JUMPI DUP1 PUSH4 0x7284E416 EQ PUSH2 0x4F7 JUMPI DUP1 PUSH4 0x78E97925 EQ PUSH2 0x519 JUMPI DUP1 PUSH4 0x83B17FDD EQ PUSH2 0x52F JUMPI DUP1 PUSH4 0x85BF4946 EQ PUSH2 0x545 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x51FB012D EQ PUSH2 0x404 JUMPI DUP1 PUSH4 0x58A687EC EQ PUSH2 0x434 JUMPI DUP1 PUSH4 0x59663174 EQ PUSH2 0x449 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x45C JUMPI DUP1 PUSH4 0x64DB812E EQ PUSH2 0x474 JUMPI DUP1 PUSH4 0x66D003AC EQ PUSH2 0x494 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x27A72C96 GT PUSH2 0x250 JUMPI DUP1 PUSH4 0x27A72C96 EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0x27C8F835 EQ PUSH2 0x367 JUMPI DUP1 PUSH4 0x3197CBB6 EQ PUSH2 0x38E JUMPI DUP1 PUSH4 0x3C876081 EQ PUSH2 0x3A4 JUMPI DUP1 PUSH4 0x48C54B9D EQ PUSH2 0x3D9 JUMPI DUP1 PUSH4 0x4AE01D52 EQ PUSH2 0x3EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x17F6FAE EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0x39CE157 EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x3BCF11D EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0x12E409C5 EQ PUSH2 0x2EE JUMPI DUP1 PUSH4 0x201A3419 EQ PUSH2 0x304 JUMPI DUP1 PUSH4 0x238AC933 EQ PUSH2 0x319 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AE PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AE PUSH1 0x11 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EC PUSH2 0x7D9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AE PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x310 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EC PUSH2 0x8C7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x325 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x14 SLOAD PUSH2 0x339 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2B8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AE PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x373 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x13 SLOAD PUSH2 0x339 SWAP1 PUSH4 0x1000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AE PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x339 PUSH2 0x3BF CALLDATASIZE PUSH1 0x4 PUSH2 0x1A70 JUMP JUMPDEST PUSH1 0x20 DUP1 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EC PUSH2 0xD17 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AE PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x410 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x13 SLOAD PUSH2 0x424 SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2B8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x440 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EC PUSH2 0xF6F JUMP JUMPDEST PUSH2 0x2EC PUSH2 0x457 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AD3 JUMP JUMPDEST PUSH2 0x10B7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x468 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0xFF AND PUSH2 0x424 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x480 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1F SLOAD PUSH2 0x424 SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1C SLOAD PUSH2 0x339 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AE PUSH2 0x4CF CALLDATASIZE PUSH1 0x4 PUSH2 0x1A70 JUMP JUMPDEST PUSH1 0x21 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AE PUSH1 0x12 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x503 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x50C PUSH2 0x1380 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B8 SWAP2 SWAP1 PUSH2 0x1BB6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x525 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AE PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x53B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AE PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x551 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x13 SLOAD PUSH2 0x424 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x570 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EC PUSH2 0x140E JUMP JUMPDEST PUSH2 0x2EC PUSH2 0x1509 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1F SLOAD PUSH2 0x424 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AE PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1F SLOAD PUSH2 0x424 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AE PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x606 PUSH2 0x601 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AD3 JUMP JUMPDEST PUSH2 0x17BA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP5 AND DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x2B8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x631 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x50C PUSH2 0x17E9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x646 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AE PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x65C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1D SLOAD PUSH2 0x339 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x67C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AE PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x692 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x17 SLOAD PUSH2 0x339 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AE PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AE PUSH1 0x19 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AE PUSH2 0x17F6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x13 SLOAD PUSH2 0x424 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x70D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AE PUSH1 0x1E SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x723 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AE PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x739 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x424 PUSH2 0x748 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B10 JUMP JUMPDEST PUSH2 0x180D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x759 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AE PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x76F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x15 SLOAD PUSH2 0x339 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x78F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x16 SLOAD PUSH2 0x339 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AE PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x18 SLOAD PUSH2 0x339 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1D SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x80C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x803 SWAP1 PUSH2 0x1CA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1F SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x864 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x636C61696D696E672068617320616C7265616479207374617274656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x1F SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x8B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x1CD85B1948185B1C9958591E4818589BDC9D1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x1F DUP1 SLOAD PUSH3 0xFF0000 NOT AND PUSH3 0x10000 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1D SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8F1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x803 SWAP1 PUSH2 0x1CA2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x914 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x803 SWAP1 PUSH2 0x1D49 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE PUSH1 0x1F SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x942 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x803 SWAP1 PUSH2 0x1D1F JUMP JUMPDEST PUSH1 0x1F SLOAD PUSH1 0xFF AND PUSH2 0x98C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x1CD85B19481DD85CDB89DD08199A5B985B1A5E9959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1E SLOAD GT PUSH2 0x9DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6E6F7420656E6F75676820746F6B656E73207765726520736F6C640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x1F SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xA30 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x1CD85B19481DD85CC8185B1C9958591E48195B991959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x1F DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 PUSH2 0xA4D PUSH2 0x17F6 JUMP JUMPDEST PUSH2 0xA57 SWAP2 SWAP1 PUSH2 0x1D98 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x5 SLOAD PUSH1 0x1E SLOAD PUSH1 0x12 SLOAD PUSH2 0xA6E SWAP2 SWAP1 PUSH2 0x1DBA JUMP JUMPDEST PUSH2 0xA78 SWAP2 SWAP1 PUSH2 0x1D98 JUMP JUMPDEST PUSH1 0x18 SLOAD PUSH1 0x16 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP3 SWAP4 POP AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xACA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xADE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB02 SWAP2 SWAP1 PUSH2 0x1AB1 JUMP JUMPDEST POP PUSH1 0x16 SLOAD PUSH1 0x18 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 PUSH4 0xF305D719 SWAP2 DUP6 SWAP2 AND DUP5 PUSH1 0x0 DUP1 ADDRESS PUSH2 0xB2F TIMESTAMP PUSH2 0x3E8 PUSH2 0x1D80 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xE0 DUP10 SWAP1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x44 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x64 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP3 AND PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xC4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBAB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBD0 SWAP2 SWAP1 PUSH2 0x1B88 JUMP JUMPDEST POP POP PUSH1 0x15 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x1F9134B3 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 POP PUSH4 0x7E44D2CC SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC2B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC4F SWAP2 SWAP1 PUSH2 0x1A94 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2710 PUSH1 0x7 SLOAD PUSH1 0x1E SLOAD PUSH2 0xC6B SWAP2 SWAP1 PUSH2 0x1DBA JUMP JUMPDEST PUSH2 0xC75 SWAP2 SWAP1 PUSH2 0x1D98 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xCB1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xCB6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP PUSH1 0x1D SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 POP SELFBALANCE SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xD06 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xD0B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x0 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0xD3A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x803 SWAP1 PUSH2 0x1D49 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE PUSH1 0x1F SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xDB6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x73616C65207761732061626F727465642C20706C656173652075736520636C61 PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x34B6A9BA30B632A2BA34141490333AB731BA34B7B7 PUSH1 0x59 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x803 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x21 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xE12 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x75736572206861736E277420616E7920746F6B656E7320746F20636C61696D00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x1F SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xE75 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E69746961746F72206861736E277420656E646564207468652073616C6520 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x1E595D PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0xB SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x21 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0xE93 SWAP2 PUSH2 0x1DBA JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x21 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE MLOAD SWAP1 SWAP2 POP PUSH32 0x8A36F5A234186D446E36A7DF36ACE663A05A580D9BEA2DD899C6DD76A075D5FA SWAP1 PUSH2 0xEDA SWAP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x18 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF2E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF42 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF66 SWAP2 SWAP1 PUSH2 0x1AB1 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x1D SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xF99 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x803 SWAP1 PUSH2 0x1CA2 JUMP JUMPDEST PUSH1 0x1F SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xFC2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x803 SWAP1 PUSH2 0x1D1F JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x18 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1008 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x101C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1040 SWAP2 SWAP1 PUSH2 0x1B6F JUMP JUMPDEST LT ISZERO PUSH2 0x10A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E73756666696369656E7420616D6F756E74206F6620746F6B656E73207365 PUSH1 0x44 DUP3 ADD MSTORE PUSH17 0x6E7420746F207468652061646472657373 PUSH1 0x78 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x1F DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x10DA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x803 SWAP1 PUSH2 0x1D49 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE PUSH1 0x1 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1125 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH2 0x1133 DUP2 CALLER PUSH1 0x19 SLOAD CHAINID PUSH2 0x180D JUMP JUMPDEST PUSH2 0x113C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1F SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1165 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x803 SWAP1 PUSH2 0x1D1F JUMP JUMPDEST PUSH1 0x1F SLOAD PUSH1 0xFF AND PUSH2 0x11B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x73616C65206861736E2774206265656E2066696E616C697A6564207965740000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x9 SLOAD TIMESTAMP LT PUSH2 0x11F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x1CD85B19481A185CC8195B991959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0xA SLOAD TIMESTAMP GT PUSH2 0x1244 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x1CD85B19481A185CDB89DD081CDD185C9D1959081E595D PUSH1 0x4A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0xF SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x21 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1261 SWAP1 CALLVALUE PUSH2 0x1D80 JUMP JUMPDEST GT ISZERO PUSH2 0x127F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x803 SWAP1 PUSH2 0x1C5E JUMP JUMPDEST PUSH1 0x10 SLOAD CALLVALUE LT ISZERO PUSH2 0x12CD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0xF2DEEA4EE4CA40DCDEE840E6CADCC8D2DCCE40CADCDEEACED PUSH1 0x3B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH2 0x12D8 PUSH2 0x17F6 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x12E5 SWAP1 CALLVALUE PUSH2 0x1DBA JUMP JUMPDEST PUSH2 0x12EF SWAP2 SWAP1 PUSH2 0x1D80 JUMP JUMPDEST GT ISZERO PUSH2 0x130D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x803 SWAP1 PUSH2 0x1C0B JUMP JUMPDEST PUSH1 0x5 SLOAD CALLVALUE PUSH1 0x1E SLOAD PUSH2 0x131E SWAP2 SWAP1 PUSH2 0x1D80 JUMP JUMPDEST GT ISZERO PUSH2 0x133C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x803 SWAP1 PUSH2 0x1CD9 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x21 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1357 SWAP1 CALLVALUE SWAP1 PUSH2 0x1D80 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x21 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x1E SLOAD PUSH2 0x1375 SWAP1 CALLVALUE SWAP1 PUSH2 0x1D80 JUMP JUMPDEST PUSH1 0x1E SSTORE POP PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x1A DUP1 SLOAD PUSH2 0x138D SWAP1 PUSH2 0x1DD9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x13B9 SWAP1 PUSH2 0x1DD9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1406 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x13DB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1406 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x13E9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x1431 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x803 SWAP1 PUSH2 0x1D49 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE PUSH1 0x1F SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x149A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x73616C6520686173206265656E20656E646564203A20796F752063616E20636C PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x61696D PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x1F SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x14B3 JUMPI PUSH2 0x14B3 PUSH2 0x1927 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1E SLOAD LT DUP1 ISZERO PUSH2 0x14C7 JUMPI POP PUSH1 0x9 SLOAD TIMESTAMP GT JUMPDEST ISZERO PUSH2 0x14D4 JUMPI PUSH2 0x14D4 PUSH2 0x1927 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1E SLOAD GT DUP1 ISZERO PUSH2 0x14F5 JUMPI POP PUSH1 0x9 SLOAD PUSH2 0x14F2 SWAP1 PUSH3 0x15180 PUSH2 0x1D80 JUMP JUMPDEST TIMESTAMP GT JUMPDEST ISZERO PUSH2 0x1502 JUMPI PUSH2 0x1502 PUSH2 0x1927 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x152C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x803 SWAP1 PUSH2 0x1D49 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE PUSH1 0x1 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1577 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x1F SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x15A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x803 SWAP1 PUSH2 0x1D1F JUMP JUMPDEST PUSH1 0x1F SLOAD PUSH1 0xFF AND PUSH2 0x15F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x73616C65206861736E2774206265656E2066696E616C697A6564207965740000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x8 SLOAD TIMESTAMP GT PUSH2 0x163D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x1CD85B19481A185CDB89DD081CDD185C9D1959081E595D PUSH1 0x4A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x9 SLOAD TIMESTAMP LT PUSH2 0x167F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x1CD85B19481A185CC8195B991959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0xF SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x21 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x169C SWAP1 CALLVALUE PUSH2 0x1D80 JUMP JUMPDEST GT ISZERO PUSH2 0x16BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x803 SWAP1 PUSH2 0x1C5E JUMP JUMPDEST PUSH1 0x10 SLOAD CALLVALUE LT ISZERO PUSH2 0x1708 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0xF2DEEA4EE4CA40DCDEE840E6CADCC8D2DCCE40CADCDEEACED PUSH1 0x3B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH2 0x1713 PUSH2 0x17F6 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x1720 SWAP1 CALLVALUE PUSH2 0x1DBA JUMP JUMPDEST PUSH2 0x172A SWAP2 SWAP1 PUSH2 0x1D80 JUMP JUMPDEST GT ISZERO PUSH2 0x1748 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x803 SWAP1 PUSH2 0x1C0B JUMP JUMPDEST PUSH1 0x5 SLOAD CALLVALUE PUSH1 0x1E SLOAD PUSH2 0x1759 SWAP2 SWAP1 PUSH2 0x1D80 JUMP JUMPDEST GT ISZERO PUSH2 0x1777 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x803 SWAP1 PUSH2 0x1CD9 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x21 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1792 SWAP1 CALLVALUE SWAP1 PUSH2 0x1D80 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x21 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x1E SLOAD PUSH2 0x17B0 SWAP1 CALLVALUE SWAP1 PUSH2 0x1D80 JUMP JUMPDEST PUSH1 0x1E SSTORE PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 MLOAD PUSH1 0x41 EQ PUSH2 0x17CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x60 SWAP1 SWAP3 ADD MLOAD PUSH1 0x0 BYTE SWAP3 SWAP1 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x1B DUP1 SLOAD PUSH2 0x138D SWAP1 PUSH2 0x1DD9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB SLOAD PUSH1 0x1E SLOAD PUSH2 0x1808 SWAP2 SWAP1 PUSH2 0x1DBA JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x181C DUP9 PUSH2 0x17BA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 DUP4 ADD DUP13 SWAP1 MSTORE PUSH1 0x60 DUP1 DUP4 ADD DUP13 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x80 DUP4 ADD SWAP1 SWAP4 MSTORE DUP3 MLOAD SWAP3 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xBC DUP3 ADD DUP2 SWAP1 MSTORE SWAP4 SWAP7 POP SWAP2 SWAP5 POP SWAP3 POP PUSH1 0x0 SWAP1 PUSH1 0xDC ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x0 DUP5 MSTORE SWAP1 DUP4 ADD DUP1 DUP4 MSTORE DUP2 SWAP1 MSTORE PUSH1 0xFF DUP9 AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP3 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 POP PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x18FD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD PUSH1 0x14 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND EQ SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x21 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1983 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x75736572206861736E277420616E7920746F6B656E7320746F20636C61696D00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x803 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x21 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD SWAP1 DUP4 SWAP1 SSTORE SWAP1 MLOAD SWAP1 SWAP3 SWAP2 DUP4 SWAP2 SWAP1 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x19D8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x19DD JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x19F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1A0F JUMPI PUSH2 0x1A0F PUSH2 0x1E2A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1A37 JUMPI PUSH2 0x1A37 PUSH2 0x1E2A JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x1A50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1A8D DUP2 PUSH2 0x1E40 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1A8D DUP2 PUSH2 0x1E40 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1A8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1AFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B08 DUP5 DUP3 DUP6 ADD PUSH2 0x19E3 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1B26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B49 DUP8 DUP3 DUP9 ADD PUSH2 0x19E3 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x1B5A DUP2 PUSH2 0x1E40 JUMP JUMPDEST SWAP4 SWAP7 SWAP4 SWAP6 POP POP POP POP PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1B9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MLOAD SWAP3 POP PUSH1 0x20 DUP5 ADD MLOAD SWAP2 POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1BE3 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x1BC7 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1BF5 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x33 SWAP1 DUP3 ADD MSTORE PUSH32 0x7468657265206172656E277420656E6F75676820746F6B656E73206C6566742E PUSH1 0x40 DUP3 ADD MSTORE PUSH19 0x8151C9E4818481B1BDDD95C88185B5BDD5B9D PUSH1 0x6A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x796F7527726520747279696E6720746F2062757920746F6F206D616E7920746F PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x6B656E73 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH32 0x63616C6C6572206973206E6F742074686520696E69746961746F720000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x6861726463617020697320726561636865642E205472792061206C6F77657220 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x185B5BDD5B9D PUSH1 0xD2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x1CD85B19481DD85CC818589BDC9D1959 PUSH1 0x82 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1D93 JUMPI PUSH2 0x1D93 PUSH2 0x1E14 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1DB5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1DD4 JUMPI PUSH2 0x1DD4 PUSH2 0x1E14 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1DED JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1E0E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1E55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC0 RETURN NOT 0xC2 0x27 MSTORE8 SSTORE 0xE0 PUSH1 0x1F JUMP PUSH19 0xCDF63A5CE48B326A39A1742C9B57162189004C SWAP7 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "422:12011:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;858:20;;;;;;;;;;;;;;;;;;;15301:25:14;;;15289:2;15274:18;858:20:13;;;;;;;;1653:33;;;;;;;;;;;;;;;;6402:181;;;;;;;;;;;;;:::i;:::-;;1585:28;;;;;;;;;;;;;;;;11462:969;;;;;;;;;;;;;:::i;2097:21::-;;;;;;;;;;-1:-1:-1;2097:21:13;;;;-1:-1:-1;;;;;2097:21:13;;;;;;-1:-1:-1;;;;;3708:32:14;;;3690:51;;3678:2;3663:18;2097:21:13;3544:203:14;1422:31:13;;;;;;;;;;;;;;;;2021:71;;;;;;;;;;-1:-1:-1;2021:71:13;;;;;;;-1:-1:-1;;;;;2021:71:13;;;990:22;;;;;;;;;;;;;;;;3207:54;;;;;;;;;;-1:-1:-1;3207:54:13;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;3207:54:13;;;9800:485;;;;;;;;;;;;;:::i;1227:36::-;;;;;;;;;;;;;;;;1961:28;;;;;;;;;;-1:-1:-1;1961:28:13;;;;;;;;;;;;;;5382:14:14;;5375:22;5357:41;;5345:2;5330:18;1961:28:13;5217:187:14;6617:303:13;;;;;;;;;;;;;:::i;7821:1005::-;;;;;;:::i;:::-;;:::i;1098:84:2:-;;;;;;;;;;-1:-1:-1;1168:7:2;;;;1098:84;;3107:23:13;;;;;;;;;;-1:-1:-1;3107:23:13;;;;;;;;;;;2766:32;;;;;;;;;;-1:-1:-1;2766:32:13;;;;-1:-1:-1;;;;;2766:32:13;;;3314:48;;;;;;;;;;-1:-1:-1;3314:48:13;;;;;:::i;:::-;;;;;;;;;;;;;;1731:38;;;;;;;;;;;;;;;;2646:25;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;917:24::-;;;;;;;;;;;;;;;;491:31;;;;;;;;;;;;;;;;1891:27;;;;;;;;;;-1:-1:-1;1891:27:13;;;;;;;;;;;10397:584;;;;;;;;;;;;;:::i;6924:893::-;;;:::i;3025:21::-;;;;;;;;;;-1:-1:-1;3025:21:13;;;;;;;;;;;576:37;;;;;;;;;;;;;;;;2963:25;;;;;;;;;;-1:-1:-1;2963:25:13;;;;;;;;664:31;;;;;;;;;;;;;;;;9315:481;;;;;;;;;;-1:-1:-1;9315:481:13;;;;;:::i;:::-;;:::i;:::-;;;;15565:4:14;15553:17;;;15535:36;;15602:2;15587:18;;15580:34;;;;15630:18;;;15623:34;15523:2;15508:18;9315:481:13;15337:326:14;2708:22:13;;;;;;;;;;;;;:::i;758:::-;;;;;;;;;;;;;;;;2824:36;;;;;;;;;;-1:-1:-1;2824:36:13;;;;-1:-1:-1;;;;;2824:36:13;;;1059:26;;;;;;;;;;;;;;;;2429:32;;;;;;;;;;-1:-1:-1;2429:32:13;;;;-1:-1:-1;;;;;2429:32:13;;;1144:34;;;;;;;;;;;;;;;;2589:21;;;;;;;;;;;;;;;;6127:109;;;;;;;;;;;;;:::i;1820:27::-;;;;;;;;;;-1:-1:-1;1820:27:13;;;;;;;;2893:26;;;;;;;;;;;;;;;;1517:28;;;;;;;;;;;;;;;;8830:481;;;;;;;;;;-1:-1:-1;8830:481:13;;;;;:::i;:::-;;:::i;1328:31::-;;;;;;;;;;;;;;;;2172:30;;;;;;;;;;-1:-1:-1;2172:30:13;;;;-1:-1:-1;;;;;2172:30:13;;;2346:32;;;;;;;;;;-1:-1:-1;2346:32:13;;;;-1:-1:-1;;;;;2346:32:13;;;808:22;;;;;;;;;;;;;;;;2525:19;;;;;;;;;;-1:-1:-1;2525:19:13;;;;-1:-1:-1;;;;;2525:19:13;;;6402:181;6052:13;;-1:-1:-1;;;;;6052:13:13;6069:10;6052:27;6044:67;;;;-1:-1:-1;;;6044:67:13;;;;;;;:::i;:::-;;;;;;;;;6461:9:::1;::::0;::::1;::::0;::::1;;;6460:10;6452:51;;;::::0;-1:-1:-1;;;6452:51:13;;12706:2:14;6452:51:13::1;::::0;::::1;12688:21:14::0;12745:2;12725:18;;;12718:30;12784;12764:18;;;12757:58;12832:18;;6452:51:13::1;12504:352:14::0;6452:51:13::1;6518:11;::::0;;;::::1;;;6517:12;6509:45;;;::::0;-1:-1:-1;;;6509:45:13;;7900:2:14;6509:45:13::1;::::0;::::1;7882:21:14::0;7939:2;7919:18;;;7912:30;-1:-1:-1;;;7958:18:14;;;7951:50;8018:18;;6509:45:13::1;7698:344:14::0;6509:45:13::1;6560:11;:18:::0;;-1:-1:-1;;6560:18:13::1;::::0;::::1;::::0;;6402:181::o;11462:969::-;6052:13;;-1:-1:-1;;;;;6052:13:13;6069:10;6052:27;6044:67;;;;-1:-1:-1;;;6044:67:13;;;;;;;:::i;:::-;1744:1:3::1;2325:7;;:19;;2317:63;;;;-1:-1:-1::0;;;2317:63:3::1;;;;;;;:::i;:::-;1744:1;2455:7;:18:::0;11542:11:13::2;::::0;;;::::2;;;11541:12;11533:41;;;;-1:-1:-1::0;;;11533:41:13::2;;;;;;;:::i;:::-;11588:13;::::0;::::2;;11580:47;;;::::0;-1:-1:-1;;;11580:47:13;;12356:2:14;11580:47:13::2;::::0;::::2;12338:21:14::0;12395:2;12375:18;;;12368:30;-1:-1:-1;;;12414:18:14;;;12407:51;12475:18;;11580:47:13::2;12154:345:14::0;11580:47:13::2;11655:7;;11641:11;;:21;11633:61;;;::::0;-1:-1:-1;;;11633:61:13;;14237:2:14;11633:61:13::2;::::0;::::2;14219:21:14::0;14276:2;14256:18;;;14249:30;14315:29;14295:18;;;14288:57;14362:18;;11633:61:13::2;14035:351:14::0;11633:61:13::2;11709:9;::::0;::::2;::::0;::::2;;;11708:10;11700:45;;;::::0;-1:-1:-1;;;11700:45:13;;10138:2:14;11700:45:13::2;::::0;::::2;10120:21:14::0;10177:2;10157:18;;;10150:30;-1:-1:-1;;;10196:18:14;;;10189:52;10258:18;;11700:45:13::2;9936:346:14::0;11700:45:13::2;11752:9;:16:::0;;-1:-1:-1;;11752:16:13::2;;;::::0;;11861:22:::2;::::0;11752:16;;11842::::2;:14;:16::i;:::-;:41;;;;:::i;:::-;11810:73;;11938:37;12026:7;;12011:11;;11979:23;;:43;;;;:::i;:::-;11978:55;;;;:::i;:::-;12040:5;::::0;12062:6:::2;::::0;12040:61:::2;::::0;-1:-1:-1;;;12040:61:13;;-1:-1:-1;;;;;12062:6:13;;::::2;12040:61;::::0;::::2;4150:51:14::0;4217:18;;;4210:34;;;11938:95:13;;-1:-1:-1;12040:5:13::2;::::0;:13:::2;::::0;4123:18:14;;12040:61:13::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;12107:6:13::2;::::0;12175:5:::2;::::0;-1:-1:-1;;;;;12107:6:13;;::::2;::::0;:22:::2;::::0;12137:21;;12175:5:::2;12189:29:::0;12107:6:::2;::::0;12252:4:::2;12265:22;:15;12283:4;12265:22;:::i;:::-;12107:186;::::0;::::2;::::0;;;-1:-1:-1;;;;;;12107:186:13;;;-1:-1:-1;;;;;4614:15:14;;;12107:186:13::2;::::0;::::2;4596:34:14::0;4646:18;;;4639:34;;;;4689:18;;;4682:34;;;;4732:18;;;4725:34;;;;4796:15;;;4775:19;;;4768:44;4828:19;;;4821:35;;;;4530:19;;12107:186:13::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;12299:6:13::2;::::0;:19:::2;::::0;;-1:-1:-1;;;12299:19:13;;;;-1:-1:-1;;;;;12299:6:13;;::::2;::::0;-1:-1:-1;12299:17:13::2;::::0;:19:::2;::::0;;::::2;::::0;::::2;::::0;;;;;;;;:6;:19;::::2;;::::0;::::2;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;12299:24:13::2;12356:6;12347:5;;12333:11;;:19;;;;:::i;:::-;12332:30;;;;:::i;:::-;12299:69;::::0;::::2;::::0;;;;;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;12374:13:13::2;::::0;:52:::2;::::0;-1:-1:-1;;;;;12374:13:13;;::::2;::::0;-1:-1:-1;12400:21:13::2;::::0;12374:52:::2;::::0;;;12400:21;12374:13;:52:::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;1701:1:3::1;2628:7;:22:::0;-1:-1:-1;;;11462:969:13:o;9800:485::-;1744:1:3;2325:7;;:19;;2317:63;;;;-1:-1:-1;;;2317:63:3;;;;;;;:::i;:::-;1744:1;2455:7;:18;9867:11:13::1;::::0;;;::::1;;;9866:12;9851:96;;;::::0;-1:-1:-1;;;9851:96:13;;13470:2:14;9851:96:13::1;::::0;::::1;13452:21:14::0;13509:2;13489:18;;;13482:30;13548:34;13528:18;;;13521:62;-1:-1:-1;;;13599:18:14;;;13592:51;13660:19;;9851:96:13::1;13268:417:14::0;9851:96:13::1;9975:10;9989:1;9961:25:::0;;;:13:::1;:25;::::0;;;;;9953:73:::1;;;::::0;-1:-1:-1;;;9953:73:13;;7540:2:14;9953:73:13::1;::::0;::::1;7522:21:14::0;7579:2;7559:18;;;7552:30;7618:33;7598:18;;;7591:61;7669:18;;9953:73:13::1;7338:355:14::0;9953:73:13::1;10040:9;::::0;::::1;::::0;::::1;;;10032:57;;;::::0;-1:-1:-1;;;10032:57:13;;14593:2:14;10032:57:13::1;::::0;::::1;14575:21:14::0;14632:2;14612:18;;;14605:30;14671:34;14651:18;;;14644:62;-1:-1:-1;;;14722:18:14;;;14715:33;14765:19;;10032:57:13::1;14391:399:14::0;10032:57:13::1;10148:19;::::0;10134:10:::1;10096:21;10120:25:::0;;;:13:::1;:25;::::0;;;;;10096:21;;10120:47:::1;::::0;::::1;:::i;:::-;10187:10;10201:1;10173:25:::0;;;:13:::1;:25;::::0;;;;;:29;;;;10213:20;10096:71;;-1:-1:-1;10213:20:13::1;::::0;::::1;::::0;10096:71;15301:25:14;;15289:2;15274:18;;15155:177;10213:20:13::1;;;;;;;;10239:5;::::0;:41:::1;::::0;-1:-1:-1;;;10239:41:13;;10254:10:::1;10239:41;::::0;::::1;4150:51:14::0;4217:18;;;4210:34;;;-1:-1:-1;;;;;10239:5:13;;::::1;::::0;:14:::1;::::0;4123:18:14;;10239:41:13::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;1701:1:3;2628:7;:22;9800:485:13:o;6617:303::-;6052:13;;-1:-1:-1;;;;;6052:13:13;6069:10;6052:27;6044:67;;;;-1:-1:-1;;;6044:67:13;;;;;;;:::i;:::-;6721:11:::1;::::0;;;::::1;;;6720:12;6712:41;;;;-1:-1:-1::0;;;6712:41:13::1;;;;;;;:::i;:::-;6808:16;::::0;6774:5:::1;::::0;:30:::1;::::0;-1:-1:-1;;;6774:30:13;;6798:4:::1;6774:30;::::0;::::1;3690:51:14::0;-1:-1:-1;;;;;6774:5:13;;::::1;::::0;:15:::1;::::0;3663:18:14;;6774:30:13::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:50;;6759:130;;;::::0;-1:-1:-1;;;6759:130:13;;9720:2:14;6759:130:13::1;::::0;::::1;9702:21:14::0;9759:2;9739:18;;;9732:30;9798:34;9778:18;;;9771:62;-1:-1:-1;;;9849:18:14;;;9842:47;9906:19;;6759:130:13::1;9518:413:14::0;6759:130:13::1;6895:13;:20:::0;;-1:-1:-1;;6895:20:13::1;6911:4;6895:20;::::0;;6617:303::o;7821:1005::-;1744:1:3;2325:7;;:19;;2317:63;;;;-1:-1:-1;;;2317:63:3;;;;;;;:::i;:::-;1744:1;2455:7;:18;1168:7:2;;;;1411:9:::1;1403:38;;;::::0;-1:-1:-1;;;1403:38:2;;9375:2:14;1403:38:2::1;::::0;::::1;9357:21:14::0;9414:2;9394:18;;;9387:30;-1:-1:-1;;;9433:18:14;;;9426:46;9489:18;;1403:38:2::1;9173:340:14::0;1403:38:2::1;7949:52:13::2;7956:9;7967:10;7979:6;;7987:13;7949:6;:52::i;:::-;7941:61;;;::::0;::::2;;8017:11;::::0;;;::::2;;;8016:12;8008:41;;;;-1:-1:-1::0;;;8008:41:13::2;;;;;;;:::i;:::-;8063:13;::::0;::::2;;8055:56;;;::::0;-1:-1:-1;;;8055:56:13;;10832:2:14;8055:56:13::2;::::0;::::2;10814:21:14::0;10871:2;10851:18;;;10844:30;10910:32;10890:18;;;10883:60;10960:18;;8055:56:13::2;10630:354:14::0;8055:56:13::2;8143:7;;8125:15;:25;8117:52;;;::::0;-1:-1:-1;;;8117:52:13;;10489:2:14;8117:52:13::2;::::0;::::2;10471:21:14::0;10528:2;10508:18;;;10501:30;-1:-1:-1;;;10547:18:14;;;10540:44;10601:18;;8117:52:13::2;10287:338:14::0;8117:52:13::2;8201:11;;8183:15;:29;8175:65;;;::::0;-1:-1:-1;;;8175:65:13;;9023:2:14;8175:65:13::2;::::0;::::2;9005:21:14::0;9062:2;9042:18;;;9035:30;-1:-1:-1;;;9081:18:14;;;9074:53;9144:18;;8175:65:13::2;8821:347:14::0;8175:65:13::2;8302:13;::::0;8287:10:::2;8273:25;::::0;;;:13:::2;:25;::::0;;;;;8261:37:::2;::::0;:9:::2;:37;:::i;:::-;:54;;8246:121;;;;-1:-1:-1::0;;;8246:121:13::2;;;;;;;:::i;:::-;8394:13;;8381:9;:26;;8373:64;;;::::0;-1:-1:-1;;;8373:64:13;;8249:2:14;8373:64:13::2;::::0;::::2;8231:21:14::0;8288:2;8268:18;;;8261:30;-1:-1:-1;;;8307:18:14;;;8300:55;8372:18;;8373:64:13::2;8047:349:14::0;8373:64:13::2;8512:18;;8492:16;:14;:16::i;:::-;8470:19;::::0;8458:31:::2;::::0;:9:::2;:31;:::i;:::-;:50;;;;:::i;:::-;:72;;8443:154;;;;-1:-1:-1::0;;;8443:154:13::2;;;;;;;:::i;:::-;8645:7;;8632:9;8618:11;;:23;;;;:::i;:::-;:34;;8603:103;;;;-1:-1:-1::0;;;8603:103:13::2;;;;;;;:::i;:::-;8755:10;8741:25;::::0;;;:13:::2;:25;::::0;;;;;:37:::2;::::0;8769:9:::2;::::0;8741:37:::2;:::i;:::-;8727:10;8713:25;::::0;;;:13:::2;:25;::::0;;;;:65;8798:11:::2;::::0;:23:::2;::::0;8812:9:::2;::::0;8798:23:::2;:::i;:::-;8784:11;:37:::0;-1:-1:-1;1701:1:3;2628:7;:22;7821:1005:13:o;2646:25::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;10397:584::-;1744:1:3;2325:7;;:19;;2317:63;;;;-1:-1:-1;;;2317:63:3;;;;;;;:::i;:::-;1744:1;2455:7;:18;10459:9:13::1;::::0;::::1;::::0;::::1;;;10458:10;10450:58;;;::::0;-1:-1:-1;;;10450:58:13;;11952:2:14;10450:58:13::1;::::0;::::1;11934:21:14::0;11991:2;11971:18;;;11964:30;12030:34;12010:18;;;12003:62;-1:-1:-1;;;12081:18:14;;;12074:33;12124:19;;10450:58:13::1;11750:399:14::0;10450:58:13::1;10578:11;::::0;;;::::1;;;10574:48;;;10599:16;:14;:16::i;:::-;10725:7;;10711:11;;:21;:50;;;;;10754:7;;10736:15;:25;10711:50;10707:87;;;10771:16;:14;:16::i;:::-;10900:7;;10886:11;;:21;:58;;;;-1:-1:-1::0;10929:7:13::1;::::0;:15:::1;::::0;10939:5:::1;10929:15;:::i;:::-;10911;:33;10886:58;10882:95;;;10954:16;:14;:16::i;:::-;1701:1:3::0;2628:7;:22;10397:584:13:o;6924:893::-;1744:1:3;2325:7;;:19;;2317:63;;;;-1:-1:-1;;;2317:63:3;;;;;;;:::i;:::-;1744:1;2455:7;:18;1168:7:2;;;;1411:9:::1;1403:38;;;::::0;-1:-1:-1;;;1403:38:2;;9375:2:14;1403:38:2::1;::::0;::::1;9357:21:14::0;9414:2;9394:18;;;9387:30;-1:-1:-1;;;9433:18:14;;;9426:46;9489:18;;1403:38:2::1;9173:340:14::0;1403:38:2::1;7010:11:13::2;::::0;;;::::2;;;7009:12;7001:41;;;;-1:-1:-1::0;;;7001:41:13::2;;;;;;;:::i;:::-;7056:13;::::0;::::2;;7048:56;;;::::0;-1:-1:-1;;;7048:56:13;;10832:2:14;7048:56:13::2;::::0;::::2;10814:21:14::0;10871:2;10851:18;;;10844:30;10910:32;10890:18;;;10883:60;10960:18;;7048:56:13::2;10630:354:14::0;7048:56:13::2;7136:9;;7118:15;:27;7110:63;;;::::0;-1:-1:-1;;;7110:63:13;;9023:2:14;7110:63:13::2;::::0;::::2;9005:21:14::0;9062:2;9042:18;;;9035:30;-1:-1:-1;;;9081:18:14;;;9074:53;9144:18;;7110:63:13::2;8821:347:14::0;7110:63:13::2;7205:7;;7187:15;:25;7179:52;;;::::0;-1:-1:-1;;;7179:52:13;;10489:2:14;7179:52:13::2;::::0;::::2;10471:21:14::0;10528:2;10508:18;;;10501:30;-1:-1:-1;;;10547:18:14;;;10540:44;10601:18;;7179:52:13::2;10287:338:14::0;7179:52:13::2;7293:13;::::0;7278:10:::2;7264:25;::::0;;;:13:::2;:25;::::0;;;;;7252:37:::2;::::0;:9:::2;:37;:::i;:::-;:54;;7237:121;;;;-1:-1:-1::0;;;7237:121:13::2;;;;;;;:::i;:::-;7385:13;;7372:9;:26;;7364:64;;;::::0;-1:-1:-1;;;7364:64:13;;8249:2:14;7364:64:13::2;::::0;::::2;8231:21:14::0;8288:2;8268:18;;;8261:30;-1:-1:-1;;;8307:18:14;;;8300:55;8372:18;;7364:64:13::2;8047:349:14::0;7364:64:13::2;7503:18;;7483:16;:14;:16::i;:::-;7461:19;::::0;7449:31:::2;::::0;:9:::2;:31;:::i;:::-;:50;;;;:::i;:::-;:72;;7434:154;;;;-1:-1:-1::0;;;7434:154:13::2;;;;;;;:::i;:::-;7636:7;;7623:9;7609:11;;:23;;;;:::i;:::-;:34;;7594:103;;;;-1:-1:-1::0;;;7594:103:13::2;;;;;;;:::i;:::-;7746:10;7732:25;::::0;;;:13:::2;:25;::::0;;;;;:37:::2;::::0;7760:9:::2;::::0;7732:37:::2;:::i;:::-;7718:10;7704:25;::::0;;;:13:::2;:25;::::0;;;;:65;7789:11:::2;::::0;:23:::2;::::0;7803:9:::2;::::0;7789:23:::2;:::i;:::-;7775:11;:37:::0;1701:1:3;2628:7;:22;6924:893:13:o;9315:481::-;9397:5;9410:7;9425;9455:3;:10;9469:2;9455:16;9447:25;;;;;;-1:-1:-1;;;9609:2:13;9600:12;;9594:19;9665:2;9656:12;;9650:19;9758:2;9749:12;;;9743:19;9479:9;9735:28;;9594:19;;9650;9315:481::o;2708:22::-;;;;;;;:::i;6127:109::-;6174:7;6211:19;;6197:11;;:33;;;;:::i;:::-;6189:42;;6127:109;:::o;8830:481::-;8963:4;8975:7;8988:9;9003;9031:25;9046:9;9031:14;:25::i;:::-;9102:38;;;-1:-1:-1;;;;;5087:32:14;;9102:38:13;;;;5069:51:14;;;;5136:18;;;5129:34;;;5179:18;;;;5172:34;;;9102:38:13;;;;;;;;;;5042:18:14;;;9102:38:13;;;9085:61;;;;;;;;3191:66:14;9185:65:13;;;3179:79:14;3274:12;;;3267:28;;;9019:37:13;;-1:-1:-1;9019:37:13;;-1:-1:-1;9019:37:13;-1:-1:-1;;;3311:12:14;;9185:65:13;;;-1:-1:-1;;9185:65:13;;;;;;;;;9175:76;;9185:65;9175:76;;;;9274:31;;;;;;;;;5636:25:14;;;5709:4;5697:17;;5677:18;;;5670:45;;;;5731:18;;;5724:34;;;5774:18;;;5767:34;;;9175:76:13;-1:-1:-1;9274:31:13;;5608:19:14;;9274:31:13;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9274:31:13;;-1:-1:-1;;9274:31:13;;9264:6;;-1:-1:-1;;;;;9264:41:13;;;:6;;:41;;8830:481;-1:-1:-1;;;;;;;;;;;8830:481:13:o;10985:255::-;11047:10;11061:1;11033:25;;;:13;:25;;;;;;11025:73;;;;-1:-1:-1;;;11025:73:13;;7540:2:14;11025:73:13;;;7522:21:14;7579:2;7559:18;;;7552:30;7618:33;7598:18;;;7591:61;7669:18;;11025:73:13;7338:355:14;11025:73:13;11142:10;11104:21;11128:25;;;:13;:25;;;;;;;;11159:29;;;;11194:41;;11128:25;;11142:10;11128:25;;11194:41;;11104:21;11194:41;11128:25;11142:10;11194:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11019:221;10985:255::o;14:718:14:-;56:5;109:3;102:4;94:6;90:17;86:27;76:55;;127:1;124;117:12;76:55;163:6;150:20;189:18;226:2;222;219:10;216:36;;;232:18;;:::i;:::-;307:2;301:9;275:2;361:13;;-1:-1:-1;;357:22:14;;;381:2;353:31;349:40;337:53;;;405:18;;;425:22;;;402:46;399:72;;;451:18;;:::i;:::-;491:10;487:2;480:22;526:2;518:6;511:18;572:3;565:4;560:2;552:6;548:15;544:26;541:35;538:55;;;589:1;586;579:12;538:55;653:2;646:4;638:6;634:17;627:4;619:6;615:17;602:54;700:1;693:4;688:2;680:6;676:15;672:26;665:37;720:6;711:15;;;;;;14:718;;;;:::o;737:247::-;796:6;849:2;837:9;828:7;824:23;820:32;817:52;;;865:1;862;855:12;817:52;904:9;891:23;923:31;948:5;923:31;:::i;:::-;973:5;737:247;-1:-1:-1;;;737:247:14:o;989:251::-;1059:6;1112:2;1100:9;1091:7;1087:23;1083:32;1080:52;;;1128:1;1125;1118:12;1080:52;1160:9;1154:16;1179:31;1204:5;1179:31;:::i;1245:277::-;1312:6;1365:2;1353:9;1344:7;1340:23;1336:32;1333:52;;;1381:1;1378;1371:12;1333:52;1413:9;1407:16;1466:5;1459:13;1452:21;1445:5;1442:32;1432:60;;1488:1;1485;1478:12;1527:320;1595:6;1648:2;1636:9;1627:7;1623:23;1619:32;1616:52;;;1664:1;1661;1654:12;1616:52;1704:9;1691:23;1737:18;1729:6;1726:30;1723:50;;;1769:1;1766;1759:12;1723:50;1792:49;1833:7;1824:6;1813:9;1809:22;1792:49;:::i;:::-;1782:59;1527:320;-1:-1:-1;;;;1527:320:14:o;1852:592::-;1947:6;1955;1963;1971;2024:3;2012:9;2003:7;1999:23;1995:33;1992:53;;;2041:1;2038;2031:12;1992:53;2081:9;2068:23;2114:18;2106:6;2103:30;2100:50;;;2146:1;2143;2136:12;2100:50;2169:49;2210:7;2201:6;2190:9;2186:22;2169:49;:::i;:::-;2159:59;;;2268:2;2257:9;2253:18;2240:32;2281:31;2306:5;2281:31;:::i;:::-;1852:592;;2331:5;;-1:-1:-1;;;;2383:2:14;2368:18;;2355:32;;2434:2;2419:18;2406:32;;1852:592::o;2449:184::-;2519:6;2572:2;2560:9;2551:7;2547:23;2543:32;2540:52;;;2588:1;2585;2578:12;2540:52;-1:-1:-1;2611:16:14;;2449:184;-1:-1:-1;2449:184:14:o;2638:306::-;2726:6;2734;2742;2795:2;2783:9;2774:7;2770:23;2766:32;2763:52;;;2811:1;2808;2801:12;2763:52;2840:9;2834:16;2824:26;;2890:2;2879:9;2875:18;2869:25;2859:35;;2934:2;2923:9;2919:18;2913:25;2903:35;;2638:306;;;;;:::o;6736:597::-;6848:4;6877:2;6906;6895:9;6888:21;6938:6;6932:13;6981:6;6976:2;6965:9;6961:18;6954:34;7006:1;7016:140;7030:6;7027:1;7024:13;7016:140;;;7125:14;;;7121:23;;7115:30;7091:17;;;7110:2;7087:26;7080:66;7045:10;;7016:140;;;7174:6;7171:1;7168:13;7165:91;;;7244:1;7239:2;7230:6;7219:9;7215:22;7211:31;7204:42;7165:91;-1:-1:-1;7317:2:14;7296:15;-1:-1:-1;;7292:29:14;7277:45;;;;7324:2;7273:54;;6736:597;-1:-1:-1;;;6736:597:14:o;8401:415::-;8603:2;8585:21;;;8642:2;8622:18;;;8615:30;8681:34;8676:2;8661:18;;8654:62;-1:-1:-1;;;8747:2:14;8732:18;;8725:49;8806:3;8791:19;;8401:415::o;10989:400::-;11191:2;11173:21;;;11230:2;11210:18;;;11203:30;11269:34;11264:2;11249:18;;11242:62;-1:-1:-1;;;11335:2:14;11320:18;;11313:34;11379:3;11364:19;;10989:400::o;11394:351::-;11596:2;11578:21;;;11635:2;11615:18;;;11608:30;11674:29;11669:2;11654:18;;11647:57;11736:2;11721:18;;11394:351::o;12861:402::-;13063:2;13045:21;;;13102:2;13082:18;;;13075:30;13141:34;13136:2;13121:18;;13114:62;-1:-1:-1;;;13207:2:14;13192:18;;13185:36;13253:3;13238:19;;12861:402::o;13690:340::-;13892:2;13874:21;;;13931:2;13911:18;;;13904:30;-1:-1:-1;;;13965:2:14;13950:18;;13943:46;14021:2;14006:18;;13690:340::o;14795:355::-;14997:2;14979:21;;;15036:2;15016:18;;;15009:30;15075:33;15070:2;15055:18;;15048:61;15141:2;15126:18;;14795:355::o;15668:128::-;15708:3;15739:1;15735:6;15732:1;15729:13;15726:39;;;15745:18;;:::i;:::-;-1:-1:-1;15781:9:14;;15668:128::o;15801:217::-;15841:1;15867;15857:132;;15911:10;15906:3;15902:20;15899:1;15892:31;15946:4;15943:1;15936:15;15974:4;15971:1;15964:15;15857:132;-1:-1:-1;16003:9:14;;15801:217::o;16023:168::-;16063:7;16129:1;16125;16121:6;16117:14;16114:1;16111:21;16106:1;16099:9;16092:17;16088:45;16085:71;;;16136:18;;:::i;:::-;-1:-1:-1;16176:9:14;;16023:168::o;16196:380::-;16275:1;16271:12;;;;16318;;;16339:61;;16393:4;16385:6;16381:17;16371:27;;16339:61;16446:2;16438:6;16435:14;16415:18;16412:38;16409:161;;;16492:10;16487:3;16483:20;16480:1;16473:31;16527:4;16524:1;16517:15;16555:4;16552:1;16545:15;16409:161;;16196:380;;;:::o;16581:127::-;16642:10;16637:3;16633:20;16630:1;16623:31;16673:4;16670:1;16663:15;16697:4;16694:1;16687:15;16713:127;16774:10;16769:3;16765:20;16762:1;16755:31;16805:4;16802:1;16795:15;16829:4;16826:1;16819:15;16845:131;-1:-1:-1;;;;;16920:31:14;;16910:42;;16900:70;;16966:1;16963;16956:12;16900:70;16845:131;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1564400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"abortSale()": "30873",
								"buyTokensPublic()": "infinite",
								"buyTokensWhitelist(bytes)": "infinite",
								"claimStaleEth()": "infinite",
								"claimTokens()": "infinite",
								"deadAddress()": "2416",
								"description()": "infinite",
								"endSaleAllowClaim()": "infinite",
								"endTime()": "2374",
								"factory()": "2492",
								"feeBP()": "2331",
								"finalizeSale()": "infinite",
								"hardcap()": "2373",
								"imageUrl()": "infinite",
								"liquidityLockDuration()": "2440",
								"liquidityShareBP()": "2440",
								"listingTokensPerOneEth()": "2396",
								"master()": "2425",
								"maxBuyPerUser()": "2439",
								"minBuyPerUser()": "2397",
								"paused()": "2416",
								"recipient()": "2493",
								"router()": "2447",
								"saleAborted()": "2455",
								"saleEnded()": "2411",
								"saleFinalized()": "2444",
								"saleId()": "2351",
								"saleInitiator()": "2448",
								"saleTokensPerOneEth()": "2329",
								"signer()": "2494",
								"softcap()": "2416",
								"splitSignature(bytes)": "infinite",
								"startTime()": "2395",
								"teamVestDuration()": "2330",
								"teamVestEnabled()": "2476",
								"token()": "2491",
								"tokenAmountForLiquidity()": "2351",
								"tokenAmountForSale()": "2353",
								"tokenTotalAmount()": "2417",
								"totalBuyEth()": "2417",
								"totalBuyTokens()": "4588",
								"userBuyAmount(address)": "2547",
								"userVestDuration()": "2350",
								"userVestEnabled()": "2421",
								"usersVestingWallets(address)": "2664",
								"verify(bytes,address,uint256,uint256)": "infinite",
								"whitelistEnabled()": "2367",
								"wlStartTime()": "2417"
							},
							"internal": {
								"_claimStaleEth()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 422,
									"end": 12433,
									"name": "PUSH",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2021,
									"end": 2092,
									"name": "PUSH",
									"source": 13,
									"value": "13"
								},
								{
									"begin": 2021,
									"end": 2092,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 2021,
									"end": 2092,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1000000"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "B8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2021,
									"end": 2092,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 2021,
									"end": 2092,
									"name": "PUSH",
									"source": 13,
									"value": "DEAD000000"
								},
								{
									"begin": 2021,
									"end": 2092,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 2021,
									"end": 2092,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2021,
									"end": 2092,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 3427,
									"end": 5963,
									"name": "CALLVALUE",
									"source": 13
								},
								{
									"begin": 3427,
									"end": 5963,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 3427,
									"end": 5963,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 3427,
									"end": 5963,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 3427,
									"end": 5963,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 3427,
									"end": 5963,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3427,
									"end": 5963,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 3427,
									"end": 5963,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 3427,
									"end": 5963,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 3427,
									"end": 5963,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3427,
									"end": 5963,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3427,
									"end": 5963,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 3427,
									"end": 5963,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 3427,
									"end": 5963,
									"name": "PUSHSIZE",
									"source": 13
								},
								{
									"begin": 3427,
									"end": 5963,
									"name": "CODESIZE",
									"source": 13
								},
								{
									"begin": 3427,
									"end": 5963,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 3427,
									"end": 5963,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 3427,
									"end": 5963,
									"name": "PUSHSIZE",
									"source": 13
								},
								{
									"begin": 3427,
									"end": 5963,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 3427,
									"end": 5963,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 3427,
									"end": 5963,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3427,
									"end": 5963,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3427,
									"end": 5963,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 3427,
									"end": 5963,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3427,
									"end": 5963,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3427,
									"end": 5963,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 3427,
									"end": 5963,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 3427,
									"end": 5963,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3427,
									"end": 5963,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 3427,
									"end": 5963,
									"name": "JUMP",
									"source": 13,
									"value": "[in]"
								},
								{
									"begin": 3427,
									"end": 5963,
									"name": "tag",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 3427,
									"end": 5963,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1701,
									"end": 1702,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1806,
									"end": 1813,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 981,
									"end": 996,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 981,
									"end": 996,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 981,
									"end": 996,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 981,
									"end": 996,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 981,
									"end": 996,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 4065,
									"end": 4070,
									"name": "PUSH",
									"source": 13,
									"value": "18"
								},
								{
									"begin": 4065,
									"end": 4087,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 4065,
									"end": 4087,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 4065,
									"end": 4087,
									"name": "AND",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4065,
									"end": 4087,
									"name": "DUP12",
									"source": 13
								},
								{
									"begin": 4065,
									"end": 4087,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 4065,
									"end": 4087,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 4065,
									"end": 4087,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4065,
									"end": 4087,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 4093,
									"end": 4119,
									"name": "DUP8",
									"source": 13
								},
								{
									"begin": 4093,
									"end": 4119,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 4093,
									"end": 4119,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "10"
								},
								{
									"begin": 4093,
									"end": 4119,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4093,
									"end": 4104,
									"name": "PUSH",
									"source": 13,
									"value": "1A"
								},
								{
									"begin": 4093,
									"end": 4104,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4093,
									"end": 4119,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 4093,
									"end": 4119,
									"name": "DUP12",
									"source": 13
								},
								{
									"begin": 4093,
									"end": 4119,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4093,
									"end": 4119,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4093,
									"end": 4119,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "11"
								},
								{
									"begin": 4093,
									"end": 4119,
									"name": "JUMP",
									"source": 13,
									"value": "[in]"
								},
								{
									"begin": 4093,
									"end": 4119,
									"name": "tag",
									"source": 13,
									"value": "10"
								},
								{
									"begin": 4093,
									"end": 4119,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4125,
									"end": 4145,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 4125,
									"end": 4145,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 4125,
									"end": 4145,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "12"
								},
								{
									"begin": 4125,
									"end": 4145,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4125,
									"end": 4133,
									"name": "PUSH",
									"source": 13,
									"value": "1B"
								},
								{
									"begin": 4125,
									"end": 4133,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4125,
									"end": 4145,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 4125,
									"end": 4145,
									"name": "DUP11",
									"source": 13
								},
								{
									"begin": 4125,
									"end": 4145,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4125,
									"end": 4145,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4125,
									"end": 4145,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "11"
								},
								{
									"begin": 4125,
									"end": 4145,
									"name": "JUMP",
									"source": 13,
									"value": "[in]"
								},
								{
									"begin": 4125,
									"end": 4145,
									"name": "tag",
									"source": 13,
									"value": "12"
								},
								{
									"begin": 4125,
									"end": 4145,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4194,
									"end": 4208,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 4194,
									"end": 4208,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 4175,
									"end": 4191,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 4175,
									"end": 4208,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 4194,
									"end": 4208,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 4239,
									"end": 4253,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 4239,
									"end": 4253,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4239,
									"end": 4253,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 4214,
									"end": 4236,
									"name": "PUSH",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 4214,
									"end": 4253,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 4278,
									"end": 4292,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 4278,
									"end": 4292,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 4278,
									"end": 4292,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4278,
									"end": 4292,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 4259,
									"end": 4275,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 4259,
									"end": 4292,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 4308,
									"end": 4322,
									"name": "PUSH",
									"source": 13,
									"value": "60"
								},
								{
									"begin": 4308,
									"end": 4322,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 4308,
									"end": 4322,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4308,
									"end": 4322,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 4298,
									"end": 4305,
									"name": "PUSH",
									"source": 13,
									"value": "5"
								},
								{
									"begin": 4298,
									"end": 4322,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4298,
									"end": 4322,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4298,
									"end": 4322,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 4340,
									"end": 4354,
									"name": "PUSH",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 4340,
									"end": 4354,
									"name": "DUP8",
									"source": 13
								},
								{
									"begin": 4340,
									"end": 4354,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4340,
									"end": 4354,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 4328,
									"end": 4337,
									"name": "PUSH",
									"source": 13,
									"value": "8"
								},
								{
									"begin": 4328,
									"end": 4354,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 4370,
									"end": 4384,
									"name": "PUSH",
									"source": 13,
									"value": "A0"
								},
								{
									"begin": 4370,
									"end": 4384,
									"name": "DUP8",
									"source": 13
								},
								{
									"begin": 4370,
									"end": 4384,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4370,
									"end": 4384,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 4360,
									"end": 4367,
									"name": "PUSH",
									"source": 13,
									"value": "9"
								},
								{
									"begin": 4360,
									"end": 4384,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 4406,
									"end": 4420,
									"name": "PUSH",
									"source": 13,
									"value": "C0"
								},
								{
									"begin": 4406,
									"end": 4420,
									"name": "DUP8",
									"source": 13
								},
								{
									"begin": 4406,
									"end": 4420,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4406,
									"end": 4420,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 4390,
									"end": 4403,
									"name": "PUSH",
									"source": 13,
									"value": "F"
								},
								{
									"begin": 4390,
									"end": 4420,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 4442,
									"end": 4456,
									"name": "PUSH",
									"source": 13,
									"value": "E0"
								},
								{
									"begin": 4442,
									"end": 4456,
									"name": "DUP8",
									"source": 13
								},
								{
									"begin": 4442,
									"end": 4456,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4442,
									"end": 4456,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 4426,
									"end": 4439,
									"name": "PUSH",
									"source": 13,
									"value": "10"
								},
								{
									"begin": 4426,
									"end": 4456,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4426,
									"end": 4456,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4426,
									"end": 4456,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 4462,
									"end": 4537,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "30"
								},
								{
									"begin": 4462,
									"end": 4537,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 4462,
									"end": 4537,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 4462,
									"end": 4537,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 4462,
									"end": 4537,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4462,
									"end": 4537,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 3208,
									"end": 3210,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 4462,
									"end": 4537,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 4462,
									"end": 4537,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4462,
									"end": 4537,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3190,
									"end": 3211,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 3247,
									"end": 3249,
									"name": "PUSH",
									"source": 14,
									"value": "27"
								},
								{
									"begin": 3227,
									"end": 3245,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 3227,
									"end": 3245,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 3227,
									"end": 3245,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 3220,
									"end": 3250,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 3286,
									"end": 3320,
									"name": "PUSH",
									"source": 14,
									"value": "6D696E2062757920706572207573657220697320686967686572207468616E20"
								},
								{
									"begin": 3266,
									"end": 3284,
									"name": "PUSH",
									"source": 14,
									"value": "44"
								},
								{
									"begin": 3266,
									"end": 3284,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 3266,
									"end": 3284,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 3259,
									"end": 3321,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "6861726463617"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "CC"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3337,
									"end": 3355,
									"name": "PUSH",
									"source": 14,
									"value": "64"
								},
								{
									"begin": 3337,
									"end": 3355,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 3337,
									"end": 3355,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 3330,
									"end": 3367,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 3384,
									"end": 3403,
									"name": "PUSH",
									"source": 14,
									"value": "84"
								},
								{
									"begin": 3384,
									"end": 3403,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 4462,
									"end": 4537,
									"name": "tag",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 4462,
									"end": 4537,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4462,
									"end": 4537,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 4462,
									"end": 4537,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 4462,
									"end": 4537,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 4462,
									"end": 4537,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4462,
									"end": 4537,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 4462,
									"end": 4537,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4462,
									"end": 4537,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 4462,
									"end": 4537,
									"name": "tag",
									"source": 13,
									"value": "30"
								},
								{
									"begin": 4462,
									"end": 4537,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4544,
									"end": 4550,
									"name": "PUSH",
									"source": 13,
									"value": "15"
								},
								{
									"begin": 4544,
									"end": 4581,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 4544,
									"end": 4581,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 4544,
									"end": 4581,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 4570,
									"end": 4580,
									"name": "CALLER",
									"source": 13
								},
								{
									"begin": 4544,
									"end": 4581,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4544,
									"end": 4581,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4544,
									"end": 4581,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 4544,
									"end": 4581,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4544,
									"end": 4581,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4544,
									"end": 4581,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 4595,
									"end": 4610,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 4595,
									"end": 4610,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 4595,
									"end": 4610,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "73DC1349"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 4595,
									"end": 4610,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4595,
									"end": 4610,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 4595,
									"end": 4610,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4595,
									"end": 4610,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 4595,
									"end": 4608,
									"name": "PUSH",
									"source": 13,
									"value": "73DC1349"
								},
								{
									"begin": 4595,
									"end": 4608,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4595,
									"end": 4610,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 4595,
									"end": 4610,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 4595,
									"end": 4610,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4595,
									"end": 4610,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4595,
									"end": 4610,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 4595,
									"end": 4610,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 4595,
									"end": 4610,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 4595,
									"end": 4610,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4595,
									"end": 4610,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4595,
									"end": 4610,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4595,
									"end": 4610,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4595,
									"end": 4610,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4595,
									"end": 4610,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 4595,
									"end": 4610,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4595,
									"end": 4610,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4570,
									"end": 4580,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 4595,
									"end": 4610,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 4595,
									"end": 4610,
									"name": "EXTCODESIZE",
									"source": 13
								},
								{
									"begin": 4595,
									"end": 4610,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 4595,
									"end": 4610,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 4595,
									"end": 4610,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 4595,
									"end": 4610,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "33"
								},
								{
									"begin": 4595,
									"end": 4610,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 4595,
									"end": 4610,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4595,
									"end": 4610,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 4595,
									"end": 4610,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 4595,
									"end": 4610,
									"name": "tag",
									"source": 13,
									"value": "33"
								},
								{
									"begin": 4595,
									"end": 4610,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4595,
									"end": 4610,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4595,
									"end": 4610,
									"name": "GAS",
									"source": 13
								},
								{
									"begin": 4595,
									"end": 4610,
									"name": "STATICCALL",
									"source": 13
								},
								{
									"begin": 4595,
									"end": 4610,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 4595,
									"end": 4610,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 4595,
									"end": 4610,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 4595,
									"end": 4610,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "35"
								},
								{
									"begin": 4595,
									"end": 4610,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 4595,
									"end": 4610,
									"name": "RETURNDATASIZE",
									"source": 13
								},
								{
									"begin": 4595,
									"end": 4610,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4595,
									"end": 4610,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 4595,
									"end": 4610,
									"name": "RETURNDATACOPY",
									"source": 13
								},
								{
									"begin": 4595,
									"end": 4610,
									"name": "RETURNDATASIZE",
									"source": 13
								},
								{
									"begin": 4595,
									"end": 4610,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4595,
									"end": 4610,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 4595,
									"end": 4610,
									"name": "tag",
									"source": 13,
									"value": "35"
								},
								{
									"begin": 4595,
									"end": 4610,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4595,
									"end": 4610,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4595,
									"end": 4610,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4595,
									"end": 4610,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4595,
									"end": 4610,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4595,
									"end": 4610,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 4595,
									"end": 4610,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 4595,
									"end": 4610,
									"name": "RETURNDATASIZE",
									"source": 13
								},
								{
									"begin": 4595,
									"end": 4610,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 4595,
									"end": 4610,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 4595,
									"end": 4610,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 4595,
									"end": 4610,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4595,
									"end": 4610,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4595,
									"end": 4610,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 4595,
									"end": 4610,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4595,
									"end": 4610,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4595,
									"end": 4610,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 4595,
									"end": 4610,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 4595,
									"end": 4610,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 4595,
									"end": 4610,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4595,
									"end": 4610,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4595,
									"end": 4610,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4595,
									"end": 4610,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4595,
									"end": 4610,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "36"
								},
								{
									"begin": 4595,
									"end": 4610,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4595,
									"end": 4610,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4595,
									"end": 4610,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "37"
								},
								{
									"begin": 4595,
									"end": 4610,
									"name": "JUMP",
									"source": 13,
									"value": "[in]"
								},
								{
									"begin": 4595,
									"end": 4610,
									"name": "tag",
									"source": 13,
									"value": "36"
								},
								{
									"begin": 4595,
									"end": 4610,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4587,
									"end": 4592,
									"name": "PUSH",
									"source": 13,
									"value": "7"
								},
								{
									"begin": 4587,
									"end": 4610,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 4713,
									"end": 4720,
									"name": "PUSH",
									"source": 13,
									"value": "5"
								},
								{
									"begin": 4713,
									"end": 4720,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 4676,
									"end": 4692,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 4676,
									"end": 4692,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 4697,
									"end": 4703,
									"name": "PUSH",
									"source": 13,
									"value": "2710"
								},
								{
									"begin": 4697,
									"end": 4703,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4667,
									"end": 4692,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "38"
								},
								{
									"begin": 4667,
									"end": 4692,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4697,
									"end": 4703,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4667,
									"end": 4692,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "39"
								},
								{
									"begin": 4667,
									"end": 4692,
									"name": "JUMP",
									"source": 13,
									"value": "[in]"
								},
								{
									"begin": 4667,
									"end": 4692,
									"name": "tag",
									"source": 13,
									"value": "38"
								},
								{
									"begin": 4667,
									"end": 4692,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4647,
									"end": 4663,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 4647,
									"end": 4663,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 4647,
									"end": 4693,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 4647,
									"end": 4693,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4647,
									"end": 4693,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4647,
									"end": 4693,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 4647,
									"end": 4693,
									"name": "JUMP",
									"source": 13,
									"value": "[in]"
								},
								{
									"begin": 4647,
									"end": 4693,
									"name": "tag",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 4647,
									"end": 4693,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4646,
									"end": 4703,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "42"
								},
								{
									"begin": 4646,
									"end": 4703,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4646,
									"end": 4703,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4646,
									"end": 4703,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "43"
								},
								{
									"begin": 4646,
									"end": 4703,
									"name": "JUMP",
									"source": 13,
									"value": "[in]"
								},
								{
									"begin": 4646,
									"end": 4703,
									"name": "tag",
									"source": 13,
									"value": "42"
								},
								{
									"begin": 4646,
									"end": 4703,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4645,
									"end": 4720,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "44"
								},
								{
									"begin": 4645,
									"end": 4720,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4645,
									"end": 4720,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4645,
									"end": 4720,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "43"
								},
								{
									"begin": 4645,
									"end": 4720,
									"name": "JUMP",
									"source": 13,
									"value": "[in]"
								},
								{
									"begin": 4645,
									"end": 4720,
									"name": "tag",
									"source": 13,
									"value": "44"
								},
								{
									"begin": 4645,
									"end": 4720,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4617,
									"end": 4636,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 4617,
									"end": 4720,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 4737,
									"end": 4744,
									"name": "PUSH",
									"source": 13,
									"value": "5"
								},
								{
									"begin": 4737,
									"end": 4744,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 4737,
									"end": 4748,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "45"
								},
								{
									"begin": 4737,
									"end": 4748,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4747,
									"end": 4748,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 4747,
									"end": 4748,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4737,
									"end": 4748,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "43"
								},
								{
									"begin": 4737,
									"end": 4748,
									"name": "JUMP",
									"source": 13,
									"value": "[in]"
								},
								{
									"begin": 4737,
									"end": 4748,
									"name": "tag",
									"source": 13,
									"value": "45"
								},
								{
									"begin": 4737,
									"end": 4748,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4727,
									"end": 4734,
									"name": "PUSH",
									"source": 13,
									"value": "6"
								},
								{
									"begin": 4727,
									"end": 4748,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 4800,
									"end": 4816,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 4800,
									"end": 4816,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 4781,
									"end": 4797,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 4781,
									"end": 4797,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 4820,
									"end": 4826,
									"name": "PUSH",
									"source": 13,
									"value": "2710"
								},
								{
									"begin": 4820,
									"end": 4826,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4781,
									"end": 4816,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "46"
								},
								{
									"begin": 4781,
									"end": 4816,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4781,
									"end": 4816,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 4781,
									"end": 4816,
									"name": "JUMP",
									"source": 13,
									"value": "[in]"
								},
								{
									"begin": 4781,
									"end": 4816,
									"name": "tag",
									"source": 13,
									"value": "46"
								},
								{
									"begin": 4781,
									"end": 4816,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4780,
									"end": 4826,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "47"
								},
								{
									"begin": 4780,
									"end": 4826,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4780,
									"end": 4826,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4780,
									"end": 4826,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "43"
								},
								{
									"begin": 4780,
									"end": 4826,
									"name": "JUMP",
									"source": 13,
									"value": "[in]"
								},
								{
									"begin": 4780,
									"end": 4826,
									"name": "tag",
									"source": 13,
									"value": "47"
								},
								{
									"begin": 4780,
									"end": 4826,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4754,
									"end": 4777,
									"name": "PUSH",
									"source": 13,
									"value": "12"
								},
								{
									"begin": 4754,
									"end": 4826,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4754,
									"end": 4826,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4754,
									"end": 4826,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 4853,
									"end": 4869,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 4853,
									"end": 4869,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 4853,
									"end": 4895,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "48"
								},
								{
									"begin": 4853,
									"end": 4895,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4754,
									"end": 4826,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4853,
									"end": 4895,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "39"
								},
								{
									"begin": 4853,
									"end": 4895,
									"name": "JUMP",
									"source": 13,
									"value": "[in]"
								},
								{
									"begin": 4853,
									"end": 4895,
									"name": "tag",
									"source": 13,
									"value": "48"
								},
								{
									"begin": 4853,
									"end": 4895,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4832,
									"end": 4850,
									"name": "PUSH",
									"source": 13,
									"value": "11"
								},
								{
									"begin": 4832,
									"end": 4895,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 5147,
									"end": 5152,
									"name": "PUSH",
									"source": 13,
									"value": "7"
								},
								{
									"begin": 5147,
									"end": 5152,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 5157,
									"end": 5163,
									"name": "PUSH",
									"source": 13,
									"value": "2710"
								},
								{
									"begin": 5157,
									"end": 5163,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5138,
									"end": 5152,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "49"
								},
								{
									"begin": 5138,
									"end": 5152,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5157,
									"end": 5163,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5138,
									"end": 5152,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "39"
								},
								{
									"begin": 5138,
									"end": 5152,
									"name": "JUMP",
									"source": 13,
									"value": "[in]"
								},
								{
									"begin": 5138,
									"end": 5152,
									"name": "tag",
									"source": 13,
									"value": "49"
								},
								{
									"begin": 5138,
									"end": 5152,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5127,
									"end": 5134,
									"name": "PUSH",
									"source": 13,
									"value": "5"
								},
								{
									"begin": 5127,
									"end": 5134,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 5127,
									"end": 5153,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "50"
								},
								{
									"begin": 5127,
									"end": 5153,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 5127,
									"end": 5153,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5127,
									"end": 5153,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 5127,
									"end": 5153,
									"name": "JUMP",
									"source": 13,
									"value": "[in]"
								},
								{
									"begin": 5127,
									"end": 5153,
									"name": "tag",
									"source": 13,
									"value": "50"
								},
								{
									"begin": 5127,
									"end": 5153,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5126,
									"end": 5163,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "51"
								},
								{
									"begin": 5126,
									"end": 5163,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 5126,
									"end": 5163,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5126,
									"end": 5163,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "43"
								},
								{
									"begin": 5126,
									"end": 5163,
									"name": "JUMP",
									"source": 13,
									"value": "[in]"
								},
								{
									"begin": 5126,
									"end": 5163,
									"name": "tag",
									"source": 13,
									"value": "51"
								},
								{
									"begin": 5126,
									"end": 5163,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5092,
									"end": 5114,
									"name": "PUSH",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 5092,
									"end": 5114,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 5066,
									"end": 5089,
									"name": "PUSH",
									"source": 13,
									"value": "12"
								},
								{
									"begin": 5066,
									"end": 5089,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 5066,
									"end": 5114,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "52"
								},
								{
									"begin": 5066,
									"end": 5114,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 5066,
									"end": 5114,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5066,
									"end": 5114,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "43"
								},
								{
									"begin": 5066,
									"end": 5114,
									"name": "JUMP",
									"source": 13,
									"value": "[in]"
								},
								{
									"begin": 5066,
									"end": 5114,
									"name": "tag",
									"source": 13,
									"value": "52"
								},
								{
									"begin": 5066,
									"end": 5114,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5066,
									"end": 5164,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 5051,
									"end": 5260,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "53"
								},
								{
									"begin": 5051,
									"end": 5260,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 5051,
									"end": 5260,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 5051,
									"end": 5260,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 5051,
									"end": 5260,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5051,
									"end": 5260,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 3616,
									"end": 3618,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 5051,
									"end": 5260,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 5051,
									"end": 5260,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5051,
									"end": 5260,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3598,
									"end": 3619,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 3655,
									"end": 3657,
									"name": "PUSH",
									"source": 14,
									"value": "50"
								},
								{
									"begin": 3635,
									"end": 3653,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 3635,
									"end": 3653,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 3635,
									"end": 3653,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 3628,
									"end": 3658,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 3694,
									"end": 3728,
									"name": "PUSH",
									"source": 14,
									"value": "6E6F7420656E6F7567682045544820666F72206C69717569646974792C20696E"
								},
								{
									"begin": 3674,
									"end": 3692,
									"name": "PUSH",
									"source": 14,
									"value": "44"
								},
								{
									"begin": 3674,
									"end": 3692,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 3674,
									"end": 3692,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 3667,
									"end": 3729,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 3765,
									"end": 3799,
									"name": "PUSH",
									"source": 14,
									"value": "637265617365206C697374696E67207072696365206F72206465637265617365"
								},
								{
									"begin": 3745,
									"end": 3763,
									"name": "PUSH",
									"source": 14,
									"value": "64"
								},
								{
									"begin": 3745,
									"end": 3763,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 3745,
									"end": 3763,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 3738,
									"end": 3800,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "206C6971756964697479207368617265"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "80"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3816,
									"end": 3835,
									"name": "PUSH",
									"source": 14,
									"value": "84"
								},
								{
									"begin": 3816,
									"end": 3835,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 3816,
									"end": 3835,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 3809,
									"end": 3856,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 3873,
									"end": 3892,
									"name": "PUSH",
									"source": 14,
									"value": "A4"
								},
								{
									"begin": 3873,
									"end": 3892,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 5051,
									"end": 5260,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 3414,
									"end": 3898,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5051,
									"end": 5260,
									"name": "tag",
									"source": 13,
									"value": "53"
								},
								{
									"begin": 5051,
									"end": 5260,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5267,
									"end": 5288,
									"name": "PUSH",
									"source": 13,
									"value": "C"
								},
								{
									"begin": 5267,
									"end": 5313,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 5267,
									"end": 5313,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5267,
									"end": 5313,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 5534,
									"end": 5550,
									"name": "PUSH",
									"source": 13,
									"value": "13"
								},
								{
									"begin": 5534,
									"end": 5570,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 5534,
									"end": 5570,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF0000"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 5534,
									"end": 5570,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 5534,
									"end": 5570,
									"name": "PUSH",
									"source": 13,
									"value": "10000"
								},
								{
									"begin": 5534,
									"end": 5570,
									"name": "DUP8",
									"source": 13
								},
								{
									"begin": 5534,
									"end": 5570,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 5534,
									"end": 5570,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 5534,
									"end": 5570,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 5534,
									"end": 5570,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 5534,
									"end": 5570,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5534,
									"end": 5570,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 5576,
									"end": 5587,
									"name": "PUSH",
									"source": 13,
									"value": "A"
								},
								{
									"begin": 5576,
									"end": 5602,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 5576,
									"end": 5602,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5576,
									"end": 5602,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 5630,
									"end": 5639,
									"name": "PUSH",
									"source": 13,
									"value": "8"
								},
								{
									"begin": 5630,
									"end": 5639,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 5616,
									"end": 5639,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 5616,
									"end": 5639,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 5608,
									"end": 5640,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "56"
								},
								{
									"begin": 5608,
									"end": 5640,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 5608,
									"end": 5640,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5608,
									"end": 5640,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 5608,
									"end": 5640,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 5608,
									"end": 5640,
									"name": "tag",
									"source": 13,
									"value": "56"
								},
								{
									"begin": 5608,
									"end": 5640,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5656,
									"end": 5662,
									"name": "PUSH",
									"source": 13,
									"value": "15"
								},
								{
									"begin": 5656,
									"end": 5662,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5656,
									"end": 5662,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5656,
									"end": 5662,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 5656,
									"end": 5662,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5656,
									"end": 5662,
									"name": "PUSH",
									"source": 13,
									"value": "100"
								},
								{
									"begin": 5656,
									"end": 5662,
									"name": "EXP",
									"source": 13
								},
								{
									"begin": 5656,
									"end": 5662,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5656,
									"end": 5662,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 5656,
									"end": 5662,
									"name": "AND",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 5656,
									"end": 5676,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 5656,
									"end": 5676,
									"name": "PUSH",
									"source": 13,
									"value": "2E849894"
								},
								{
									"begin": 5656,
									"end": 5678,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 5656,
									"end": 5678,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 5656,
									"end": 5678,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5656,
									"end": 5678,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFF"
								},
								{
									"begin": 5656,
									"end": 5678,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 5656,
									"end": 5678,
									"name": "PUSH",
									"source": 13,
									"value": "E0"
								},
								{
									"begin": 5656,
									"end": 5678,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 5656,
									"end": 5678,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5656,
									"end": 5678,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 5656,
									"end": 5678,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 5656,
									"end": 5678,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5656,
									"end": 5678,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 5656,
									"end": 5678,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 5656,
									"end": 5678,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 5656,
									"end": 5678,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 5656,
									"end": 5678,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 5656,
									"end": 5678,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 5656,
									"end": 5678,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5656,
									"end": 5678,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 5656,
									"end": 5678,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 5656,
									"end": 5678,
									"name": "EXTCODESIZE",
									"source": 13
								},
								{
									"begin": 5656,
									"end": 5678,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 5656,
									"end": 5678,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 5656,
									"end": 5678,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 5656,
									"end": 5678,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "57"
								},
								{
									"begin": 5656,
									"end": 5678,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 5656,
									"end": 5678,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5656,
									"end": 5678,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 5656,
									"end": 5678,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 5656,
									"end": 5678,
									"name": "tag",
									"source": 13,
									"value": "57"
								},
								{
									"begin": 5656,
									"end": 5678,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5656,
									"end": 5678,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5656,
									"end": 5678,
									"name": "GAS",
									"source": 13
								},
								{
									"begin": 5656,
									"end": 5678,
									"name": "STATICCALL",
									"source": 13
								},
								{
									"begin": 5656,
									"end": 5678,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 5656,
									"end": 5678,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 5656,
									"end": 5678,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 5656,
									"end": 5678,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "59"
								},
								{
									"begin": 5656,
									"end": 5678,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 5656,
									"end": 5678,
									"name": "RETURNDATASIZE",
									"source": 13
								},
								{
									"begin": 5656,
									"end": 5678,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5656,
									"end": 5678,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 5656,
									"end": 5678,
									"name": "RETURNDATACOPY",
									"source": 13
								},
								{
									"begin": 5656,
									"end": 5678,
									"name": "RETURNDATASIZE",
									"source": 13
								},
								{
									"begin": 5656,
									"end": 5678,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5656,
									"end": 5678,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 5656,
									"end": 5678,
									"name": "tag",
									"source": 13,
									"value": "59"
								},
								{
									"begin": 5656,
									"end": 5678,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5656,
									"end": 5678,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5656,
									"end": 5678,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5656,
									"end": 5678,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5656,
									"end": 5678,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5656,
									"end": 5678,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 5656,
									"end": 5678,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 5656,
									"end": 5678,
									"name": "RETURNDATASIZE",
									"source": 13
								},
								{
									"begin": 5656,
									"end": 5678,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 5656,
									"end": 5678,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 5656,
									"end": 5678,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 5656,
									"end": 5678,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5656,
									"end": 5678,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5656,
									"end": 5678,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 5656,
									"end": 5678,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5656,
									"end": 5678,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5656,
									"end": 5678,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 5656,
									"end": 5678,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 5656,
									"end": 5678,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 5656,
									"end": 5678,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5656,
									"end": 5678,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5656,
									"end": 5678,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5656,
									"end": 5678,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5656,
									"end": 5678,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "60"
								},
								{
									"begin": 5656,
									"end": 5678,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 5656,
									"end": 5678,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5656,
									"end": 5678,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "37"
								},
								{
									"begin": 5656,
									"end": 5678,
									"name": "JUMP",
									"source": 13,
									"value": "[in]"
								},
								{
									"begin": 5656,
									"end": 5678,
									"name": "tag",
									"source": 13,
									"value": "60"
								},
								{
									"begin": 5656,
									"end": 5678,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5647,
									"end": 5653,
									"name": "PUSH",
									"source": 13,
									"value": "19"
								},
								{
									"begin": 5647,
									"end": 5678,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 5689,
									"end": 5705,
									"name": "PUSH",
									"source": 13,
									"value": "13"
								},
								{
									"begin": 5689,
									"end": 5705,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 5689,
									"end": 5705,
									"name": "PUSH",
									"source": 13,
									"value": "10000"
								},
								{
									"begin": 5689,
									"end": 5705,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5689,
									"end": 5705,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 5689,
									"end": 5705,
									"name": "PUSH",
									"source": 13,
									"value": "FF"
								},
								{
									"begin": 5689,
									"end": 5705,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 5685,
									"end": 5758,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 5685,
									"end": 5758,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "61"
								},
								{
									"begin": 5685,
									"end": 5758,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 5724,
									"end": 5730,
									"name": "PUSH",
									"source": 13,
									"value": "15"
								},
								{
									"begin": 5724,
									"end": 5730,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 5744,
									"end": 5750,
									"name": "PUSH",
									"source": 13,
									"value": "19"
								},
								{
									"begin": 5744,
									"end": 5750,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 5724,
									"end": 5751,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 5724,
									"end": 5751,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "B1D2EF9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E4"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 5724,
									"end": 5751,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5724,
									"end": 5751,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 5724,
									"end": 5730,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5724,
									"end": 5730,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 5724,
									"end": 5730,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 5724,
									"end": 5730,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 5724,
									"end": 5743,
									"name": "PUSH",
									"source": 13,
									"value": "B1D2EF90"
								},
								{
									"begin": 5724,
									"end": 5743,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 5724,
									"end": 5751,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "62"
								},
								{
									"begin": 5724,
									"end": 5751,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 5724,
									"end": 5751,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 5724,
									"end": 5751,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 4037,
									"end": 4039,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 4022,
									"end": 4040,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 4022,
									"end": 4040,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3903,
									"end": 4080,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5724,
									"end": 5751,
									"name": "tag",
									"source": 13,
									"value": "62"
								},
								{
									"begin": 5724,
									"end": 5751,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5724,
									"end": 5751,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 5724,
									"end": 5751,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 5724,
									"end": 5751,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 5724,
									"end": 5751,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 5724,
									"end": 5751,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 5724,
									"end": 5751,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 5724,
									"end": 5751,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5724,
									"end": 5751,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 5724,
									"end": 5751,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 5724,
									"end": 5751,
									"name": "EXTCODESIZE",
									"source": 13
								},
								{
									"begin": 5724,
									"end": 5751,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 5724,
									"end": 5751,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 5724,
									"end": 5751,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 5724,
									"end": 5751,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "64"
								},
								{
									"begin": 5724,
									"end": 5751,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 5724,
									"end": 5751,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5724,
									"end": 5751,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 5724,
									"end": 5751,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 5724,
									"end": 5751,
									"name": "tag",
									"source": 13,
									"value": "64"
								},
								{
									"begin": 5724,
									"end": 5751,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5724,
									"end": 5751,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5724,
									"end": 5751,
									"name": "GAS",
									"source": 13
								},
								{
									"begin": 5724,
									"end": 5751,
									"name": "STATICCALL",
									"source": 13
								},
								{
									"begin": 5724,
									"end": 5751,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 5724,
									"end": 5751,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 5724,
									"end": 5751,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 5724,
									"end": 5751,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "66"
								},
								{
									"begin": 5724,
									"end": 5751,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 5724,
									"end": 5751,
									"name": "RETURNDATASIZE",
									"source": 13
								},
								{
									"begin": 5724,
									"end": 5751,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5724,
									"end": 5751,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 5724,
									"end": 5751,
									"name": "RETURNDATACOPY",
									"source": 13
								},
								{
									"begin": 5724,
									"end": 5751,
									"name": "RETURNDATASIZE",
									"source": 13
								},
								{
									"begin": 5724,
									"end": 5751,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5724,
									"end": 5751,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 5724,
									"end": 5751,
									"name": "tag",
									"source": 13,
									"value": "66"
								},
								{
									"begin": 5724,
									"end": 5751,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5724,
									"end": 5751,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5724,
									"end": 5751,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5724,
									"end": 5751,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5724,
									"end": 5751,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5724,
									"end": 5751,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 5724,
									"end": 5751,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 5724,
									"end": 5751,
									"name": "RETURNDATASIZE",
									"source": 13
								},
								{
									"begin": 5724,
									"end": 5751,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 5724,
									"end": 5751,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 5724,
									"end": 5751,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 5724,
									"end": 5751,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5724,
									"end": 5751,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5724,
									"end": 5751,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 5724,
									"end": 5751,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5724,
									"end": 5751,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5724,
									"end": 5751,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 5724,
									"end": 5751,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 5724,
									"end": 5751,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 5724,
									"end": 5751,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5724,
									"end": 5751,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5724,
									"end": 5751,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5724,
									"end": 5751,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5724,
									"end": 5751,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "67"
								},
								{
									"begin": 5724,
									"end": 5751,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 5724,
									"end": 5751,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5724,
									"end": 5751,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "68"
								},
								{
									"begin": 5724,
									"end": 5751,
									"name": "JUMP",
									"source": 13,
									"value": "[in]"
								},
								{
									"begin": 5724,
									"end": 5751,
									"name": "tag",
									"source": 13,
									"value": "67"
								},
								{
									"begin": 5724,
									"end": 5751,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5715,
									"end": 5721,
									"name": "PUSH",
									"source": 13,
									"value": "14"
								},
								{
									"begin": 5715,
									"end": 5751,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 5715,
									"end": 5751,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 5715,
									"end": 5751,
									"name": "AND",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 5715,
									"end": 5751,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 5715,
									"end": 5751,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5715,
									"end": 5751,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 5715,
									"end": 5751,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 5715,
									"end": 5751,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 5715,
									"end": 5751,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5715,
									"end": 5751,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 5715,
									"end": 5751,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 5715,
									"end": 5751,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5715,
									"end": 5751,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 5685,
									"end": 5758,
									"name": "tag",
									"source": 13,
									"value": "61"
								},
								{
									"begin": 5685,
									"end": 5758,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5784,
									"end": 5790,
									"name": "PUSH",
									"source": 13,
									"value": "15"
								},
								{
									"begin": 5784,
									"end": 5790,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5784,
									"end": 5790,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5784,
									"end": 5790,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 5784,
									"end": 5790,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5784,
									"end": 5790,
									"name": "PUSH",
									"source": 13,
									"value": "100"
								},
								{
									"begin": 5784,
									"end": 5790,
									"name": "EXP",
									"source": 13
								},
								{
									"begin": 5784,
									"end": 5790,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5784,
									"end": 5790,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 5784,
									"end": 5790,
									"name": "AND",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 5784,
									"end": 5801,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 5784,
									"end": 5801,
									"name": "PUSH",
									"source": 13,
									"value": "7E44D2CC"
								},
								{
									"begin": 5784,
									"end": 5803,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 5784,
									"end": 5803,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 5784,
									"end": 5803,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5784,
									"end": 5803,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFF"
								},
								{
									"begin": 5784,
									"end": 5803,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 5784,
									"end": 5803,
									"name": "PUSH",
									"source": 13,
									"value": "E0"
								},
								{
									"begin": 5784,
									"end": 5803,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 5784,
									"end": 5803,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5784,
									"end": 5803,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 5784,
									"end": 5803,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 5784,
									"end": 5803,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5784,
									"end": 5803,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 5784,
									"end": 5803,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 5784,
									"end": 5803,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 5784,
									"end": 5803,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 5784,
									"end": 5803,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 5784,
									"end": 5803,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 5784,
									"end": 5803,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5784,
									"end": 5803,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 5784,
									"end": 5803,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 5784,
									"end": 5803,
									"name": "EXTCODESIZE",
									"source": 13
								},
								{
									"begin": 5784,
									"end": 5803,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 5784,
									"end": 5803,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 5784,
									"end": 5803,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 5784,
									"end": 5803,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "69"
								},
								{
									"begin": 5784,
									"end": 5803,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 5784,
									"end": 5803,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5784,
									"end": 5803,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 5784,
									"end": 5803,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 5784,
									"end": 5803,
									"name": "tag",
									"source": 13,
									"value": "69"
								},
								{
									"begin": 5784,
									"end": 5803,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5784,
									"end": 5803,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5784,
									"end": 5803,
									"name": "GAS",
									"source": 13
								},
								{
									"begin": 5784,
									"end": 5803,
									"name": "STATICCALL",
									"source": 13
								},
								{
									"begin": 5784,
									"end": 5803,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 5784,
									"end": 5803,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 5784,
									"end": 5803,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 5784,
									"end": 5803,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "71"
								},
								{
									"begin": 5784,
									"end": 5803,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 5784,
									"end": 5803,
									"name": "RETURNDATASIZE",
									"source": 13
								},
								{
									"begin": 5784,
									"end": 5803,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5784,
									"end": 5803,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 5784,
									"end": 5803,
									"name": "RETURNDATACOPY",
									"source": 13
								},
								{
									"begin": 5784,
									"end": 5803,
									"name": "RETURNDATASIZE",
									"source": 13
								},
								{
									"begin": 5784,
									"end": 5803,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5784,
									"end": 5803,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 5784,
									"end": 5803,
									"name": "tag",
									"source": 13,
									"value": "71"
								},
								{
									"begin": 5784,
									"end": 5803,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5784,
									"end": 5803,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5784,
									"end": 5803,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5784,
									"end": 5803,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5784,
									"end": 5803,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5784,
									"end": 5803,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 5784,
									"end": 5803,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 5784,
									"end": 5803,
									"name": "RETURNDATASIZE",
									"source": 13
								},
								{
									"begin": 5784,
									"end": 5803,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 5784,
									"end": 5803,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 5784,
									"end": 5803,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 5784,
									"end": 5803,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5784,
									"end": 5803,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5784,
									"end": 5803,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 5784,
									"end": 5803,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5784,
									"end": 5803,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5784,
									"end": 5803,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 5784,
									"end": 5803,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 5784,
									"end": 5803,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 5784,
									"end": 5803,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5784,
									"end": 5803,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5784,
									"end": 5803,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5784,
									"end": 5803,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5784,
									"end": 5803,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "72"
								},
								{
									"begin": 5784,
									"end": 5803,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 5784,
									"end": 5803,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5784,
									"end": 5803,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "68"
								},
								{
									"begin": 5784,
									"end": 5803,
									"name": "JUMP",
									"source": 13,
									"value": "[in]"
								},
								{
									"begin": 5784,
									"end": 5803,
									"name": "tag",
									"source": 13,
									"value": "72"
								},
								{
									"begin": 5784,
									"end": 5803,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5764,
									"end": 5773,
									"name": "PUSH",
									"source": 13,
									"value": "1C"
								},
								{
									"begin": 5764,
									"end": 5804,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 5764,
									"end": 5804,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 5764,
									"end": 5804,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5764,
									"end": 5804,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5764,
									"end": 5804,
									"name": "AND",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 5764,
									"end": 5804,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 5764,
									"end": 5804,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 5764,
									"end": 5804,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 5764,
									"end": 5804,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 5764,
									"end": 5804,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5764,
									"end": 5804,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 5764,
									"end": 5804,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 5810,
									"end": 5823,
									"name": "PUSH",
									"source": 13,
									"value": "1D"
								},
								{
									"begin": 5810,
									"end": 5849,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 5810,
									"end": 5849,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 5810,
									"end": 5849,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5810,
									"end": 5849,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 5810,
									"end": 5849,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 5810,
									"end": 5849,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 5810,
									"end": 5849,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 5810,
									"end": 5849,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 5810,
									"end": 5849,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5810,
									"end": 5849,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 5810,
									"end": 5849,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 5810,
									"end": 5849,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5810,
									"end": 5849,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 5810,
									"end": 5849,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 5856,
									"end": 5862,
									"name": "PUSH",
									"source": 13,
									"value": "16"
								},
								{
									"begin": 5856,
									"end": 5892,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 5856,
									"end": 5892,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 5856,
									"end": 5892,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5856,
									"end": 5892,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 5856,
									"end": 5892,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 5856,
									"end": 5892,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 5856,
									"end": 5892,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 5856,
									"end": 5892,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 5856,
									"end": 5892,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5856,
									"end": 5892,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 5856,
									"end": 5892,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 5856,
									"end": 5892,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5856,
									"end": 5892,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "85"
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "SWAP6",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "tag",
									"source": 13,
									"value": "11"
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "74"
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "75"
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "JUMP",
									"source": 13,
									"value": "[in]"
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "tag",
									"source": 13,
									"value": "74"
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "KECCAK256",
									"source": 13
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "77"
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "tag",
									"source": 13,
									"value": "77"
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "78"
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "PUSH",
									"source": 13,
									"value": "FF"
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "tag",
									"source": 13,
									"value": "78"
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "tag",
									"source": 13,
									"value": "79"
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "79"
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "tag",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "81"
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "82"
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "JUMP",
									"source": 13,
									"value": "[in]"
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "tag",
									"source": 13,
									"value": "81"
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "JUMP",
									"source": 13,
									"value": "[out]"
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "tag",
									"source": 13,
									"value": "82"
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "tag",
									"source": 13,
									"value": "83"
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "81"
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "83"
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 14,
									"value": "86"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "88"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 14,
									"value": "88"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMP",
									"source": 14,
									"value": "[out]"
								},
								{
									"begin": 196,
									"end": 360,
									"name": "tag",
									"source": 14,
									"value": "89"
								},
								{
									"begin": 196,
									"end": 360,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 272,
									"end": 285,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 272,
									"end": 285,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 321,
									"end": 334,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 321,
									"end": 334,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 314,
									"end": 335,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 304,
									"end": 336,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 304,
									"end": 336,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 294,
									"end": 354,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "88"
								},
								{
									"begin": 294,
									"end": 354,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 350,
									"end": 351,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 347,
									"end": 348,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 340,
									"end": 352,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 365,
									"end": 1060,
									"name": "tag",
									"source": 14,
									"value": "92"
								},
								{
									"begin": 365,
									"end": 1060,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 419,
									"end": 424,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 472,
									"end": 475,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 465,
									"end": 469,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 457,
									"end": 463,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 453,
									"end": 470,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 449,
									"end": 476,
									"name": "SLT",
									"source": 14
								},
								{
									"begin": 439,
									"end": 494,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "94"
								},
								{
									"begin": 439,
									"end": 494,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 490,
									"end": 491,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 487,
									"end": 488,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 480,
									"end": 492,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 439,
									"end": 494,
									"name": "tag",
									"source": 14,
									"value": "94"
								},
								{
									"begin": 439,
									"end": 494,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 513,
									"end": 526,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 513,
									"end": 526,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 538,
									"end": 564,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 538,
									"end": 564,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 535,
									"end": 587,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 535,
									"end": 587,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "96"
								},
								{
									"begin": 535,
									"end": 587,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 567,
									"end": 585,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "96"
								},
								{
									"begin": 567,
									"end": 585,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "97"
								},
								{
									"begin": 567,
									"end": 585,
									"name": "JUMP",
									"source": 14,
									"value": "[in]"
								},
								{
									"begin": 567,
									"end": 585,
									"name": "tag",
									"source": 14,
									"value": "96"
								},
								{
									"begin": 567,
									"end": 585,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 606,
									"end": 610,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 634,
									"end": 687,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "98"
								},
								{
									"begin": 677,
									"end": 679,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 658,
									"end": 671,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 658,
									"end": 671,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 654,
									"end": 681,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 650,
									"end": 686,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 650,
									"end": 686,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 634,
									"end": 687,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "99"
								},
								{
									"begin": 634,
									"end": 687,
									"name": "JUMP",
									"source": 14,
									"value": "[in]"
								},
								{
									"begin": 634,
									"end": 687,
									"name": "tag",
									"source": 14,
									"value": "98"
								},
								{
									"begin": 634,
									"end": 687,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 712,
									"end": 714,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 703,
									"end": 710,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 696,
									"end": 715,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 756,
									"end": 759,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 751,
									"end": 753,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 746,
									"end": 748,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 738,
									"end": 744,
									"name": "DUP8",
									"source": 14
								},
								{
									"begin": 734,
									"end": 749,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 730,
									"end": 754,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 727,
									"end": 760,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 724,
									"end": 777,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 724,
									"end": 777,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "100"
								},
								{
									"begin": 724,
									"end": 777,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 773,
									"end": 774,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 770,
									"end": 771,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 763,
									"end": 775,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 724,
									"end": 777,
									"name": "tag",
									"source": 14,
									"value": "100"
								},
								{
									"begin": 724,
									"end": 777,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 795,
									"end": 796,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 805,
									"end": 939,
									"name": "tag",
									"source": 14,
									"value": "101"
								},
								{
									"begin": 805,
									"end": 939,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 819,
									"end": 821,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 816,
									"end": 817,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 813,
									"end": 822,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 805,
									"end": 939,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 805,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "103"
								},
								{
									"begin": 805,
									"end": 939,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 908,
									"end": 922,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 908,
									"end": 922,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 908,
									"end": 922,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 904,
									"end": 927,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 904,
									"end": 927,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 898,
									"end": 928,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 876,
									"end": 891,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 876,
									"end": 891,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 876,
									"end": 891,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 872,
									"end": 896,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 872,
									"end": 896,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 865,
									"end": 929,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 830,
									"end": 840,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 830,
									"end": 840,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 805,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "101"
								},
								{
									"begin": 805,
									"end": 939,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 805,
									"end": 939,
									"name": "tag",
									"source": 14,
									"value": "103"
								},
								{
									"begin": 805,
									"end": 939,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 957,
									"end": 959,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 954,
									"end": 955,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 951,
									"end": 960,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 948,
									"end": 1029,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 948,
									"end": 1029,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "104"
								},
								{
									"begin": 948,
									"end": 1029,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 1017,
									"end": 1018,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1012,
									"end": 1014,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 1007,
									"end": 1009,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 998,
									"end": 1005,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 994,
									"end": 1010,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 990,
									"end": 1015,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 983,
									"end": 1019,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 948,
									"end": 1029,
									"name": "tag",
									"source": 14,
									"value": "104"
								},
								{
									"begin": 948,
									"end": 1029,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1047,
									"end": 1054,
									"name": "SWAP6",
									"source": 14
								},
								{
									"begin": 365,
									"end": 1060,
									"name": "SWAP5",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 365,
									"end": 1060,
									"name": "JUMP",
									"source": 14,
									"value": "[out]"
								},
								{
									"begin": 1065,
									"end": 1273,
									"name": "tag",
									"source": 14,
									"value": "68"
								},
								{
									"begin": 1065,
									"end": 1273,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1135,
									"end": 1141,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1188,
									"end": 1190,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 1176,
									"end": 1185,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1167,
									"end": 1174,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 1163,
									"end": 1186,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 1159,
									"end": 1191,
									"name": "SLT",
									"source": 14
								},
								{
									"begin": 1156,
									"end": 1208,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 1156,
									"end": 1208,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "106"
								},
								{
									"begin": 1156,
									"end": 1208,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 1204,
									"end": 1205,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1201,
									"end": 1202,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1194,
									"end": 1206,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 1156,
									"end": 1208,
									"name": "tag",
									"source": 14,
									"value": "106"
								},
								{
									"begin": 1156,
									"end": 1208,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1227,
									"end": 1267,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "107"
								},
								{
									"begin": 1257,
									"end": 1266,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1227,
									"end": 1267,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "86"
								},
								{
									"begin": 1227,
									"end": 1267,
									"name": "JUMP",
									"source": 14,
									"value": "[in]"
								},
								{
									"begin": 1227,
									"end": 1267,
									"name": "tag",
									"source": 14,
									"value": "107"
								},
								{
									"begin": 1227,
									"end": 1267,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1217,
									"end": 1267,
									"name": "SWAP4",
									"source": 14
								},
								{
									"begin": 1065,
									"end": 1273,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1065,
									"end": 1273,
									"name": "JUMP",
									"source": 14,
									"value": "[out]"
								},
								{
									"begin": 1278,
									"end": 2812,
									"name": "tag",
									"source": 14,
									"value": "3"
								},
								{
									"begin": 1278,
									"end": 2812,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1460,
									"end": 1466,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1468,
									"end": 1474,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1476,
									"end": 1482,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1484,
									"end": 1490,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1492,
									"end": 1498,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1500,
									"end": 1506,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1508,
									"end": 1514,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1516,
									"end": 1522,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1524,
									"end": 1530,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1577,
									"end": 1580,
									"name": "PUSH",
									"source": 14,
									"value": "200"
								},
								{
									"begin": 1565,
									"end": 1574,
									"name": "DUP11",
									"source": 14
								},
								{
									"begin": 1556,
									"end": 1563,
									"name": "DUP13",
									"source": 14
								},
								{
									"begin": 1552,
									"end": 1575,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 1548,
									"end": 1581,
									"name": "SLT",
									"source": 14
								},
								{
									"begin": 1545,
									"end": 1598,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 1545,
									"end": 1598,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "109"
								},
								{
									"begin": 1545,
									"end": 1598,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 1594,
									"end": 1595,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1591,
									"end": 1592,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1584,
									"end": 1596,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 1545,
									"end": 1598,
									"name": "tag",
									"source": 14,
									"value": "109"
								},
								{
									"begin": 1545,
									"end": 1598,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1617,
									"end": 1657,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "110"
								},
								{
									"begin": 1647,
									"end": 1656,
									"name": "DUP11",
									"source": 14
								},
								{
									"begin": 1617,
									"end": 1657,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "86"
								},
								{
									"begin": 1617,
									"end": 1657,
									"name": "JUMP",
									"source": 14,
									"value": "[in]"
								},
								{
									"begin": 1617,
									"end": 1657,
									"name": "tag",
									"source": 14,
									"value": "110"
								},
								{
									"begin": 1617,
									"end": 1657,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1676,
									"end": 1678,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 1707,
									"end": 1725,
									"name": "DUP12",
									"source": 14
								},
								{
									"begin": 1707,
									"end": 1725,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1707,
									"end": 1725,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1701,
									"end": 1726,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 1607,
									"end": 1657,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1607,
									"end": 1657,
									"name": "SWAP11",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1676,
									"end": 1678,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1775,
									"end": 1789,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1775,
									"end": 1789,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1775,
									"end": 1789,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 1772,
									"end": 1806,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 1772,
									"end": 1806,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "111"
								},
								{
									"begin": 1772,
									"end": 1806,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 1802,
									"end": 1803,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1799,
									"end": 1800,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1792,
									"end": 1804,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 1772,
									"end": 1806,
									"name": "tag",
									"source": 14,
									"value": "111"
								},
								{
									"begin": 1772,
									"end": 1806,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1825,
									"end": 1886,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "112"
								},
								{
									"begin": 1878,
									"end": 1885,
									"name": "DUP15",
									"source": 14
								},
								{
									"begin": 1869,
									"end": 1875,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 1858,
									"end": 1867,
									"name": "DUP16",
									"source": 14
								},
								{
									"begin": 1854,
									"end": 1876,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1825,
									"end": 1886,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "92"
								},
								{
									"begin": 1825,
									"end": 1886,
									"name": "JUMP",
									"source": 14,
									"value": "[in]"
								},
								{
									"begin": 1825,
									"end": 1886,
									"name": "tag",
									"source": 14,
									"value": "112"
								},
								{
									"begin": 1825,
									"end": 1886,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1815,
									"end": 1886,
									"name": "SWAP11",
									"source": 14
								},
								{
									"begin": 1815,
									"end": 1886,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1932,
									"end": 1934,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 1921,
									"end": 1930,
									"name": "DUP14",
									"source": 14
								},
								{
									"begin": 1917,
									"end": 1935,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1911,
									"end": 1936,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 1895,
									"end": 1936,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1895,
									"end": 1936,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1961,
									"end": 1963,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1951,
									"end": 1959,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1948,
									"end": 1964,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 1945,
									"end": 1981,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 1945,
									"end": 1981,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "113"
								},
								{
									"begin": 1945,
									"end": 1981,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 1977,
									"end": 1978,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1974,
									"end": 1975,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1967,
									"end": 1979,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 1945,
									"end": 1981,
									"name": "tag",
									"source": 14,
									"value": "113"
								},
								{
									"begin": 1945,
									"end": 1981,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1945,
									"end": 1981,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2000,
									"end": 2063,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "114"
								},
								{
									"begin": 2055,
									"end": 2062,
									"name": "DUP14",
									"source": 14
								},
								{
									"begin": 2044,
									"end": 2052,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2033,
									"end": 2042,
									"name": "DUP15",
									"source": 14
								},
								{
									"begin": 2029,
									"end": 2053,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2000,
									"end": 2063,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "92"
								},
								{
									"begin": 2000,
									"end": 2063,
									"name": "JUMP",
									"source": 14,
									"value": "[in]"
								},
								{
									"begin": 2000,
									"end": 2063,
									"name": "tag",
									"source": 14,
									"value": "114"
								},
								{
									"begin": 2000,
									"end": 2063,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1990,
									"end": 2063,
									"name": "SWAP9",
									"source": 14
								},
								{
									"begin": 1990,
									"end": 2063,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1990,
									"end": 2063,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2107,
									"end": 2114,
									"name": "DUP12",
									"source": 14
								},
								{
									"begin": 2101,
									"end": 2104,
									"name": "PUSH",
									"source": 14,
									"value": "7F"
								},
								{
									"begin": 2090,
									"end": 2099,
									"name": "DUP13",
									"source": 14
								},
								{
									"begin": 2086,
									"end": 2105,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2082,
									"end": 2115,
									"name": "SLT",
									"source": 14
								},
								{
									"begin": 2072,
									"end": 2133,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "115"
								},
								{
									"begin": 2072,
									"end": 2133,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 2129,
									"end": 2130,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2126,
									"end": 2127,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 2119,
									"end": 2131,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 2072,
									"end": 2133,
									"name": "tag",
									"source": 14,
									"value": "115"
								},
								{
									"begin": 2072,
									"end": 2133,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2153,
									"end": 2174,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "116"
								},
								{
									"begin": 2153,
									"end": 2174,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "117"
								},
								{
									"begin": 2153,
									"end": 2174,
									"name": "JUMP",
									"source": 14,
									"value": "[in]"
								},
								{
									"begin": 2153,
									"end": 2174,
									"name": "tag",
									"source": 14,
									"value": "116"
								},
								{
									"begin": 2153,
									"end": 2174,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2196,
									"end": 2199,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 2234,
									"end": 2236,
									"name": "PUSH",
									"source": 14,
									"value": "60"
								},
								{
									"begin": 2223,
									"end": 2232,
									"name": "DUP14",
									"source": 14
								},
								{
									"begin": 2219,
									"end": 2237,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2271,
									"end": 2274,
									"name": "PUSH",
									"source": 14,
									"value": "160"
								},
								{
									"begin": 2260,
									"end": 2269,
									"name": "DUP15",
									"source": 14
								},
								{
									"begin": 2256,
									"end": 2275,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2294,
									"end": 2301,
									"name": "DUP16",
									"source": 14
								},
								{
									"begin": 2290,
									"end": 2292,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2287,
									"end": 2302,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 2284,
									"end": 2319,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 2284,
									"end": 2319,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "118"
								},
								{
									"begin": 2284,
									"end": 2319,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 2315,
									"end": 2316,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2312,
									"end": 2313,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 2305,
									"end": 2317,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 2284,
									"end": 2319,
									"name": "tag",
									"source": 14,
									"value": "118"
								},
								{
									"begin": 2284,
									"end": 2319,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2337,
									"end": 2338,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2347,
									"end": 2505,
									"name": "tag",
									"source": 14,
									"value": "119"
								},
								{
									"begin": 2347,
									"end": 2505,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2361,
									"end": 2365,
									"name": "PUSH",
									"source": 14,
									"value": "8"
								},
								{
									"begin": 2358,
									"end": 2359,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2355,
									"end": 2366,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 2347,
									"end": 2505,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 2347,
									"end": 2505,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "121"
								},
								{
									"begin": 2347,
									"end": 2505,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 2420,
									"end": 2430,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2420,
									"end": 2430,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 2408,
									"end": 2431,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 2408,
									"end": 2431,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 2451,
									"end": 2463,
									"name": "SWAP4",
									"source": 14
								},
								{
									"begin": 2451,
									"end": 2463,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 2451,
									"end": 2463,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2451,
									"end": 2463,
									"name": "SWAP4",
									"source": 14
								},
								{
									"begin": 2483,
									"end": 2495,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 2483,
									"end": 2495,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 2483,
									"end": 2495,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2483,
									"end": 2495,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 2381,
									"end": 2382,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 2374,
									"end": 2383,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2347,
									"end": 2505,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "119"
								},
								{
									"begin": 2347,
									"end": 2505,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2347,
									"end": 2505,
									"name": "tag",
									"source": 14,
									"value": "121"
								},
								{
									"begin": 2347,
									"end": 2505,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2351,
									"end": 2354,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2524,
									"end": 2529,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2514,
									"end": 2529,
									"name": "SWAP11",
									"source": 14
								},
								{
									"begin": 2514,
									"end": 2529,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2548,
									"end": 2578,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "122"
								},
								{
									"begin": 2575,
									"end": 2577,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2548,
									"end": 2578,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "89"
								},
								{
									"begin": 2548,
									"end": 2578,
									"name": "JUMP",
									"source": 14,
									"value": "[in]"
								},
								{
									"begin": 2548,
									"end": 2578,
									"name": "tag",
									"source": 14,
									"value": "122"
								},
								{
									"begin": 2548,
									"end": 2578,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2538,
									"end": 2578,
									"name": "SWAP10",
									"source": 14
								},
								{
									"begin": 2538,
									"end": 2578,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2538,
									"end": 2578,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2538,
									"end": 2578,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2538,
									"end": 2578,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2538,
									"end": 2578,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2538,
									"end": 2578,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2618,
									"end": 2621,
									"name": "PUSH",
									"source": 14,
									"value": "180"
								},
								{
									"begin": 2607,
									"end": 2616,
									"name": "DUP11",
									"source": 14
								},
								{
									"begin": 2603,
									"end": 2622,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2597,
									"end": 2623,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 2587,
									"end": 2623,
									"name": "SWAP4",
									"source": 14
								},
								{
									"begin": 2587,
									"end": 2623,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2663,
									"end": 2666,
									"name": "PUSH",
									"source": 14,
									"value": "1A0"
								},
								{
									"begin": 2652,
									"end": 2661,
									"name": "DUP11",
									"source": 14
								},
								{
									"begin": 2648,
									"end": 2667,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2642,
									"end": 2668,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 2632,
									"end": 2668,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 2632,
									"end": 2668,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2687,
									"end": 2737,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "123"
								},
								{
									"begin": 2732,
									"end": 2735,
									"name": "PUSH",
									"source": 14,
									"value": "1C0"
								},
								{
									"begin": 2721,
									"end": 2730,
									"name": "DUP12",
									"source": 14
								},
								{
									"begin": 2717,
									"end": 2736,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2687,
									"end": 2737,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "86"
								},
								{
									"begin": 2687,
									"end": 2737,
									"name": "JUMP",
									"source": 14,
									"value": "[in]"
								},
								{
									"begin": 2687,
									"end": 2737,
									"name": "tag",
									"source": 14,
									"value": "123"
								},
								{
									"begin": 2687,
									"end": 2737,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2677,
									"end": 2737,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 2677,
									"end": 2737,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2756,
									"end": 2806,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "124"
								},
								{
									"begin": 2801,
									"end": 2804,
									"name": "PUSH",
									"source": 14,
									"value": "1E0"
								},
								{
									"begin": 2790,
									"end": 2799,
									"name": "DUP12",
									"source": 14
								},
								{
									"begin": 2786,
									"end": 2805,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2756,
									"end": 2806,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "86"
								},
								{
									"begin": 2756,
									"end": 2806,
									"name": "JUMP",
									"source": 14,
									"value": "[in]"
								},
								{
									"begin": 2756,
									"end": 2806,
									"name": "tag",
									"source": 14,
									"value": "124"
								},
								{
									"begin": 2756,
									"end": 2806,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2746,
									"end": 2806,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2746,
									"end": 2806,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1278,
									"end": 2812,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 1278,
									"end": 2812,
									"name": "SWAP6",
									"source": 14
								},
								{
									"begin": 1278,
									"end": 2812,
									"name": "SWAP9",
									"source": 14
								},
								{
									"begin": 1278,
									"end": 2812,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1278,
									"end": 2812,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 1278,
									"end": 2812,
									"name": "SWAP6",
									"source": 14
								},
								{
									"begin": 1278,
									"end": 2812,
									"name": "SWAP9",
									"source": 14
								},
								{
									"begin": 1278,
									"end": 2812,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1278,
									"end": 2812,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 1278,
									"end": 2812,
									"name": "SWAP6",
									"source": 14
								},
								{
									"begin": 1278,
									"end": 2812,
									"name": "SWAP9",
									"source": 14
								},
								{
									"begin": 1278,
									"end": 2812,
									"name": "JUMP",
									"source": 14,
									"value": "[out]"
								},
								{
									"begin": 2817,
									"end": 3001,
									"name": "tag",
									"source": 14,
									"value": "37"
								},
								{
									"begin": 2817,
									"end": 3001,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2887,
									"end": 2893,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2940,
									"end": 2942,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 2928,
									"end": 2937,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2919,
									"end": 2926,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 2915,
									"end": 2938,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 2911,
									"end": 2943,
									"name": "SLT",
									"source": 14
								},
								{
									"begin": 2908,
									"end": 2960,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 2908,
									"end": 2960,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "126"
								},
								{
									"begin": 2908,
									"end": 2960,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 2956,
									"end": 2957,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2953,
									"end": 2954,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 2946,
									"end": 2958,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 2908,
									"end": 2960,
									"name": "tag",
									"source": 14,
									"value": "126"
								},
								{
									"begin": 2908,
									"end": 2960,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2979,
									"end": 2995,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 2979,
									"end": 2995,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 2817,
									"end": 3001,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2817,
									"end": 3001,
									"name": "JUMP",
									"source": 14,
									"value": "[out]"
								},
								{
									"begin": 4085,
									"end": 4336,
									"name": "tag",
									"source": 14,
									"value": "117"
								},
								{
									"begin": 4085,
									"end": 4336,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4156,
									"end": 4158,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 4150,
									"end": 4159,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 4198,
									"end": 4201,
									"name": "PUSH",
									"source": 14,
									"value": "100"
								},
								{
									"begin": 4186,
									"end": 4202,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 4186,
									"end": 4202,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4217,
									"end": 4251,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 4217,
									"end": 4251,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 4253,
									"end": 4275,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 4253,
									"end": 4275,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 4253,
									"end": 4275,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 4214,
									"end": 4276,
									"name": "OR",
									"source": 14
								},
								{
									"begin": 4211,
									"end": 4299,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 4211,
									"end": 4299,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "132"
								},
								{
									"begin": 4211,
									"end": 4299,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 4279,
									"end": 4297,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "132"
								},
								{
									"begin": 4279,
									"end": 4297,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "97"
								},
								{
									"begin": 4279,
									"end": 4297,
									"name": "JUMP",
									"source": 14,
									"value": "[in]"
								},
								{
									"begin": 4279,
									"end": 4297,
									"name": "tag",
									"source": 14,
									"value": "132"
								},
								{
									"begin": 4279,
									"end": 4297,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4315,
									"end": 4317,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 4308,
									"end": 4330,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 4085,
									"end": 4336,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 4085,
									"end": 4336,
									"name": "JUMP",
									"source": 14,
									"value": "[out]"
								},
								{
									"begin": 4341,
									"end": 4616,
									"name": "tag",
									"source": 14,
									"value": "99"
								},
								{
									"begin": 4341,
									"end": 4616,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4412,
									"end": 4414,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 4406,
									"end": 4415,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 4477,
									"end": 4479,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 4458,
									"end": 4471,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 4458,
									"end": 4471,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 4454,
									"end": 4481,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 4442,
									"end": 4482,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 4442,
									"end": 4482,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4497,
									"end": 4531,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 4497,
									"end": 4531,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 4533,
									"end": 4555,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 4533,
									"end": 4555,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 4533,
									"end": 4555,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 4494,
									"end": 4556,
									"name": "OR",
									"source": 14
								},
								{
									"begin": 4491,
									"end": 4579,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 4491,
									"end": 4579,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "135"
								},
								{
									"begin": 4491,
									"end": 4579,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 4559,
									"end": 4577,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "135"
								},
								{
									"begin": 4559,
									"end": 4577,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "97"
								},
								{
									"begin": 4559,
									"end": 4577,
									"name": "JUMP",
									"source": 14,
									"value": "[in]"
								},
								{
									"begin": 4559,
									"end": 4577,
									"name": "tag",
									"source": 14,
									"value": "135"
								},
								{
									"begin": 4559,
									"end": 4577,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4595,
									"end": 4597,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 4588,
									"end": 4610,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 4341,
									"end": 4616,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 4341,
									"end": 4616,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4341,
									"end": 4616,
									"name": "JUMP",
									"source": 14,
									"value": "[out]"
								},
								{
									"begin": 4621,
									"end": 4838,
									"name": "tag",
									"source": 14,
									"value": "43"
								},
								{
									"begin": 4621,
									"end": 4838,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4661,
									"end": 4662,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 4687,
									"end": 4688,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 4677,
									"end": 4809,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "137"
								},
								{
									"begin": 4677,
									"end": 4809,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 4731,
									"end": 4741,
									"name": "PUSH",
									"source": 14,
									"value": "4E487B71"
								},
								{
									"begin": 4726,
									"end": 4729,
									"name": "PUSH",
									"source": 14,
									"value": "E0"
								},
								{
									"begin": 4722,
									"end": 4742,
									"name": "SHL",
									"source": 14
								},
								{
									"begin": 4719,
									"end": 4720,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 4712,
									"end": 4743,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 4766,
									"end": 4770,
									"name": "PUSH",
									"source": 14,
									"value": "12"
								},
								{
									"begin": 4763,
									"end": 4764,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 4756,
									"end": 4771,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 4794,
									"end": 4798,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 4791,
									"end": 4792,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 4784,
									"end": 4799,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 4677,
									"end": 4809,
									"name": "tag",
									"source": 14,
									"value": "137"
								},
								{
									"begin": 4677,
									"end": 4809,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4823,
									"end": 4832,
									"name": "DIV",
									"source": 14
								},
								{
									"begin": 4823,
									"end": 4832,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 4621,
									"end": 4838,
									"name": "JUMP",
									"source": 14,
									"value": "[out]"
								},
								{
									"begin": 4843,
									"end": 5011,
									"name": "tag",
									"source": 14,
									"value": "41"
								},
								{
									"begin": 4843,
									"end": 5011,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4883,
									"end": 4890,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 4949,
									"end": 4950,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 4945,
									"end": 4946,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 4941,
									"end": 4947,
									"name": "NOT",
									"source": 14
								},
								{
									"begin": 4937,
									"end": 4951,
									"name": "DIV",
									"source": 14
								},
								{
									"begin": 4934,
									"end": 4935,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 4931,
									"end": 4952,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 4926,
									"end": 4927,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 4919,
									"end": 4928,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 4912,
									"end": 4929,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 4908,
									"end": 4953,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 4905,
									"end": 4976,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 4905,
									"end": 4976,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "140"
								},
								{
									"begin": 4905,
									"end": 4976,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 4956,
									"end": 4974,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "140"
								},
								{
									"begin": 4956,
									"end": 4974,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "141"
								},
								{
									"begin": 4956,
									"end": 4974,
									"name": "JUMP",
									"source": 14,
									"value": "[in]"
								},
								{
									"begin": 4956,
									"end": 4974,
									"name": "tag",
									"source": 14,
									"value": "140"
								},
								{
									"begin": 4956,
									"end": 4974,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4996,
									"end": 5005,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 4996,
									"end": 5005,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 4843,
									"end": 5011,
									"name": "JUMP",
									"source": 14,
									"value": "[out]"
								},
								{
									"begin": 5016,
									"end": 5141,
									"name": "tag",
									"source": 14,
									"value": "39"
								},
								{
									"begin": 5016,
									"end": 5141,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5056,
									"end": 5060,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 5084,
									"end": 5085,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 5081,
									"end": 5082,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 5078,
									"end": 5086,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 5075,
									"end": 5109,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 5075,
									"end": 5109,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "144"
								},
								{
									"begin": 5075,
									"end": 5109,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 5089,
									"end": 5107,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "144"
								},
								{
									"begin": 5089,
									"end": 5107,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "141"
								},
								{
									"begin": 5089,
									"end": 5107,
									"name": "JUMP",
									"source": 14,
									"value": "[in]"
								},
								{
									"begin": 5089,
									"end": 5107,
									"name": "tag",
									"source": 14,
									"value": "144"
								},
								{
									"begin": 5089,
									"end": 5107,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5126,
									"end": 5135,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 5126,
									"end": 5135,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 5016,
									"end": 5141,
									"name": "JUMP",
									"source": 14,
									"value": "[out]"
								},
								{
									"begin": 5146,
									"end": 5526,
									"name": "tag",
									"source": 14,
									"value": "75"
								},
								{
									"begin": 5146,
									"end": 5526,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5225,
									"end": 5226,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 5221,
									"end": 5233,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 5221,
									"end": 5233,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 5221,
									"end": 5233,
									"name": "SHR",
									"source": 14
								},
								{
									"begin": 5221,
									"end": 5233,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 5268,
									"end": 5280,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 5268,
									"end": 5280,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 5268,
									"end": 5280,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 5289,
									"end": 5350,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "146"
								},
								{
									"begin": 5289,
									"end": 5350,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 5343,
									"end": 5347,
									"name": "PUSH",
									"source": 14,
									"value": "7F"
								},
								{
									"begin": 5335,
									"end": 5341,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 5331,
									"end": 5348,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 5321,
									"end": 5348,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 5321,
									"end": 5348,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5289,
									"end": 5350,
									"name": "tag",
									"source": 14,
									"value": "146"
								},
								{
									"begin": 5289,
									"end": 5350,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5396,
									"end": 5398,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 5388,
									"end": 5394,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 5385,
									"end": 5399,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 5365,
									"end": 5383,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 5362,
									"end": 5400,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 5359,
									"end": 5520,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 5359,
									"end": 5520,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "147"
								},
								{
									"begin": 5359,
									"end": 5520,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 5442,
									"end": 5452,
									"name": "PUSH",
									"source": 14,
									"value": "4E487B71"
								},
								{
									"begin": 5437,
									"end": 5440,
									"name": "PUSH",
									"source": 14,
									"value": "E0"
								},
								{
									"begin": 5433,
									"end": 5453,
									"name": "SHL",
									"source": 14
								},
								{
									"begin": 5430,
									"end": 5431,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 5423,
									"end": 5454,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 5477,
									"end": 5481,
									"name": "PUSH",
									"source": 14,
									"value": "22"
								},
								{
									"begin": 5474,
									"end": 5475,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 5467,
									"end": 5482,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 5505,
									"end": 5509,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 5502,
									"end": 5503,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 5495,
									"end": 5510,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 5359,
									"end": 5520,
									"name": "tag",
									"source": 14,
									"value": "147"
								},
								{
									"begin": 5359,
									"end": 5520,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5359,
									"end": 5520,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5146,
									"end": 5526,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 5146,
									"end": 5526,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 5146,
									"end": 5526,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5146,
									"end": 5526,
									"name": "JUMP",
									"source": 14,
									"value": "[out]"
								},
								{
									"begin": 5531,
									"end": 5658,
									"name": "tag",
									"source": 14,
									"value": "141"
								},
								{
									"begin": 5531,
									"end": 5658,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5592,
									"end": 5602,
									"name": "PUSH",
									"source": 14,
									"value": "4E487B71"
								},
								{
									"begin": 5587,
									"end": 5590,
									"name": "PUSH",
									"source": 14,
									"value": "E0"
								},
								{
									"begin": 5583,
									"end": 5603,
									"name": "SHL",
									"source": 14
								},
								{
									"begin": 5580,
									"end": 5581,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 5573,
									"end": 5604,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 5623,
									"end": 5627,
									"name": "PUSH",
									"source": 14,
									"value": "11"
								},
								{
									"begin": 5620,
									"end": 5621,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 5613,
									"end": 5628,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 5647,
									"end": 5651,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 5644,
									"end": 5645,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 5637,
									"end": 5652,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 5795,
									"end": 5922,
									"name": "tag",
									"source": 14,
									"value": "97"
								},
								{
									"begin": 5795,
									"end": 5922,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5856,
									"end": 5866,
									"name": "PUSH",
									"source": 14,
									"value": "4E487B71"
								},
								{
									"begin": 5851,
									"end": 5854,
									"name": "PUSH",
									"source": 14,
									"value": "E0"
								},
								{
									"begin": 5847,
									"end": 5867,
									"name": "SHL",
									"source": 14
								},
								{
									"begin": 5844,
									"end": 5845,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 5837,
									"end": 5868,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 5887,
									"end": 5891,
									"name": "PUSH",
									"source": 14,
									"value": "41"
								},
								{
									"begin": 5884,
									"end": 5885,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 5877,
									"end": 5892,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 5911,
									"end": 5915,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 5908,
									"end": 5909,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 5901,
									"end": 5916,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 5795,
									"end": 5922,
									"name": "tag",
									"source": 14,
									"value": "85"
								},
								{
									"begin": 5795,
									"end": 5922,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 422,
									"end": 12433,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c0f319c2275355e0601f5672cdf63a5ce48b326a39a1742c9b57162189004c9664736f6c63430008070033",
									".code": [
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH",
											"source": 13,
											"value": "8F5D036B"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "50"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH",
											"source": 13,
											"value": "C7BF5166"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "51"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH",
											"source": 13,
											"value": "E49DCE66"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "52"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH",
											"source": 13,
											"value": "E49DCE66"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH",
											"source": 13,
											"value": "EA44C1BC"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH",
											"source": 13,
											"value": "EE97F7F3"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH",
											"source": 13,
											"value": "F887EA40"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH",
											"source": 13,
											"value": "F89BE593"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "48"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH",
											"source": 13,
											"value": "FC0C546A"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "tag",
											"source": 13,
											"value": "52"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH",
											"source": 13,
											"value": "C7BF5166"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH",
											"source": 13,
											"value": "C84C0387"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "39"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH",
											"source": 13,
											"value": "D132A8F4"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH",
											"source": 13,
											"value": "D4B9DE51"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH",
											"source": 13,
											"value": "DA2CBD50"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "42"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH",
											"source": 13,
											"value": "DE284B3A"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "tag",
											"source": 13,
											"value": "51"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH",
											"source": 13,
											"value": "A7BB5803"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "53"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH",
											"source": 13,
											"value": "A7BB5803"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH",
											"source": 13,
											"value": "ABA83150"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH",
											"source": 13,
											"value": "B071CBE6"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH",
											"source": 13,
											"value": "BCA1DA85"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH",
											"source": 13,
											"value": "BE9FEB30"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH",
											"source": 13,
											"value": "C45A0155"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "tag",
											"source": 13,
											"value": "53"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH",
											"source": 13,
											"value": "8F5D036B"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH",
											"source": 13,
											"value": "957F1474"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "27"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH",
											"source": 13,
											"value": "9B8906AE"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH",
											"source": 13,
											"value": "A0F7AB35"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH",
											"source": 13,
											"value": "A5F0DEA2"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH",
											"source": 13,
											"value": "A611DC37"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "tag",
											"source": 13,
											"value": "50"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH",
											"source": 13,
											"value": "51FB012D"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH",
											"source": 13,
											"value": "6B7F3DF3"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "55"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH",
											"source": 13,
											"value": "6B7F3DF3"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH",
											"source": 13,
											"value": "6EF2E4D3"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH",
											"source": 13,
											"value": "7284E416"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH",
											"source": 13,
											"value": "78E97925"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "23"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH",
											"source": 13,
											"value": "83B17FDD"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH",
											"source": 13,
											"value": "85BF4946"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "tag",
											"source": 13,
											"value": "55"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH",
											"source": 13,
											"value": "51FB012D"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH",
											"source": 13,
											"value": "58A687EC"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH",
											"source": 13,
											"value": "59663174"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH",
											"source": 13,
											"value": "5C975ABB"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH",
											"source": 13,
											"value": "64DB812E"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH",
											"source": 13,
											"value": "66D003AC"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "tag",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH",
											"source": 13,
											"value": "27A72C96"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "56"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH",
											"source": 13,
											"value": "27A72C96"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH",
											"source": 13,
											"value": "27C8F835"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH",
											"source": 13,
											"value": "3197CBB6"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH",
											"source": 13,
											"value": "3C876081"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH",
											"source": 13,
											"value": "48C54B9D"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH",
											"source": 13,
											"value": "4AE01D52"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "tag",
											"source": 13,
											"value": "56"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH",
											"source": 13,
											"value": "17F6FAE"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH",
											"source": 13,
											"value": "39CE157"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH",
											"source": 13,
											"value": "3BCF11D"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH",
											"source": 13,
											"value": "12E409C5"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH",
											"source": 13,
											"value": "201A3419"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH",
											"source": 13,
											"value": "238AC933"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "tag",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 422,
											"end": 12433,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 858,
											"end": 878,
											"name": "tag",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 858,
											"end": 878,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 858,
											"end": 878,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 858,
											"end": 878,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 858,
											"end": 878,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 858,
											"end": 878,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 858,
											"end": 878,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 858,
											"end": 878,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 858,
											"end": 878,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 858,
											"end": 878,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 858,
											"end": 878,
											"name": "tag",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 858,
											"end": 878,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 858,
											"end": 878,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 858,
											"end": 878,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 858,
											"end": 878,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 858,
											"end": 878,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 858,
											"end": 878,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 858,
											"end": 878,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 858,
											"end": 878,
											"name": "tag",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 858,
											"end": 878,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 858,
											"end": 878,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 858,
											"end": 878,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 15301,
											"end": 15326,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15301,
											"end": 15326,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15301,
											"end": 15326,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 15289,
											"end": 15291,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 15274,
											"end": 15292,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 858,
											"end": 878,
											"name": "tag",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 858,
											"end": 878,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 858,
											"end": 878,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 858,
											"end": 878,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 858,
											"end": 878,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 858,
											"end": 878,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 858,
											"end": 878,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 858,
											"end": 878,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 858,
											"end": 878,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 1653,
											"end": 1686,
											"name": "tag",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 1653,
											"end": 1686,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1653,
											"end": 1686,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 1653,
											"end": 1686,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1653,
											"end": 1686,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1653,
											"end": 1686,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 1653,
											"end": 1686,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1653,
											"end": 1686,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1653,
											"end": 1686,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1653,
											"end": 1686,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1653,
											"end": 1686,
											"name": "tag",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 1653,
											"end": 1686,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1653,
											"end": 1686,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1653,
											"end": 1686,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 1653,
											"end": 1686,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 1653,
											"end": 1686,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1653,
											"end": 1686,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1653,
											"end": 1686,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6402,
											"end": 6583,
											"name": "tag",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 6402,
											"end": 6583,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6402,
											"end": 6583,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 6402,
											"end": 6583,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6402,
											"end": 6583,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6402,
											"end": 6583,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "66"
										},
										{
											"begin": 6402,
											"end": 6583,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6402,
											"end": 6583,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6402,
											"end": 6583,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6402,
											"end": 6583,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6402,
											"end": 6583,
											"name": "tag",
											"source": 13,
											"value": "66"
										},
										{
											"begin": 6402,
											"end": 6583,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6402,
											"end": 6583,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6402,
											"end": 6583,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 6402,
											"end": 6583,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "68"
										},
										{
											"begin": 6402,
											"end": 6583,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 6402,
											"end": 6583,
											"name": "tag",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 6402,
											"end": 6583,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6402,
											"end": 6583,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 1585,
											"end": 1613,
											"name": "tag",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 1585,
											"end": 1613,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1585,
											"end": 1613,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 1585,
											"end": 1613,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1585,
											"end": 1613,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1585,
											"end": 1613,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "69"
										},
										{
											"begin": 1585,
											"end": 1613,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1585,
											"end": 1613,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1585,
											"end": 1613,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1585,
											"end": 1613,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1585,
											"end": 1613,
											"name": "tag",
											"source": 13,
											"value": "69"
										},
										{
											"begin": 1585,
											"end": 1613,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1585,
											"end": 1613,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1585,
											"end": 1613,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 1585,
											"end": 1613,
											"name": "PUSH",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 1585,
											"end": 1613,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1585,
											"end": 1613,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1585,
											"end": 1613,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11462,
											"end": 12431,
											"name": "tag",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 11462,
											"end": 12431,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11462,
											"end": 12431,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 11462,
											"end": 12431,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11462,
											"end": 12431,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 11462,
											"end": 12431,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 11462,
											"end": 12431,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11462,
											"end": 12431,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11462,
											"end": 12431,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11462,
											"end": 12431,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 11462,
											"end": 12431,
											"name": "tag",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 11462,
											"end": 12431,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11462,
											"end": 12431,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11462,
											"end": 12431,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 11462,
											"end": 12431,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "75"
										},
										{
											"begin": 11462,
											"end": 12431,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2097,
											"end": 2118,
											"name": "tag",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 2097,
											"end": 2118,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2097,
											"end": 2118,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 2097,
											"end": 2118,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2097,
											"end": 2118,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2097,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 2097,
											"end": 2118,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2097,
											"end": 2118,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2097,
											"end": 2118,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2097,
											"end": 2118,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2097,
											"end": 2118,
											"name": "tag",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 2097,
											"end": 2118,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2097,
											"end": 2118,
											"name": "PUSH",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 2097,
											"end": 2118,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2097,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 2097,
											"end": 2118,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2097,
											"end": 2118,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2097,
											"end": 2118,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2097,
											"end": 2118,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2097,
											"end": 2118,
											"name": "tag",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 2097,
											"end": 2118,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2097,
											"end": 2118,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2097,
											"end": 2118,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3708,
											"end": 3740,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3708,
											"end": 3740,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3708,
											"end": 3740,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3690,
											"end": 3741,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3690,
											"end": 3741,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3678,
											"end": 3680,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3663,
											"end": 3681,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2097,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 3544,
											"end": 3747,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1422,
											"end": 1453,
											"name": "tag",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 1422,
											"end": 1453,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1422,
											"end": 1453,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 1422,
											"end": 1453,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1422,
											"end": 1453,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1422,
											"end": 1453,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "81"
										},
										{
											"begin": 1422,
											"end": 1453,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1422,
											"end": 1453,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1422,
											"end": 1453,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1422,
											"end": 1453,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1422,
											"end": 1453,
											"name": "tag",
											"source": 13,
											"value": "81"
										},
										{
											"begin": 1422,
											"end": 1453,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1422,
											"end": 1453,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1422,
											"end": 1453,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 1422,
											"end": 1453,
											"name": "PUSH",
											"source": 13,
											"value": "E"
										},
										{
											"begin": 1422,
											"end": 1453,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1422,
											"end": 1453,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1422,
											"end": 1453,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2021,
											"end": 2092,
											"name": "tag",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 2021,
											"end": 2092,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2021,
											"end": 2092,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 2021,
											"end": 2092,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2021,
											"end": 2092,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2021,
											"end": 2092,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "85"
										},
										{
											"begin": 2021,
											"end": 2092,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2021,
											"end": 2092,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2092,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2021,
											"end": 2092,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2021,
											"end": 2092,
											"name": "tag",
											"source": 13,
											"value": "85"
										},
										{
											"begin": 2021,
											"end": 2092,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2021,
											"end": 2092,
											"name": "PUSH",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 2021,
											"end": 2092,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2021,
											"end": 2092,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 2021,
											"end": 2092,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2021,
											"end": 2092,
											"name": "PUSH",
											"source": 13,
											"value": "1000000"
										},
										{
											"begin": 2021,
											"end": 2092,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2021,
											"end": 2092,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2021,
											"end": 2092,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2021,
											"end": 2092,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2021,
											"end": 2092,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 990,
											"end": 1012,
											"name": "tag",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 990,
											"end": 1012,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 990,
											"end": 1012,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 990,
											"end": 1012,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 990,
											"end": 1012,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 990,
											"end": 1012,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "89"
										},
										{
											"begin": 990,
											"end": 1012,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 990,
											"end": 1012,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 990,
											"end": 1012,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 990,
											"end": 1012,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 990,
											"end": 1012,
											"name": "tag",
											"source": 13,
											"value": "89"
										},
										{
											"begin": 990,
											"end": 1012,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 990,
											"end": 1012,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 990,
											"end": 1012,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 990,
											"end": 1012,
											"name": "PUSH",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 990,
											"end": 1012,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 990,
											"end": 1012,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 990,
											"end": 1012,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3207,
											"end": 3261,
											"name": "tag",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 3207,
											"end": 3261,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3207,
											"end": 3261,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 3207,
											"end": 3261,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3207,
											"end": 3261,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3207,
											"end": 3261,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "93"
										},
										{
											"begin": 3207,
											"end": 3261,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3207,
											"end": 3261,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3207,
											"end": 3261,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3207,
											"end": 3261,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3207,
											"end": 3261,
											"name": "tag",
											"source": 13,
											"value": "93"
										},
										{
											"begin": 3207,
											"end": 3261,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3207,
											"end": 3261,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 3207,
											"end": 3261,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "95"
										},
										{
											"begin": 3207,
											"end": 3261,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 3207,
											"end": 3261,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3207,
											"end": 3261,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "96"
										},
										{
											"begin": 3207,
											"end": 3261,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3207,
											"end": 3261,
											"name": "tag",
											"source": 13,
											"value": "95"
										},
										{
											"begin": 3207,
											"end": 3261,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3207,
											"end": 3261,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3207,
											"end": 3261,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3207,
											"end": 3261,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3207,
											"end": 3261,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3207,
											"end": 3261,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3207,
											"end": 3261,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3207,
											"end": 3261,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3207,
											"end": 3261,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3207,
											"end": 3261,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3207,
											"end": 3261,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3207,
											"end": 3261,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3207,
											"end": 3261,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3207,
											"end": 3261,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3207,
											"end": 3261,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9800,
											"end": 10285,
											"name": "tag",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 9800,
											"end": 10285,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9800,
											"end": 10285,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 9800,
											"end": 10285,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9800,
											"end": 10285,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9800,
											"end": 10285,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "99"
										},
										{
											"begin": 9800,
											"end": 10285,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9800,
											"end": 10285,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9800,
											"end": 10285,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9800,
											"end": 10285,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 9800,
											"end": 10285,
											"name": "tag",
											"source": 13,
											"value": "99"
										},
										{
											"begin": 9800,
											"end": 10285,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9800,
											"end": 10285,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9800,
											"end": 10285,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 9800,
											"end": 10285,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "101"
										},
										{
											"begin": 9800,
											"end": 10285,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1227,
											"end": 1263,
											"name": "tag",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 1227,
											"end": 1263,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1227,
											"end": 1263,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 1227,
											"end": 1263,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1227,
											"end": 1263,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1227,
											"end": 1263,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "102"
										},
										{
											"begin": 1227,
											"end": 1263,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1227,
											"end": 1263,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1227,
											"end": 1263,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1227,
											"end": 1263,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1227,
											"end": 1263,
											"name": "tag",
											"source": 13,
											"value": "102"
										},
										{
											"begin": 1227,
											"end": 1263,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1227,
											"end": 1263,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1227,
											"end": 1263,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 1227,
											"end": 1263,
											"name": "PUSH",
											"source": 13,
											"value": "C"
										},
										{
											"begin": 1227,
											"end": 1263,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1227,
											"end": 1263,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1227,
											"end": 1263,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1961,
											"end": 1989,
											"name": "tag",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 1961,
											"end": 1989,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1961,
											"end": 1989,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 1961,
											"end": 1989,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1961,
											"end": 1989,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1961,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "106"
										},
										{
											"begin": 1961,
											"end": 1989,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1961,
											"end": 1989,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1961,
											"end": 1989,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1961,
											"end": 1989,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1961,
											"end": 1989,
											"name": "tag",
											"source": 13,
											"value": "106"
										},
										{
											"begin": 1961,
											"end": 1989,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1961,
											"end": 1989,
											"name": "PUSH",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 1961,
											"end": 1989,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1961,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "107"
										},
										{
											"begin": 1961,
											"end": 1989,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1961,
											"end": 1989,
											"name": "PUSH",
											"source": 13,
											"value": "10000"
										},
										{
											"begin": 1961,
											"end": 1989,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1961,
											"end": 1989,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 1961,
											"end": 1989,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 1961,
											"end": 1989,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1961,
											"end": 1989,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1961,
											"end": 1989,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1961,
											"end": 1989,
											"name": "tag",
											"source": 13,
											"value": "107"
										},
										{
											"begin": 1961,
											"end": 1989,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1961,
											"end": 1989,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1961,
											"end": 1989,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5382,
											"end": 5396,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5382,
											"end": 5396,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5375,
											"end": 5397,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5357,
											"end": 5398,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5357,
											"end": 5398,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5345,
											"end": 5347,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5330,
											"end": 5348,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1961,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 5217,
											"end": 5404,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6617,
											"end": 6920,
											"name": "tag",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 6617,
											"end": 6920,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6617,
											"end": 6920,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 6617,
											"end": 6920,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6617,
											"end": 6920,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6617,
											"end": 6920,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "111"
										},
										{
											"begin": 6617,
											"end": 6920,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6617,
											"end": 6920,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6617,
											"end": 6920,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6617,
											"end": 6920,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6617,
											"end": 6920,
											"name": "tag",
											"source": 13,
											"value": "111"
										},
										{
											"begin": 6617,
											"end": 6920,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6617,
											"end": 6920,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6617,
											"end": 6920,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 6617,
											"end": 6920,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "113"
										},
										{
											"begin": 6617,
											"end": 6920,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 7821,
											"end": 8826,
											"name": "tag",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 7821,
											"end": 8826,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7821,
											"end": 8826,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 7821,
											"end": 8826,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "115"
										},
										{
											"begin": 7821,
											"end": 8826,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 7821,
											"end": 8826,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 7821,
											"end": 8826,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "116"
										},
										{
											"begin": 7821,
											"end": 8826,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 7821,
											"end": 8826,
											"name": "tag",
											"source": 13,
											"value": "115"
										},
										{
											"begin": 7821,
											"end": 8826,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7821,
											"end": 8826,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "117"
										},
										{
											"begin": 7821,
											"end": 8826,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3107,
											"end": 3130,
											"name": "tag",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 3107,
											"end": 3130,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3107,
											"end": 3130,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 3107,
											"end": 3130,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3107,
											"end": 3130,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3107,
											"end": 3130,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "122"
										},
										{
											"begin": 3107,
											"end": 3130,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3107,
											"end": 3130,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3107,
											"end": 3130,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3107,
											"end": 3130,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3107,
											"end": 3130,
											"name": "tag",
											"source": 13,
											"value": "122"
										},
										{
											"begin": 3107,
											"end": 3130,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3107,
											"end": 3130,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 3107,
											"end": 3130,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3107,
											"end": 3130,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "107"
										},
										{
											"begin": 3107,
											"end": 3130,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3107,
											"end": 3130,
											"name": "PUSH",
											"source": 13,
											"value": "10000"
										},
										{
											"begin": 3107,
											"end": 3130,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3107,
											"end": 3130,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 3107,
											"end": 3130,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 3107,
											"end": 3130,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3107,
											"end": 3130,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3107,
											"end": 3130,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2766,
											"end": 2798,
											"name": "tag",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 2766,
											"end": 2798,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2766,
											"end": 2798,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 2766,
											"end": 2798,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2766,
											"end": 2798,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2766,
											"end": 2798,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "126"
										},
										{
											"begin": 2766,
											"end": 2798,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2766,
											"end": 2798,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2766,
											"end": 2798,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2766,
											"end": 2798,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2766,
											"end": 2798,
											"name": "tag",
											"source": 13,
											"value": "126"
										},
										{
											"begin": 2766,
											"end": 2798,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2766,
											"end": 2798,
											"name": "PUSH",
											"source": 13,
											"value": "1C"
										},
										{
											"begin": 2766,
											"end": 2798,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2766,
											"end": 2798,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 2766,
											"end": 2798,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2766,
											"end": 2798,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2766,
											"end": 2798,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2766,
											"end": 2798,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3314,
											"end": 3362,
											"name": "tag",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3314,
											"end": 3362,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3314,
											"end": 3362,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 3314,
											"end": 3362,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3314,
											"end": 3362,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3314,
											"end": 3362,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "131"
										},
										{
											"begin": 3314,
											"end": 3362,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3314,
											"end": 3362,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3314,
											"end": 3362,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3314,
											"end": 3362,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3314,
											"end": 3362,
											"name": "tag",
											"source": 13,
											"value": "131"
										},
										{
											"begin": 3314,
											"end": 3362,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3314,
											"end": 3362,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 3314,
											"end": 3362,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "133"
										},
										{
											"begin": 3314,
											"end": 3362,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 3314,
											"end": 3362,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3314,
											"end": 3362,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "96"
										},
										{
											"begin": 3314,
											"end": 3362,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3314,
											"end": 3362,
											"name": "tag",
											"source": 13,
											"value": "133"
										},
										{
											"begin": 3314,
											"end": 3362,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3314,
											"end": 3362,
											"name": "PUSH",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 3314,
											"end": 3362,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3314,
											"end": 3362,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3314,
											"end": 3362,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3314,
											"end": 3362,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3314,
											"end": 3362,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3314,
											"end": 3362,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3314,
											"end": 3362,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3314,
											"end": 3362,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3314,
											"end": 3362,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3314,
											"end": 3362,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3314,
											"end": 3362,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3314,
											"end": 3362,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1731,
											"end": 1769,
											"name": "tag",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 1731,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1731,
											"end": 1769,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 1731,
											"end": 1769,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1731,
											"end": 1769,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1731,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "136"
										},
										{
											"begin": 1731,
											"end": 1769,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1731,
											"end": 1769,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1731,
											"end": 1769,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1731,
											"end": 1769,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1731,
											"end": 1769,
											"name": "tag",
											"source": 13,
											"value": "136"
										},
										{
											"begin": 1731,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1731,
											"end": 1769,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1731,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 1731,
											"end": 1769,
											"name": "PUSH",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 1731,
											"end": 1769,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1731,
											"end": 1769,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1731,
											"end": 1769,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "tag",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "tag",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "142"
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "tag",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "144"
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 917,
											"end": 941,
											"name": "tag",
											"source": 13,
											"value": "23"
										},
										{
											"begin": 917,
											"end": 941,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 917,
											"end": 941,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 917,
											"end": 941,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 917,
											"end": 941,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 917,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "145"
										},
										{
											"begin": 917,
											"end": 941,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 917,
											"end": 941,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 917,
											"end": 941,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 917,
											"end": 941,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 917,
											"end": 941,
											"name": "tag",
											"source": 13,
											"value": "145"
										},
										{
											"begin": 917,
											"end": 941,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 917,
											"end": 941,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 917,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 917,
											"end": 941,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 917,
											"end": 941,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 917,
											"end": 941,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 917,
											"end": 941,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 491,
											"end": 522,
											"name": "tag",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 491,
											"end": 522,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 491,
											"end": 522,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 491,
											"end": 522,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 491,
											"end": 522,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 491,
											"end": 522,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "149"
										},
										{
											"begin": 491,
											"end": 522,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 491,
											"end": 522,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 491,
											"end": 522,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 491,
											"end": 522,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 491,
											"end": 522,
											"name": "tag",
											"source": 13,
											"value": "149"
										},
										{
											"begin": 491,
											"end": 522,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 491,
											"end": 522,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 491,
											"end": 522,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 491,
											"end": 522,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 491,
											"end": 522,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 491,
											"end": 522,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 491,
											"end": 522,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1891,
											"end": 1918,
											"name": "tag",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 1891,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1891,
											"end": 1918,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 1891,
											"end": 1918,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1891,
											"end": 1918,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1891,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "153"
										},
										{
											"begin": 1891,
											"end": 1918,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1891,
											"end": 1918,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1891,
											"end": 1918,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1891,
											"end": 1918,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1891,
											"end": 1918,
											"name": "tag",
											"source": 13,
											"value": "153"
										},
										{
											"begin": 1891,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1891,
											"end": 1918,
											"name": "PUSH",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 1891,
											"end": 1918,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1891,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "107"
										},
										{
											"begin": 1891,
											"end": 1918,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1891,
											"end": 1918,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1891,
											"end": 1918,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1891,
											"end": 1918,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 1891,
											"end": 1918,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 1891,
											"end": 1918,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1891,
											"end": 1918,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1891,
											"end": 1918,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10397,
											"end": 10981,
											"name": "tag",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 10397,
											"end": 10981,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10397,
											"end": 10981,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 10397,
											"end": 10981,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10397,
											"end": 10981,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 10397,
											"end": 10981,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "157"
										},
										{
											"begin": 10397,
											"end": 10981,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10397,
											"end": 10981,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10397,
											"end": 10981,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10397,
											"end": 10981,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 10397,
											"end": 10981,
											"name": "tag",
											"source": 13,
											"value": "157"
										},
										{
											"begin": 10397,
											"end": 10981,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10397,
											"end": 10981,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10397,
											"end": 10981,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 10397,
											"end": 10981,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "159"
										},
										{
											"begin": 10397,
											"end": 10981,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 6924,
											"end": 7817,
											"name": "tag",
											"source": 13,
											"value": "27"
										},
										{
											"begin": 6924,
											"end": 7817,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6924,
											"end": 7817,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 6924,
											"end": 7817,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "161"
										},
										{
											"begin": 6924,
											"end": 7817,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3025,
											"end": 3046,
											"name": "tag",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 3025,
											"end": 3046,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3025,
											"end": 3046,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 3025,
											"end": 3046,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3025,
											"end": 3046,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3025,
											"end": 3046,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "162"
										},
										{
											"begin": 3025,
											"end": 3046,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3025,
											"end": 3046,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3025,
											"end": 3046,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3025,
											"end": 3046,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3025,
											"end": 3046,
											"name": "tag",
											"source": 13,
											"value": "162"
										},
										{
											"begin": 3025,
											"end": 3046,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3025,
											"end": 3046,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 3025,
											"end": 3046,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3025,
											"end": 3046,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "107"
										},
										{
											"begin": 3025,
											"end": 3046,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3025,
											"end": 3046,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 3025,
											"end": 3046,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3025,
											"end": 3046,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 3025,
											"end": 3046,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 3025,
											"end": 3046,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3025,
											"end": 3046,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3025,
											"end": 3046,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 576,
											"end": 613,
											"name": "tag",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 576,
											"end": 613,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 576,
											"end": 613,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 576,
											"end": 613,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 576,
											"end": 613,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 576,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "166"
										},
										{
											"begin": 576,
											"end": 613,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 576,
											"end": 613,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 576,
											"end": 613,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 576,
											"end": 613,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 576,
											"end": 613,
											"name": "tag",
											"source": 13,
											"value": "166"
										},
										{
											"begin": 576,
											"end": 613,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 576,
											"end": 613,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 576,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 576,
											"end": 613,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 576,
											"end": 613,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 576,
											"end": 613,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 576,
											"end": 613,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2963,
											"end": 2988,
											"name": "tag",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 2963,
											"end": 2988,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2963,
											"end": 2988,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 2963,
											"end": 2988,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2963,
											"end": 2988,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2963,
											"end": 2988,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "170"
										},
										{
											"begin": 2963,
											"end": 2988,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2963,
											"end": 2988,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2963,
											"end": 2988,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2963,
											"end": 2988,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2963,
											"end": 2988,
											"name": "tag",
											"source": 13,
											"value": "170"
										},
										{
											"begin": 2963,
											"end": 2988,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2963,
											"end": 2988,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2963,
											"end": 2988,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2963,
											"end": 2988,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "107"
										},
										{
											"begin": 2963,
											"end": 2988,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2963,
											"end": 2988,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 2963,
											"end": 2988,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2963,
											"end": 2988,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2963,
											"end": 2988,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 664,
											"end": 695,
											"name": "tag",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 664,
											"end": 695,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 664,
											"end": 695,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 664,
											"end": 695,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 664,
											"end": 695,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 664,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "174"
										},
										{
											"begin": 664,
											"end": 695,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 664,
											"end": 695,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 664,
											"end": 695,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 664,
											"end": 695,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 664,
											"end": 695,
											"name": "tag",
											"source": 13,
											"value": "174"
										},
										{
											"begin": 664,
											"end": 695,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 664,
											"end": 695,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 664,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 664,
											"end": 695,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 664,
											"end": 695,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 664,
											"end": 695,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 664,
											"end": 695,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9315,
											"end": 9796,
											"name": "tag",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 9315,
											"end": 9796,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9315,
											"end": 9796,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 9315,
											"end": 9796,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9315,
											"end": 9796,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9315,
											"end": 9796,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "178"
										},
										{
											"begin": 9315,
											"end": 9796,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9315,
											"end": 9796,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9315,
											"end": 9796,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9315,
											"end": 9796,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 9315,
											"end": 9796,
											"name": "tag",
											"source": 13,
											"value": "178"
										},
										{
											"begin": 9315,
											"end": 9796,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9315,
											"end": 9796,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "179"
										},
										{
											"begin": 9315,
											"end": 9796,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 9315,
											"end": 9796,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 9315,
											"end": 9796,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 9315,
											"end": 9796,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "116"
										},
										{
											"begin": 9315,
											"end": 9796,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 9315,
											"end": 9796,
											"name": "tag",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 9315,
											"end": 9796,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9315,
											"end": 9796,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "181"
										},
										{
											"begin": 9315,
											"end": 9796,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 9315,
											"end": 9796,
											"name": "tag",
											"source": 13,
											"value": "179"
										},
										{
											"begin": 9315,
											"end": 9796,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9315,
											"end": 9796,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 9315,
											"end": 9796,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9315,
											"end": 9796,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 15565,
											"end": 15569,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 15553,
											"end": 15570,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15553,
											"end": 15570,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 15553,
											"end": 15570,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 15535,
											"end": 15571,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 15535,
											"end": 15571,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 15602,
											"end": 15604,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 15587,
											"end": 15605,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 15587,
											"end": 15605,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15580,
											"end": 15614,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 15580,
											"end": 15614,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15580,
											"end": 15614,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 15580,
											"end": 15614,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 15630,
											"end": 15648,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15630,
											"end": 15648,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15630,
											"end": 15648,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15623,
											"end": 15657,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 15523,
											"end": 15525,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 15508,
											"end": 15526,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9315,
											"end": 9796,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 15337,
											"end": 15663,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2708,
											"end": 2730,
											"name": "tag",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 2708,
											"end": 2730,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2708,
											"end": 2730,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 2708,
											"end": 2730,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2708,
											"end": 2730,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2708,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "184"
										},
										{
											"begin": 2708,
											"end": 2730,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2708,
											"end": 2730,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2730,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2708,
											"end": 2730,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2708,
											"end": 2730,
											"name": "tag",
											"source": 13,
											"value": "184"
										},
										{
											"begin": 2708,
											"end": 2730,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2708,
											"end": 2730,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2708,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 2708,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "186"
										},
										{
											"begin": 2708,
											"end": 2730,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 758,
											"end": 780,
											"name": "tag",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 758,
											"end": 780,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 758,
											"end": 780,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 758,
											"end": 780,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 758,
											"end": 780,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 758,
											"end": 780,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "188"
										},
										{
											"begin": 758,
											"end": 780,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 758,
											"end": 780,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 758,
											"end": 780,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 758,
											"end": 780,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 758,
											"end": 780,
											"name": "tag",
											"source": 13,
											"value": "188"
										},
										{
											"begin": 758,
											"end": 780,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 758,
											"end": 780,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 780,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 758,
											"end": 780,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 758,
											"end": 780,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 758,
											"end": 780,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 758,
											"end": 780,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2824,
											"end": 2860,
											"name": "tag",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 2824,
											"end": 2860,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2824,
											"end": 2860,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 2824,
											"end": 2860,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2824,
											"end": 2860,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2824,
											"end": 2860,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 2824,
											"end": 2860,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2824,
											"end": 2860,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2824,
											"end": 2860,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2824,
											"end": 2860,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2824,
											"end": 2860,
											"name": "tag",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 2824,
											"end": 2860,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2824,
											"end": 2860,
											"name": "PUSH",
											"source": 13,
											"value": "1D"
										},
										{
											"begin": 2824,
											"end": 2860,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2824,
											"end": 2860,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 2824,
											"end": 2860,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2824,
											"end": 2860,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2824,
											"end": 2860,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2824,
											"end": 2860,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1059,
											"end": 1085,
											"name": "tag",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 1059,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1059,
											"end": 1085,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 1059,
											"end": 1085,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1059,
											"end": 1085,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1059,
											"end": 1085,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "196"
										},
										{
											"begin": 1059,
											"end": 1085,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1059,
											"end": 1085,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1059,
											"end": 1085,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1059,
											"end": 1085,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1059,
											"end": 1085,
											"name": "tag",
											"source": 13,
											"value": "196"
										},
										{
											"begin": 1059,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1059,
											"end": 1085,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1059,
											"end": 1085,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 1059,
											"end": 1085,
											"name": "PUSH",
											"source": 13,
											"value": "A"
										},
										{
											"begin": 1059,
											"end": 1085,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1059,
											"end": 1085,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1059,
											"end": 1085,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2429,
											"end": 2461,
											"name": "tag",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 2429,
											"end": 2461,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2429,
											"end": 2461,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 2429,
											"end": 2461,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2429,
											"end": 2461,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2429,
											"end": 2461,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "200"
										},
										{
											"begin": 2429,
											"end": 2461,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2429,
											"end": 2461,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2429,
											"end": 2461,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2429,
											"end": 2461,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2429,
											"end": 2461,
											"name": "tag",
											"source": 13,
											"value": "200"
										},
										{
											"begin": 2429,
											"end": 2461,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2429,
											"end": 2461,
											"name": "PUSH",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 2429,
											"end": 2461,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2429,
											"end": 2461,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 2429,
											"end": 2461,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2429,
											"end": 2461,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2429,
											"end": 2461,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2429,
											"end": 2461,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1144,
											"end": 1178,
											"name": "tag",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 1144,
											"end": 1178,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1144,
											"end": 1178,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 1144,
											"end": 1178,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1144,
											"end": 1178,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1144,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "205"
										},
										{
											"begin": 1144,
											"end": 1178,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1144,
											"end": 1178,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1144,
											"end": 1178,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1144,
											"end": 1178,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1144,
											"end": 1178,
											"name": "tag",
											"source": 13,
											"value": "205"
										},
										{
											"begin": 1144,
											"end": 1178,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1144,
											"end": 1178,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1144,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 1144,
											"end": 1178,
											"name": "PUSH",
											"source": 13,
											"value": "B"
										},
										{
											"begin": 1144,
											"end": 1178,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1144,
											"end": 1178,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1144,
											"end": 1178,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2589,
											"end": 2610,
											"name": "tag",
											"source": 13,
											"value": "39"
										},
										{
											"begin": 2589,
											"end": 2610,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2589,
											"end": 2610,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 2589,
											"end": 2610,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2589,
											"end": 2610,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2589,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "209"
										},
										{
											"begin": 2589,
											"end": 2610,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2589,
											"end": 2610,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2589,
											"end": 2610,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2589,
											"end": 2610,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2589,
											"end": 2610,
											"name": "tag",
											"source": 13,
											"value": "209"
										},
										{
											"begin": 2589,
											"end": 2610,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2589,
											"end": 2610,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2589,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 2589,
											"end": 2610,
											"name": "PUSH",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 2589,
											"end": 2610,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2589,
											"end": 2610,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2589,
											"end": 2610,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6127,
											"end": 6236,
											"name": "tag",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6127,
											"end": 6236,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6127,
											"end": 6236,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 6127,
											"end": 6236,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6127,
											"end": 6236,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6127,
											"end": 6236,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "213"
										},
										{
											"begin": 6127,
											"end": 6236,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6127,
											"end": 6236,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6127,
											"end": 6236,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6127,
											"end": 6236,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6127,
											"end": 6236,
											"name": "tag",
											"source": 13,
											"value": "213"
										},
										{
											"begin": 6127,
											"end": 6236,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6127,
											"end": 6236,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6127,
											"end": 6236,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 6127,
											"end": 6236,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "215"
										},
										{
											"begin": 6127,
											"end": 6236,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1820,
											"end": 1847,
											"name": "tag",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 1820,
											"end": 1847,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1820,
											"end": 1847,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 1820,
											"end": 1847,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1820,
											"end": 1847,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1820,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "217"
										},
										{
											"begin": 1820,
											"end": 1847,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1820,
											"end": 1847,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1820,
											"end": 1847,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1820,
											"end": 1847,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1820,
											"end": 1847,
											"name": "tag",
											"source": 13,
											"value": "217"
										},
										{
											"begin": 1820,
											"end": 1847,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1820,
											"end": 1847,
											"name": "PUSH",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 1820,
											"end": 1847,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1820,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "107"
										},
										{
											"begin": 1820,
											"end": 1847,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1820,
											"end": 1847,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 1820,
											"end": 1847,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1820,
											"end": 1847,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1820,
											"end": 1847,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2893,
											"end": 2919,
											"name": "tag",
											"source": 13,
											"value": "42"
										},
										{
											"begin": 2893,
											"end": 2919,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2893,
											"end": 2919,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 2893,
											"end": 2919,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2893,
											"end": 2919,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2893,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "221"
										},
										{
											"begin": 2893,
											"end": 2919,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2893,
											"end": 2919,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2893,
											"end": 2919,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2893,
											"end": 2919,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2893,
											"end": 2919,
											"name": "tag",
											"source": 13,
											"value": "221"
										},
										{
											"begin": 2893,
											"end": 2919,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2893,
											"end": 2919,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2893,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 2893,
											"end": 2919,
											"name": "PUSH",
											"source": 13,
											"value": "1E"
										},
										{
											"begin": 2893,
											"end": 2919,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2893,
											"end": 2919,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2893,
											"end": 2919,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1517,
											"end": 1545,
											"name": "tag",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 1517,
											"end": 1545,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1517,
											"end": 1545,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 1517,
											"end": 1545,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1517,
											"end": 1545,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1517,
											"end": 1545,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "225"
										},
										{
											"begin": 1517,
											"end": 1545,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1517,
											"end": 1545,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1517,
											"end": 1545,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1517,
											"end": 1545,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1517,
											"end": 1545,
											"name": "tag",
											"source": 13,
											"value": "225"
										},
										{
											"begin": 1517,
											"end": 1545,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1517,
											"end": 1545,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1517,
											"end": 1545,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 1517,
											"end": 1545,
											"name": "PUSH",
											"source": 13,
											"value": "F"
										},
										{
											"begin": 1517,
											"end": 1545,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1517,
											"end": 1545,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1517,
											"end": 1545,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8830,
											"end": 9311,
											"name": "tag",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 8830,
											"end": 9311,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8830,
											"end": 9311,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 8830,
											"end": 9311,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8830,
											"end": 9311,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8830,
											"end": 9311,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "229"
										},
										{
											"begin": 8830,
											"end": 9311,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8830,
											"end": 9311,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8830,
											"end": 9311,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8830,
											"end": 9311,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 8830,
											"end": 9311,
											"name": "tag",
											"source": 13,
											"value": "229"
										},
										{
											"begin": 8830,
											"end": 9311,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8830,
											"end": 9311,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "107"
										},
										{
											"begin": 8830,
											"end": 9311,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "231"
										},
										{
											"begin": 8830,
											"end": 9311,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 8830,
											"end": 9311,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 8830,
											"end": 9311,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "232"
										},
										{
											"begin": 8830,
											"end": 9311,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 8830,
											"end": 9311,
											"name": "tag",
											"source": 13,
											"value": "231"
										},
										{
											"begin": 8830,
											"end": 9311,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8830,
											"end": 9311,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "233"
										},
										{
											"begin": 8830,
											"end": 9311,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1328,
											"end": 1359,
											"name": "tag",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 1328,
											"end": 1359,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1328,
											"end": 1359,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 1328,
											"end": 1359,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1328,
											"end": 1359,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1328,
											"end": 1359,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "235"
										},
										{
											"begin": 1328,
											"end": 1359,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1328,
											"end": 1359,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1328,
											"end": 1359,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1328,
											"end": 1359,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1328,
											"end": 1359,
											"name": "tag",
											"source": 13,
											"value": "235"
										},
										{
											"begin": 1328,
											"end": 1359,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1328,
											"end": 1359,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1328,
											"end": 1359,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 1328,
											"end": 1359,
											"name": "PUSH",
											"source": 13,
											"value": "D"
										},
										{
											"begin": 1328,
											"end": 1359,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1328,
											"end": 1359,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1328,
											"end": 1359,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2172,
											"end": 2202,
											"name": "tag",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 2172,
											"end": 2202,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2172,
											"end": 2202,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 2172,
											"end": 2202,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2172,
											"end": 2202,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2172,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "239"
										},
										{
											"begin": 2172,
											"end": 2202,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2172,
											"end": 2202,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2172,
											"end": 2202,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2172,
											"end": 2202,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2172,
											"end": 2202,
											"name": "tag",
											"source": 13,
											"value": "239"
										},
										{
											"begin": 2172,
											"end": 2202,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2172,
											"end": 2202,
											"name": "PUSH",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 2172,
											"end": 2202,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2172,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 2172,
											"end": 2202,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2172,
											"end": 2202,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2172,
											"end": 2202,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2172,
											"end": 2202,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2346,
											"end": 2378,
											"name": "tag",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 2346,
											"end": 2378,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2346,
											"end": 2378,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 2346,
											"end": 2378,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2346,
											"end": 2378,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2346,
											"end": 2378,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 2346,
											"end": 2378,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2346,
											"end": 2378,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2346,
											"end": 2378,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2346,
											"end": 2378,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2346,
											"end": 2378,
											"name": "tag",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 2346,
											"end": 2378,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2346,
											"end": 2378,
											"name": "PUSH",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 2346,
											"end": 2378,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2346,
											"end": 2378,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 2346,
											"end": 2378,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2346,
											"end": 2378,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2346,
											"end": 2378,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2346,
											"end": 2378,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 808,
											"end": 830,
											"name": "tag",
											"source": 13,
											"value": "48"
										},
										{
											"begin": 808,
											"end": 830,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 808,
											"end": 830,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 808,
											"end": 830,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 808,
											"end": 830,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 808,
											"end": 830,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "249"
										},
										{
											"begin": 808,
											"end": 830,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 808,
											"end": 830,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 808,
											"end": 830,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 808,
											"end": 830,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 808,
											"end": 830,
											"name": "tag",
											"source": 13,
											"value": "249"
										},
										{
											"begin": 808,
											"end": 830,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 808,
											"end": 830,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 808,
											"end": 830,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 808,
											"end": 830,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 808,
											"end": 830,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 808,
											"end": 830,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 808,
											"end": 830,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2525,
											"end": 2544,
											"name": "tag",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 2525,
											"end": 2544,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2525,
											"end": 2544,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 2525,
											"end": 2544,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2525,
											"end": 2544,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2525,
											"end": 2544,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "253"
										},
										{
											"begin": 2525,
											"end": 2544,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2525,
											"end": 2544,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2544,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2525,
											"end": 2544,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2525,
											"end": 2544,
											"name": "tag",
											"source": 13,
											"value": "253"
										},
										{
											"begin": 2525,
											"end": 2544,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2525,
											"end": 2544,
											"name": "PUSH",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 2525,
											"end": 2544,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2525,
											"end": 2544,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 2525,
											"end": 2544,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2525,
											"end": 2544,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2525,
											"end": 2544,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2525,
											"end": 2544,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6402,
											"end": 6583,
											"name": "tag",
											"source": 13,
											"value": "68"
										},
										{
											"begin": 6402,
											"end": 6583,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6052,
											"end": 6065,
											"name": "PUSH",
											"source": 13,
											"value": "1D"
										},
										{
											"begin": 6052,
											"end": 6065,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6052,
											"end": 6065,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6069,
											"end": 6079,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 6052,
											"end": 6079,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 6044,
											"end": 6111,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 6044,
											"end": 6111,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6044,
											"end": 6111,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6044,
											"end": 6111,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6044,
											"end": 6111,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6044,
											"end": 6111,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6044,
											"end": 6111,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 6044,
											"end": 6111,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6044,
											"end": 6111,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 6044,
											"end": 6111,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6044,
											"end": 6111,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "261"
										},
										{
											"begin": 6044,
											"end": 6111,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 6044,
											"end": 6111,
											"name": "tag",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 6044,
											"end": 6111,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6044,
											"end": 6111,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6044,
											"end": 6111,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6044,
											"end": 6111,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6044,
											"end": 6111,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6044,
											"end": 6111,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6044,
											"end": 6111,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6044,
											"end": 6111,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6044,
											"end": 6111,
											"name": "tag",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 6044,
											"end": 6111,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6461,
											"end": 6470,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 6461,
											"end": 6470,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 6461,
											"end": 6470,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 6461,
											"end": 6470,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6461,
											"end": 6470,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 6461,
											"end": 6470,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 6461,
											"end": 6470,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6460,
											"end": 6470,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6452,
											"end": 6503,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 6452,
											"end": 6503,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6452,
											"end": 6503,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6452,
											"end": 6503,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6452,
											"end": 6503,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6452,
											"end": 6503,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12706,
											"end": 12708,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6452,
											"end": 6503,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 6452,
											"end": 6503,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6452,
											"end": 6503,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12688,
											"end": 12709,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12745,
											"end": 12747,
											"name": "PUSH",
											"source": 14,
											"value": "1C"
										},
										{
											"begin": 12725,
											"end": 12743,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 12725,
											"end": 12743,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12725,
											"end": 12743,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12718,
											"end": 12748,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12784,
											"end": 12814,
											"name": "PUSH",
											"source": 14,
											"value": "636C61696D696E672068617320616C7265616479207374617274656400000000"
										},
										{
											"begin": 12764,
											"end": 12782,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 12764,
											"end": 12782,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12764,
											"end": 12782,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12757,
											"end": 12815,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12832,
											"end": 12850,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 12832,
											"end": 12850,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6452,
											"end": 6503,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 12504,
											"end": 12856,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6452,
											"end": 6503,
											"name": "tag",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 6452,
											"end": 6503,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6518,
											"end": 6529,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 6518,
											"end": 6529,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 6518,
											"end": 6529,
											"name": "PUSH",
											"source": 13,
											"value": "10000"
										},
										{
											"begin": 6518,
											"end": 6529,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6518,
											"end": 6529,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 6518,
											"end": 6529,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 6518,
											"end": 6529,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6517,
											"end": 6529,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6509,
											"end": 6554,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 6509,
											"end": 6554,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6509,
											"end": 6554,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6509,
											"end": 6554,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6509,
											"end": 6554,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6509,
											"end": 6554,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7900,
											"end": 7902,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6509,
											"end": 6554,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 6509,
											"end": 6554,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6509,
											"end": 6554,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7882,
											"end": 7903,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7939,
											"end": 7941,
											"name": "PUSH",
											"source": 14,
											"value": "14"
										},
										{
											"begin": 7919,
											"end": 7937,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 7919,
											"end": 7937,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7919,
											"end": 7937,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7912,
											"end": 7942,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1CD85B1948185B1C9958591E4818589BDC9D1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7958,
											"end": 7976,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 7958,
											"end": 7976,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7958,
											"end": 7976,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7951,
											"end": 8001,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8018,
											"end": 8036,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 8018,
											"end": 8036,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6509,
											"end": 6554,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 7698,
											"end": 8042,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6509,
											"end": 6554,
											"name": "tag",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 6509,
											"end": 6554,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6560,
											"end": 6571,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 6560,
											"end": 6578,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6560,
											"end": 6578,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF0000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6560,
											"end": 6578,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6560,
											"end": 6578,
											"name": "PUSH",
											"source": 13,
											"value": "10000"
										},
										{
											"begin": 6560,
											"end": 6578,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 6560,
											"end": 6578,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6560,
											"end": 6578,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 6402,
											"end": 6583,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 11462,
											"end": 12431,
											"name": "tag",
											"source": 13,
											"value": "75"
										},
										{
											"begin": 11462,
											"end": 12431,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6052,
											"end": 6065,
											"name": "PUSH",
											"source": 13,
											"value": "1D"
										},
										{
											"begin": 6052,
											"end": 6065,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6052,
											"end": 6065,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6069,
											"end": 6079,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 6052,
											"end": 6079,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 6044,
											"end": 6111,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "270"
										},
										{
											"begin": 6044,
											"end": 6111,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6044,
											"end": 6111,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6044,
											"end": 6111,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6044,
											"end": 6111,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6044,
											"end": 6111,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6044,
											"end": 6111,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 6044,
											"end": 6111,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6044,
											"end": 6111,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 6044,
											"end": 6111,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6044,
											"end": 6111,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "261"
										},
										{
											"begin": 6044,
											"end": 6111,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 6044,
											"end": 6111,
											"name": "tag",
											"source": 13,
											"value": "270"
										},
										{
											"begin": 6044,
											"end": 6111,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 11542,
											"end": 11553,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 11542,
											"end": 11553,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 11542,
											"end": 11553,
											"name": "PUSH",
											"source": 13,
											"value": "10000"
										},
										{
											"begin": 11542,
											"end": 11553,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11542,
											"end": 11553,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 11542,
											"end": 11553,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 11542,
											"end": 11553,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 11541,
											"end": 11553,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 11533,
											"end": 11574,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "277"
										},
										{
											"begin": 11533,
											"end": 11574,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11533,
											"end": 11574,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 11533,
											"end": 11574,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11533,
											"end": 11574,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11533,
											"end": 11574,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11533,
											"end": 11574,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 11533,
											"end": 11574,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11533,
											"end": 11574,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 11533,
											"end": 11574,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11533,
											"end": 11574,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "279"
										},
										{
											"begin": 11533,
											"end": 11574,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 11533,
											"end": 11574,
											"name": "tag",
											"source": 13,
											"value": "277"
										},
										{
											"begin": 11533,
											"end": 11574,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11588,
											"end": 11601,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 11588,
											"end": 11601,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 11588,
											"end": 11601,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 11588,
											"end": 11601,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 11580,
											"end": 11627,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "280"
										},
										{
											"begin": 11580,
											"end": 11627,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11580,
											"end": 11627,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 11580,
											"end": 11627,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11580,
											"end": 11627,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11580,
											"end": 11627,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12356,
											"end": 12358,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 11580,
											"end": 11627,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 11580,
											"end": 11627,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11580,
											"end": 11627,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12338,
											"end": 12359,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12395,
											"end": 12397,
											"name": "PUSH",
											"source": 14,
											"value": "15"
										},
										{
											"begin": 12375,
											"end": 12393,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 12375,
											"end": 12393,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12375,
											"end": 12393,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12368,
											"end": 12398,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1CD85B19481DD85CDB89DD08199A5B985B1A5E9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12414,
											"end": 12432,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 12414,
											"end": 12432,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12414,
											"end": 12432,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12407,
											"end": 12458,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12475,
											"end": 12493,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 12475,
											"end": 12493,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11580,
											"end": 11627,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 12154,
											"end": 12499,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11580,
											"end": 11627,
											"name": "tag",
											"source": 13,
											"value": "280"
										},
										{
											"begin": 11580,
											"end": 11627,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11655,
											"end": 11662,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 11655,
											"end": 11662,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 11641,
											"end": 11652,
											"name": "PUSH",
											"source": 13,
											"value": "1E"
										},
										{
											"begin": 11641,
											"end": 11652,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 11641,
											"end": 11662,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 11633,
											"end": 11694,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "283"
										},
										{
											"begin": 11633,
											"end": 11694,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11633,
											"end": 11694,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 11633,
											"end": 11694,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11633,
											"end": 11694,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11633,
											"end": 11694,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14237,
											"end": 14239,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 11633,
											"end": 11694,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 11633,
											"end": 11694,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11633,
											"end": 11694,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14219,
											"end": 14240,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14276,
											"end": 14278,
											"name": "PUSH",
											"source": 14,
											"value": "1B"
										},
										{
											"begin": 14256,
											"end": 14274,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 14256,
											"end": 14274,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14256,
											"end": 14274,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14249,
											"end": 14279,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14315,
											"end": 14344,
											"name": "PUSH",
											"source": 14,
											"value": "6E6F7420656E6F75676820746F6B656E73207765726520736F6C640000000000"
										},
										{
											"begin": 14295,
											"end": 14313,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 14295,
											"end": 14313,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14295,
											"end": 14313,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14288,
											"end": 14345,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14362,
											"end": 14380,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 14362,
											"end": 14380,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11633,
											"end": 11694,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 14035,
											"end": 14386,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11633,
											"end": 11694,
											"name": "tag",
											"source": 13,
											"value": "283"
										},
										{
											"begin": 11633,
											"end": 11694,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11709,
											"end": 11718,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 11709,
											"end": 11718,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 11709,
											"end": 11718,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 11709,
											"end": 11718,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11709,
											"end": 11718,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 11709,
											"end": 11718,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 11709,
											"end": 11718,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 11708,
											"end": 11718,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 11700,
											"end": 11745,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "286"
										},
										{
											"begin": 11700,
											"end": 11745,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11700,
											"end": 11745,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 11700,
											"end": 11745,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11700,
											"end": 11745,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11700,
											"end": 11745,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10138,
											"end": 10140,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 11700,
											"end": 11745,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 11700,
											"end": 11745,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11700,
											"end": 11745,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10120,
											"end": 10141,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10177,
											"end": 10179,
											"name": "PUSH",
											"source": 14,
											"value": "16"
										},
										{
											"begin": 10157,
											"end": 10175,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 10157,
											"end": 10175,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10157,
											"end": 10175,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10150,
											"end": 10180,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1CD85B19481DD85CC8185B1C9958591E48195B991959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "52"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10196,
											"end": 10214,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 10196,
											"end": 10214,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10196,
											"end": 10214,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10189,
											"end": 10241,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10258,
											"end": 10276,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 10258,
											"end": 10276,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11700,
											"end": 11745,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 9936,
											"end": 10282,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11700,
											"end": 11745,
											"name": "tag",
											"source": 13,
											"value": "286"
										},
										{
											"begin": 11700,
											"end": 11745,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11752,
											"end": 11761,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 11752,
											"end": 11768,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11752,
											"end": 11768,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11752,
											"end": 11768,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 11752,
											"end": 11768,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 11752,
											"end": 11768,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 11752,
											"end": 11768,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11752,
											"end": 11768,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 11861,
											"end": 11883,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 11861,
											"end": 11883,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 11752,
											"end": 11768,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11752,
											"end": 11768,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11842,
											"end": 11858,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "289"
										},
										{
											"begin": 11842,
											"end": 11856,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "215"
										},
										{
											"begin": 11842,
											"end": 11858,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 11842,
											"end": 11858,
											"name": "tag",
											"source": 13,
											"value": "289"
										},
										{
											"begin": 11842,
											"end": 11858,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11842,
											"end": 11883,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "290"
										},
										{
											"begin": 11842,
											"end": 11883,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11842,
											"end": 11883,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11842,
											"end": 11883,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "291"
										},
										{
											"begin": 11842,
											"end": 11883,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 11842,
											"end": 11883,
											"name": "tag",
											"source": 13,
											"value": "290"
										},
										{
											"begin": 11842,
											"end": 11883,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11810,
											"end": 11883,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11810,
											"end": 11883,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11938,
											"end": 11975,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12026,
											"end": 12033,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 12026,
											"end": 12033,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 12011,
											"end": 12022,
											"name": "PUSH",
											"source": 13,
											"value": "1E"
										},
										{
											"begin": 12011,
											"end": 12022,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 11979,
											"end": 12002,
											"name": "PUSH",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 11979,
											"end": 12002,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 11979,
											"end": 12022,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "292"
										},
										{
											"begin": 11979,
											"end": 12022,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11979,
											"end": 12022,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11979,
											"end": 12022,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "293"
										},
										{
											"begin": 11979,
											"end": 12022,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 11979,
											"end": 12022,
											"name": "tag",
											"source": 13,
											"value": "292"
										},
										{
											"begin": 11979,
											"end": 12022,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11978,
											"end": 12033,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "294"
										},
										{
											"begin": 11978,
											"end": 12033,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11978,
											"end": 12033,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11978,
											"end": 12033,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "291"
										},
										{
											"begin": 11978,
											"end": 12033,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 11978,
											"end": 12033,
											"name": "tag",
											"source": 13,
											"value": "294"
										},
										{
											"begin": 11978,
											"end": 12033,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12040,
											"end": 12045,
											"name": "PUSH",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 12040,
											"end": 12045,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 12062,
											"end": 12068,
											"name": "PUSH",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 12062,
											"end": 12068,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 12040,
											"end": 12101,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 12040,
											"end": 12101,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "95EA7B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12040,
											"end": 12101,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12040,
											"end": 12101,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12062,
											"end": 12068,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12062,
											"end": 12068,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12062,
											"end": 12068,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 12040,
											"end": 12101,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 12040,
											"end": 12101,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12040,
											"end": 12101,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4150,
											"end": 4201,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4217,
											"end": 4235,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 4217,
											"end": 4235,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4217,
											"end": 4235,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4210,
											"end": 4244,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4210,
											"end": 4244,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4210,
											"end": 4244,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11938,
											"end": 12033,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 11938,
											"end": 12033,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12040,
											"end": 12045,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 12040,
											"end": 12045,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12040,
											"end": 12053,
											"name": "PUSH",
											"source": 13,
											"value": "95EA7B3"
										},
										{
											"begin": 12040,
											"end": 12053,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4123,
											"end": 4141,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 4123,
											"end": 4141,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12040,
											"end": 12101,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12040,
											"end": 12101,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 12040,
											"end": 12101,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 12040,
											"end": 12101,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12040,
											"end": 12101,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12040,
											"end": 12101,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 12040,
											"end": 12101,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12040,
											"end": 12101,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12040,
											"end": 12101,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 12040,
											"end": 12101,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12040,
											"end": 12101,
											"name": "EXTCODESIZE",
											"source": 13
										},
										{
											"begin": 12040,
											"end": 12101,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12040,
											"end": 12101,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12040,
											"end": 12101,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12040,
											"end": 12101,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "297"
										},
										{
											"begin": 12040,
											"end": 12101,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12040,
											"end": 12101,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12040,
											"end": 12101,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12040,
											"end": 12101,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 12040,
											"end": 12101,
											"name": "tag",
											"source": 13,
											"value": "297"
										},
										{
											"begin": 12040,
											"end": 12101,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12040,
											"end": 12101,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12040,
											"end": 12101,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 12040,
											"end": 12101,
											"name": "CALL",
											"source": 13
										},
										{
											"begin": 12040,
											"end": 12101,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12040,
											"end": 12101,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12040,
											"end": 12101,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12040,
											"end": 12101,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "299"
										},
										{
											"begin": 12040,
											"end": 12101,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12040,
											"end": 12101,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 12040,
											"end": 12101,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12040,
											"end": 12101,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12040,
											"end": 12101,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 12040,
											"end": 12101,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 12040,
											"end": 12101,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12040,
											"end": 12101,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 12040,
											"end": 12101,
											"name": "tag",
											"source": 13,
											"value": "299"
										},
										{
											"begin": 12040,
											"end": 12101,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12040,
											"end": 12101,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12040,
											"end": 12101,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12040,
											"end": 12101,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12040,
											"end": 12101,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12040,
											"end": 12101,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 12040,
											"end": 12101,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 12040,
											"end": 12101,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 12040,
											"end": 12101,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 12040,
											"end": 12101,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 12040,
											"end": 12101,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 12040,
											"end": 12101,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12040,
											"end": 12101,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12040,
											"end": 12101,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 12040,
											"end": 12101,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12040,
											"end": 12101,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12040,
											"end": 12101,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12040,
											"end": 12101,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 12040,
											"end": 12101,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12040,
											"end": 12101,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12040,
											"end": 12101,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12040,
											"end": 12101,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12040,
											"end": 12101,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12040,
											"end": 12101,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "300"
										},
										{
											"begin": 12040,
											"end": 12101,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12040,
											"end": 12101,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12040,
											"end": 12101,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "301"
										},
										{
											"begin": 12040,
											"end": 12101,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 12040,
											"end": 12101,
											"name": "tag",
											"source": 13,
											"value": "300"
										},
										{
											"begin": 12040,
											"end": 12101,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12107,
											"end": 12113,
											"name": "PUSH",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 12107,
											"end": 12113,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 12175,
											"end": 12180,
											"name": "PUSH",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 12175,
											"end": 12180,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12107,
											"end": 12113,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12107,
											"end": 12113,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12107,
											"end": 12113,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 12107,
											"end": 12113,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12107,
											"end": 12129,
											"name": "PUSH",
											"source": 13,
											"value": "F305D719"
										},
										{
											"begin": 12107,
											"end": 12129,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12137,
											"end": 12158,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 12137,
											"end": 12158,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12175,
											"end": 12180,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 12189,
											"end": 12218,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 12107,
											"end": 12113,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12107,
											"end": 12113,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12252,
											"end": 12256,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 12265,
											"end": 12287,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "302"
										},
										{
											"begin": 12265,
											"end": 12280,
											"name": "TIMESTAMP",
											"source": 13
										},
										{
											"begin": 12283,
											"end": 12287,
											"name": "PUSH",
											"source": 13,
											"value": "3E8"
										},
										{
											"begin": 12265,
											"end": 12287,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 12265,
											"end": 12287,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 12265,
											"end": 12287,
											"name": "tag",
											"source": 13,
											"value": "302"
										},
										{
											"begin": 12265,
											"end": 12287,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12107,
											"end": 12293,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 12107,
											"end": 12293,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 12107,
											"end": 12293,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 12107,
											"end": 12293,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 12107,
											"end": 12293,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12107,
											"end": 12293,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12107,
											"end": 12293,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 12107,
											"end": 12293,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12107,
											"end": 12293,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4614,
											"end": 4629,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": 4614,
											"end": 4629,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 4614,
											"end": 4629,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 12107,
											"end": 12293,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 12107,
											"end": 12293,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12107,
											"end": 12293,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4596,
											"end": 4630,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4646,
											"end": 4664,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 4646,
											"end": 4664,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4646,
											"end": 4664,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4639,
											"end": 4673,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 4639,
											"end": 4673,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4639,
											"end": 4673,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 4639,
											"end": 4673,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4689,
											"end": 4707,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 4689,
											"end": 4707,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4689,
											"end": 4707,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4682,
											"end": 4716,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 4682,
											"end": 4716,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4682,
											"end": 4716,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 4682,
											"end": 4716,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4732,
											"end": 4750,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 4732,
											"end": 4750,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4732,
											"end": 4750,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4725,
											"end": 4759,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4725,
											"end": 4759,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4725,
											"end": 4759,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4725,
											"end": 4759,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4796,
											"end": 4811,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4796,
											"end": 4811,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4796,
											"end": 4811,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4775,
											"end": 4794,
											"name": "PUSH",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 4775,
											"end": 4794,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4775,
											"end": 4794,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4768,
											"end": 4812,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4828,
											"end": 4847,
											"name": "PUSH",
											"source": 14,
											"value": "A4"
										},
										{
											"begin": 4828,
											"end": 4847,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4828,
											"end": 4847,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4821,
											"end": 4856,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4821,
											"end": 4856,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4821,
											"end": 4856,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4821,
											"end": 4856,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4530,
											"end": 4549,
											"name": "PUSH",
											"source": 14,
											"value": "C4"
										},
										{
											"begin": 4530,
											"end": 4549,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12107,
											"end": 12293,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 12107,
											"end": 12293,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 12107,
											"end": 12293,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 12107,
											"end": 12293,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12107,
											"end": 12293,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12107,
											"end": 12293,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 12107,
											"end": 12293,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12107,
											"end": 12293,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 12107,
											"end": 12293,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 12107,
											"end": 12293,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12107,
											"end": 12293,
											"name": "EXTCODESIZE",
											"source": 13
										},
										{
											"begin": 12107,
											"end": 12293,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12107,
											"end": 12293,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12107,
											"end": 12293,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12107,
											"end": 12293,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "306"
										},
										{
											"begin": 12107,
											"end": 12293,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12107,
											"end": 12293,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12107,
											"end": 12293,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12107,
											"end": 12293,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 12107,
											"end": 12293,
											"name": "tag",
											"source": 13,
											"value": "306"
										},
										{
											"begin": 12107,
											"end": 12293,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12107,
											"end": 12293,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12107,
											"end": 12293,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 12107,
											"end": 12293,
											"name": "CALL",
											"source": 13
										},
										{
											"begin": 12107,
											"end": 12293,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12107,
											"end": 12293,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12107,
											"end": 12293,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12107,
											"end": 12293,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "308"
										},
										{
											"begin": 12107,
											"end": 12293,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12107,
											"end": 12293,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 12107,
											"end": 12293,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12107,
											"end": 12293,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12107,
											"end": 12293,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 12107,
											"end": 12293,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 12107,
											"end": 12293,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12107,
											"end": 12293,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 12107,
											"end": 12293,
											"name": "tag",
											"source": 13,
											"value": "308"
										},
										{
											"begin": 12107,
											"end": 12293,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12107,
											"end": 12293,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12107,
											"end": 12293,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12107,
											"end": 12293,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12107,
											"end": 12293,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12107,
											"end": 12293,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12107,
											"end": 12293,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 12107,
											"end": 12293,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 12107,
											"end": 12293,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 12107,
											"end": 12293,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 12107,
											"end": 12293,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 12107,
											"end": 12293,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 12107,
											"end": 12293,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12107,
											"end": 12293,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12107,
											"end": 12293,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 12107,
											"end": 12293,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12107,
											"end": 12293,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12107,
											"end": 12293,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12107,
											"end": 12293,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 12107,
											"end": 12293,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12107,
											"end": 12293,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12107,
											"end": 12293,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12107,
											"end": 12293,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12107,
											"end": 12293,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12107,
											"end": 12293,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "309"
										},
										{
											"begin": 12107,
											"end": 12293,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12107,
											"end": 12293,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12107,
											"end": 12293,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "310"
										},
										{
											"begin": 12107,
											"end": 12293,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 12107,
											"end": 12293,
											"name": "tag",
											"source": 13,
											"value": "309"
										},
										{
											"begin": 12107,
											"end": 12293,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12299,
											"end": 12305,
											"name": "PUSH",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 12299,
											"end": 12305,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12318,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 12299,
											"end": 12318,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12318,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F9134B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12299,
											"end": 12318,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12318,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12318,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12318,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12299,
											"end": 12305,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12305,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12305,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12305,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12299,
											"end": 12316,
											"name": "PUSH",
											"source": 13,
											"value": "7E44D2CC"
										},
										{
											"begin": 12299,
											"end": 12316,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12318,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 12299,
											"end": 12318,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12318,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12318,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12318,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12318,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12299,
											"end": 12318,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12318,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12318,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12318,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12318,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12318,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12318,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12318,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12305,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12318,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12318,
											"name": "EXTCODESIZE",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12318,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12318,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12318,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12318,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "311"
										},
										{
											"begin": 12299,
											"end": 12318,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12318,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12299,
											"end": 12318,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12318,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12318,
											"name": "tag",
											"source": 13,
											"value": "311"
										},
										{
											"begin": 12299,
											"end": 12318,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12318,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12318,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12318,
											"name": "STATICCALL",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12318,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12318,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12318,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12318,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "313"
										},
										{
											"begin": 12299,
											"end": 12318,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12318,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12318,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12299,
											"end": 12318,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12318,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12318,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12318,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12299,
											"end": 12318,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12318,
											"name": "tag",
											"source": 13,
											"value": "313"
										},
										{
											"begin": 12299,
											"end": 12318,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12318,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12318,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12318,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12318,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12318,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 12299,
											"end": 12318,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12318,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12318,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 12299,
											"end": 12318,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12318,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 12299,
											"end": 12318,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12318,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12318,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12318,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12318,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12318,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12318,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 12299,
											"end": 12318,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12318,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12318,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12318,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12318,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12318,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "314"
										},
										{
											"begin": 12299,
											"end": 12318,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12318,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12318,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "315"
										},
										{
											"begin": 12299,
											"end": 12318,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 12299,
											"end": 12318,
											"name": "tag",
											"source": 13,
											"value": "314"
										},
										{
											"begin": 12299,
											"end": 12318,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12299,
											"end": 12323,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 12356,
											"end": 12362,
											"name": "PUSH",
											"source": 13,
											"value": "2710"
										},
										{
											"begin": 12347,
											"end": 12352,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 12347,
											"end": 12352,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 12333,
											"end": 12344,
											"name": "PUSH",
											"source": 13,
											"value": "1E"
										},
										{
											"begin": 12333,
											"end": 12344,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 12333,
											"end": 12352,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "316"
										},
										{
											"begin": 12333,
											"end": 12352,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12333,
											"end": 12352,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12333,
											"end": 12352,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "293"
										},
										{
											"begin": 12333,
											"end": 12352,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 12333,
											"end": 12352,
											"name": "tag",
											"source": 13,
											"value": "316"
										},
										{
											"begin": 12333,
											"end": 12352,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12332,
											"end": 12362,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "317"
										},
										{
											"begin": 12332,
											"end": 12362,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12332,
											"end": 12362,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12332,
											"end": 12362,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "291"
										},
										{
											"begin": 12332,
											"end": 12362,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 12332,
											"end": 12362,
											"name": "tag",
											"source": 13,
											"value": "317"
										},
										{
											"begin": 12332,
											"end": 12362,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12368,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 12299,
											"end": 12368,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12368,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12299,
											"end": 12368,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12368,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12368,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12368,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12368,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12368,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12368,
											"name": "CALL",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12368,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12368,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12368,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12368,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12368,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12368,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12368,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12299,
											"end": 12368,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12368,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12368,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "322"
										},
										{
											"begin": 12299,
											"end": 12368,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12368,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 12299,
											"end": 12368,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12368,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12368,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12368,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 12299,
											"end": 12368,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12368,
											"name": "PUSH",
											"source": 13,
											"value": "3F"
										},
										{
											"begin": 12299,
											"end": 12368,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12368,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12368,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12368,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12368,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12368,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 12299,
											"end": 12368,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12368,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12368,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12368,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12368,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12368,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12299,
											"end": 12368,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12299,
											"end": 12368,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12368,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12368,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12368,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "321"
										},
										{
											"begin": 12299,
											"end": 12368,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12368,
											"name": "tag",
											"source": 13,
											"value": "322"
										},
										{
											"begin": 12299,
											"end": 12368,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12368,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 12299,
											"end": 12368,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12368,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12368,
											"name": "tag",
											"source": 13,
											"value": "321"
										},
										{
											"begin": 12299,
											"end": 12368,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12374,
											"end": 12387,
											"name": "PUSH",
											"source": 13,
											"value": "1D"
										},
										{
											"begin": 12374,
											"end": 12387,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 12374,
											"end": 12426,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 12374,
											"end": 12426,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12374,
											"end": 12387,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12374,
											"end": 12387,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12374,
											"end": 12387,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 12374,
											"end": 12387,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12400,
											"end": 12421,
											"name": "SELFBALANCE",
											"source": 13
										},
										{
											"begin": 12400,
											"end": 12421,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12374,
											"end": 12426,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12374,
											"end": 12426,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12374,
											"end": 12426,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12374,
											"end": 12426,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12400,
											"end": 12421,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 12374,
											"end": 12387,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 12374,
											"end": 12426,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 12374,
											"end": 12426,
											"name": "CALL",
											"source": 13
										},
										{
											"begin": 12374,
											"end": 12426,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12374,
											"end": 12426,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12374,
											"end": 12426,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12374,
											"end": 12426,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12374,
											"end": 12426,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 12374,
											"end": 12426,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12374,
											"end": 12426,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12374,
											"end": 12426,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12374,
											"end": 12426,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 12374,
											"end": 12426,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "326"
										},
										{
											"begin": 12374,
											"end": 12426,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12374,
											"end": 12426,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 12374,
											"end": 12426,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 12374,
											"end": 12426,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12374,
											"end": 12426,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12374,
											"end": 12426,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 12374,
											"end": 12426,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 12374,
											"end": 12426,
											"name": "PUSH",
											"source": 13,
											"value": "3F"
										},
										{
											"begin": 12374,
											"end": 12426,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 12374,
											"end": 12426,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12374,
											"end": 12426,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 12374,
											"end": 12426,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12374,
											"end": 12426,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12374,
											"end": 12426,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 12374,
											"end": 12426,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12374,
											"end": 12426,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 12374,
											"end": 12426,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12374,
											"end": 12426,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12374,
											"end": 12426,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 12374,
											"end": 12426,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12374,
											"end": 12426,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12374,
											"end": 12426,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 12374,
											"end": 12426,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12374,
											"end": 12426,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 12374,
											"end": 12426,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "325"
										},
										{
											"begin": 12374,
											"end": 12426,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12374,
											"end": 12426,
											"name": "tag",
											"source": 13,
											"value": "326"
										},
										{
											"begin": 12374,
											"end": 12426,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12374,
											"end": 12426,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 12374,
											"end": 12426,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12374,
											"end": 12426,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12374,
											"end": 12426,
											"name": "tag",
											"source": 13,
											"value": "325"
										},
										{
											"begin": 12374,
											"end": 12426,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1701,
											"end": 1702,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2628,
											"end": 2635,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11462,
											"end": 12431,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 9800,
											"end": 10285,
											"name": "tag",
											"source": 13,
											"value": "101"
										},
										{
											"begin": 9800,
											"end": 10285,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "328"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 3,
											"value": "328"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 9867,
											"end": 9878,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 9867,
											"end": 9878,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 9867,
											"end": 9878,
											"name": "PUSH",
											"source": 13,
											"value": "10000"
										},
										{
											"begin": 9867,
											"end": 9878,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9867,
											"end": 9878,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 9867,
											"end": 9878,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 9867,
											"end": 9878,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 9866,
											"end": 9878,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9851,
											"end": 9947,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 9851,
											"end": 9947,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9851,
											"end": 9947,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 9851,
											"end": 9947,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9851,
											"end": 9947,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9851,
											"end": 9947,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13470,
											"end": 13472,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9851,
											"end": 9947,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 9851,
											"end": 9947,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9851,
											"end": 9947,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13452,
											"end": 13473,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 13509,
											"end": 13511,
											"name": "PUSH",
											"source": 14,
											"value": "35"
										},
										{
											"begin": 13489,
											"end": 13507,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 13489,
											"end": 13507,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13489,
											"end": 13507,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13482,
											"end": 13512,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 13548,
											"end": 13582,
											"name": "PUSH",
											"source": 14,
											"value": "73616C65207761732061626F727465642C20706C656173652075736520636C61"
										},
										{
											"begin": 13528,
											"end": 13546,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 13528,
											"end": 13546,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13528,
											"end": 13546,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13521,
											"end": 13583,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "34B6A9BA30B632A2BA34141490333AB731BA34B7B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "59"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13599,
											"end": 13617,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 13599,
											"end": 13617,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13599,
											"end": 13617,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13592,
											"end": 13643,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 13660,
											"end": 13679,
											"name": "PUSH",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 13660,
											"end": 13679,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9851,
											"end": 9947,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 13268,
											"end": 13685,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9851,
											"end": 9947,
											"name": "tag",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 9851,
											"end": 9947,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9975,
											"end": 9985,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 9989,
											"end": 9990,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9961,
											"end": 9986,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9961,
											"end": 9986,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9961,
											"end": 9986,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9961,
											"end": 9974,
											"name": "PUSH",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 9961,
											"end": 9986,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9961,
											"end": 9986,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9961,
											"end": 9986,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 9961,
											"end": 9986,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9961,
											"end": 9986,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 9961,
											"end": 9986,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 9953,
											"end": 10026,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "334"
										},
										{
											"begin": 9953,
											"end": 10026,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9953,
											"end": 10026,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 9953,
											"end": 10026,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9953,
											"end": 10026,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9953,
											"end": 10026,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7540,
											"end": 7542,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9953,
											"end": 10026,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 9953,
											"end": 10026,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9953,
											"end": 10026,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7522,
											"end": 7543,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7579,
											"end": 7581,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 7559,
											"end": 7577,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 7559,
											"end": 7577,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7559,
											"end": 7577,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7552,
											"end": 7582,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7618,
											"end": 7651,
											"name": "PUSH",
											"source": 14,
											"value": "75736572206861736E277420616E7920746F6B656E7320746F20636C61696D00"
										},
										{
											"begin": 7598,
											"end": 7616,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 7598,
											"end": 7616,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7598,
											"end": 7616,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7591,
											"end": 7652,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7669,
											"end": 7687,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 7669,
											"end": 7687,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9953,
											"end": 10026,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 7338,
											"end": 7693,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9953,
											"end": 10026,
											"name": "tag",
											"source": 13,
											"value": "334"
										},
										{
											"begin": 9953,
											"end": 10026,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10040,
											"end": 10049,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 10040,
											"end": 10049,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 10040,
											"end": 10049,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 10040,
											"end": 10049,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10040,
											"end": 10049,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 10040,
											"end": 10049,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 10040,
											"end": 10049,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 10032,
											"end": 10089,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "337"
										},
										{
											"begin": 10032,
											"end": 10089,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10032,
											"end": 10089,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 10032,
											"end": 10089,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10032,
											"end": 10089,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10032,
											"end": 10089,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14593,
											"end": 14595,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 10032,
											"end": 10089,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 10032,
											"end": 10089,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10032,
											"end": 10089,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14575,
											"end": 14596,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14632,
											"end": 14634,
											"name": "PUSH",
											"source": 14,
											"value": "23"
										},
										{
											"begin": 14612,
											"end": 14630,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 14612,
											"end": 14630,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14612,
											"end": 14630,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14605,
											"end": 14635,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14671,
											"end": 14705,
											"name": "PUSH",
											"source": 14,
											"value": "696E69746961746F72206861736E277420656E646564207468652073616C6520"
										},
										{
											"begin": 14651,
											"end": 14669,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 14651,
											"end": 14669,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14651,
											"end": 14669,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14644,
											"end": 14706,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E595D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14722,
											"end": 14740,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 14722,
											"end": 14740,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14722,
											"end": 14740,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14715,
											"end": 14748,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14765,
											"end": 14784,
											"name": "PUSH",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 14765,
											"end": 14784,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10032,
											"end": 10089,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 14391,
											"end": 14790,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10032,
											"end": 10089,
											"name": "tag",
											"source": 13,
											"value": "337"
										},
										{
											"begin": 10032,
											"end": 10089,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10148,
											"end": 10167,
											"name": "PUSH",
											"source": 13,
											"value": "B"
										},
										{
											"begin": 10148,
											"end": 10167,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 10134,
											"end": 10144,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 10096,
											"end": 10117,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10120,
											"end": 10145,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10120,
											"end": 10145,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10120,
											"end": 10145,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10120,
											"end": 10133,
											"name": "PUSH",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 10120,
											"end": 10145,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10120,
											"end": 10145,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10120,
											"end": 10145,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 10120,
											"end": 10145,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10120,
											"end": 10145,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 10120,
											"end": 10145,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 10096,
											"end": 10117,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10096,
											"end": 10117,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10120,
											"end": 10167,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "340"
										},
										{
											"begin": 10120,
											"end": 10167,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10120,
											"end": 10167,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "293"
										},
										{
											"begin": 10120,
											"end": 10167,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 10120,
											"end": 10167,
											"name": "tag",
											"source": 13,
											"value": "340"
										},
										{
											"begin": 10120,
											"end": 10167,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10187,
											"end": 10197,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 10201,
											"end": 10202,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10173,
											"end": 10198,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10173,
											"end": 10198,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10173,
											"end": 10198,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10173,
											"end": 10186,
											"name": "PUSH",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 10173,
											"end": 10198,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10173,
											"end": 10198,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10173,
											"end": 10198,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 10173,
											"end": 10198,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10173,
											"end": 10198,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10173,
											"end": 10198,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 10173,
											"end": 10202,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10173,
											"end": 10202,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10173,
											"end": 10202,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10173,
											"end": 10202,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 10213,
											"end": 10233,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 10096,
											"end": 10167,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10096,
											"end": 10167,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10213,
											"end": 10233,
											"name": "PUSH",
											"source": 13,
											"value": "8A36F5A234186D446E36A7DF36ACE663A05A580D9BEA2DD899C6DD76A075D5FA"
										},
										{
											"begin": 10213,
											"end": 10233,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10213,
											"end": 10233,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "341"
										},
										{
											"begin": 10213,
											"end": 10233,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10096,
											"end": 10167,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15301,
											"end": 15326,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15301,
											"end": 15326,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 15289,
											"end": 15291,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 15274,
											"end": 15292,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15274,
											"end": 15292,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15155,
											"end": 15332,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10213,
											"end": 10233,
											"name": "tag",
											"source": 13,
											"value": "341"
										},
										{
											"begin": 10213,
											"end": 10233,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10213,
											"end": 10233,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 10213,
											"end": 10233,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 10213,
											"end": 10233,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10213,
											"end": 10233,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10213,
											"end": 10233,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 10213,
											"end": 10233,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10213,
											"end": 10233,
											"name": "LOG1",
											"source": 13
										},
										{
											"begin": 10239,
											"end": 10244,
											"name": "PUSH",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 10239,
											"end": 10244,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 10239,
											"end": 10280,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 10239,
											"end": 10280,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10239,
											"end": 10280,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10239,
											"end": 10280,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10254,
											"end": 10264,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 10239,
											"end": 10280,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 10239,
											"end": 10280,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10239,
											"end": 10280,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4150,
											"end": 4201,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4217,
											"end": 4235,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 4217,
											"end": 4235,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4217,
											"end": 4235,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4210,
											"end": 4244,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4210,
											"end": 4244,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4210,
											"end": 4244,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10239,
											"end": 10244,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10239,
											"end": 10244,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10239,
											"end": 10244,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 10239,
											"end": 10244,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10239,
											"end": 10253,
											"name": "PUSH",
											"source": 13,
											"value": "A9059CBB"
										},
										{
											"begin": 10239,
											"end": 10253,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4123,
											"end": 4141,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 4123,
											"end": 4141,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10239,
											"end": 10280,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10239,
											"end": 10280,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 10239,
											"end": 10280,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 10239,
											"end": 10280,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10239,
											"end": 10280,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10239,
											"end": 10280,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 10239,
											"end": 10280,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10239,
											"end": 10280,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10239,
											"end": 10280,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 10239,
											"end": 10280,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10239,
											"end": 10280,
											"name": "EXTCODESIZE",
											"source": 13
										},
										{
											"begin": 10239,
											"end": 10280,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 10239,
											"end": 10280,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10239,
											"end": 10280,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 10239,
											"end": 10280,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 10239,
											"end": 10280,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10239,
											"end": 10280,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10239,
											"end": 10280,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10239,
											"end": 10280,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 10239,
											"end": 10280,
											"name": "tag",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 10239,
											"end": 10280,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10239,
											"end": 10280,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10239,
											"end": 10280,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 10239,
											"end": 10280,
											"name": "CALL",
											"source": 13
										},
										{
											"begin": 10239,
											"end": 10280,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 10239,
											"end": 10280,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10239,
											"end": 10280,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 10239,
											"end": 10280,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "345"
										},
										{
											"begin": 10239,
											"end": 10280,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10239,
											"end": 10280,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 10239,
											"end": 10280,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10239,
											"end": 10280,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10239,
											"end": 10280,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 10239,
											"end": 10280,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 10239,
											"end": 10280,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10239,
											"end": 10280,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 10239,
											"end": 10280,
											"name": "tag",
											"source": 13,
											"value": "345"
										},
										{
											"begin": 10239,
											"end": 10280,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10239,
											"end": 10280,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10239,
											"end": 10280,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10239,
											"end": 10280,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10239,
											"end": 10280,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10239,
											"end": 10280,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 10239,
											"end": 10280,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 10239,
											"end": 10280,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 10239,
											"end": 10280,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 10239,
											"end": 10280,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 10239,
											"end": 10280,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 10239,
											"end": 10280,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10239,
											"end": 10280,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10239,
											"end": 10280,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 10239,
											"end": 10280,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10239,
											"end": 10280,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10239,
											"end": 10280,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10239,
											"end": 10280,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 10239,
											"end": 10280,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10239,
											"end": 10280,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10239,
											"end": 10280,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10239,
											"end": 10280,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10239,
											"end": 10280,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10239,
											"end": 10280,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "346"
										},
										{
											"begin": 10239,
											"end": 10280,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10239,
											"end": 10280,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10239,
											"end": 10280,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "301"
										},
										{
											"begin": 10239,
											"end": 10280,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 10239,
											"end": 10280,
											"name": "tag",
											"source": 13,
											"value": "346"
										},
										{
											"begin": 10239,
											"end": 10280,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1701,
											"end": 1702,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2628,
											"end": 2635,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 9800,
											"end": 10285,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 6617,
											"end": 6920,
											"name": "tag",
											"source": 13,
											"value": "113"
										},
										{
											"begin": 6617,
											"end": 6920,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6052,
											"end": 6065,
											"name": "PUSH",
											"source": 13,
											"value": "1D"
										},
										{
											"begin": 6052,
											"end": 6065,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6052,
											"end": 6065,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6069,
											"end": 6079,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 6052,
											"end": 6079,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 6044,
											"end": 6111,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "348"
										},
										{
											"begin": 6044,
											"end": 6111,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6044,
											"end": 6111,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6044,
											"end": 6111,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6044,
											"end": 6111,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6044,
											"end": 6111,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6044,
											"end": 6111,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 6044,
											"end": 6111,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6044,
											"end": 6111,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 6044,
											"end": 6111,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6044,
											"end": 6111,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "261"
										},
										{
											"begin": 6044,
											"end": 6111,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 6044,
											"end": 6111,
											"name": "tag",
											"source": 13,
											"value": "348"
										},
										{
											"begin": 6044,
											"end": 6111,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6721,
											"end": 6732,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 6721,
											"end": 6732,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 6721,
											"end": 6732,
											"name": "PUSH",
											"source": 13,
											"value": "10000"
										},
										{
											"begin": 6721,
											"end": 6732,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6721,
											"end": 6732,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 6721,
											"end": 6732,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 6721,
											"end": 6732,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6720,
											"end": 6732,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6712,
											"end": 6753,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "351"
										},
										{
											"begin": 6712,
											"end": 6753,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6712,
											"end": 6753,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6712,
											"end": 6753,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6712,
											"end": 6753,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6712,
											"end": 6753,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6712,
											"end": 6753,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 6712,
											"end": 6753,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6712,
											"end": 6753,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 6712,
											"end": 6753,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6712,
											"end": 6753,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "279"
										},
										{
											"begin": 6712,
											"end": 6753,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 6712,
											"end": 6753,
											"name": "tag",
											"source": 13,
											"value": "351"
										},
										{
											"begin": 6712,
											"end": 6753,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6808,
											"end": 6824,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 6808,
											"end": 6824,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 6774,
											"end": 6779,
											"name": "PUSH",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 6774,
											"end": 6779,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 6774,
											"end": 6804,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6774,
											"end": 6804,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6774,
											"end": 6804,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6774,
											"end": 6804,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6798,
											"end": 6802,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 6774,
											"end": 6804,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 6774,
											"end": 6804,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6774,
											"end": 6804,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3690,
											"end": 3741,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6774,
											"end": 6779,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6774,
											"end": 6779,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6774,
											"end": 6779,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6774,
											"end": 6779,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6774,
											"end": 6789,
											"name": "PUSH",
											"source": 13,
											"value": "70A08231"
										},
										{
											"begin": 6774,
											"end": 6789,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3663,
											"end": 3681,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 3663,
											"end": 3681,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6774,
											"end": 6804,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6774,
											"end": 6804,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6774,
											"end": 6804,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6774,
											"end": 6804,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6774,
											"end": 6804,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6774,
											"end": 6804,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6774,
											"end": 6804,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6774,
											"end": 6804,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6774,
											"end": 6804,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6774,
											"end": 6804,
											"name": "EXTCODESIZE",
											"source": 13
										},
										{
											"begin": 6774,
											"end": 6804,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6774,
											"end": 6804,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6774,
											"end": 6804,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6774,
											"end": 6804,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "354"
										},
										{
											"begin": 6774,
											"end": 6804,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6774,
											"end": 6804,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6774,
											"end": 6804,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6774,
											"end": 6804,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6774,
											"end": 6804,
											"name": "tag",
											"source": 13,
											"value": "354"
										},
										{
											"begin": 6774,
											"end": 6804,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6774,
											"end": 6804,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6774,
											"end": 6804,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 6774,
											"end": 6804,
											"name": "STATICCALL",
											"source": 13
										},
										{
											"begin": 6774,
											"end": 6804,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6774,
											"end": 6804,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6774,
											"end": 6804,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6774,
											"end": 6804,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "356"
										},
										{
											"begin": 6774,
											"end": 6804,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6774,
											"end": 6804,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 6774,
											"end": 6804,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6774,
											"end": 6804,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6774,
											"end": 6804,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 6774,
											"end": 6804,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 6774,
											"end": 6804,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6774,
											"end": 6804,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6774,
											"end": 6804,
											"name": "tag",
											"source": 13,
											"value": "356"
										},
										{
											"begin": 6774,
											"end": 6804,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6774,
											"end": 6804,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6774,
											"end": 6804,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6774,
											"end": 6804,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6774,
											"end": 6804,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6774,
											"end": 6804,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6774,
											"end": 6804,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6774,
											"end": 6804,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 6774,
											"end": 6804,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 6774,
											"end": 6804,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 6774,
											"end": 6804,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 6774,
											"end": 6804,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6774,
											"end": 6804,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6774,
											"end": 6804,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6774,
											"end": 6804,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6774,
											"end": 6804,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6774,
											"end": 6804,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6774,
											"end": 6804,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6774,
											"end": 6804,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6774,
											"end": 6804,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6774,
											"end": 6804,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6774,
											"end": 6804,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6774,
											"end": 6804,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6774,
											"end": 6804,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "357"
										},
										{
											"begin": 6774,
											"end": 6804,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6774,
											"end": 6804,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6774,
											"end": 6804,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "358"
										},
										{
											"begin": 6774,
											"end": 6804,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 6774,
											"end": 6804,
											"name": "tag",
											"source": 13,
											"value": "357"
										},
										{
											"begin": 6774,
											"end": 6804,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6774,
											"end": 6824,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 6774,
											"end": 6824,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6759,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 6759,
											"end": 6889,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6759,
											"end": 6889,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6759,
											"end": 6889,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6759,
											"end": 6889,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6759,
											"end": 6889,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9720,
											"end": 9722,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6759,
											"end": 6889,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 6759,
											"end": 6889,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6759,
											"end": 6889,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9702,
											"end": 9723,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9759,
											"end": 9761,
											"name": "PUSH",
											"source": 14,
											"value": "31"
										},
										{
											"begin": 9739,
											"end": 9757,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 9739,
											"end": 9757,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9739,
											"end": 9757,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9732,
											"end": 9762,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9798,
											"end": 9832,
											"name": "PUSH",
											"source": 14,
											"value": "696E73756666696369656E7420616D6F756E74206F6620746F6B656E73207365"
										},
										{
											"begin": 9778,
											"end": 9796,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 9778,
											"end": 9796,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9778,
											"end": 9796,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9771,
											"end": 9833,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6E7420746F207468652061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "78"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9849,
											"end": 9867,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 9849,
											"end": 9867,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9849,
											"end": 9867,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9842,
											"end": 9889,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9906,
											"end": 9925,
											"name": "PUSH",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 9906,
											"end": 9925,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6759,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 9518,
											"end": 9931,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6759,
											"end": 6889,
											"name": "tag",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 6759,
											"end": 6889,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6895,
											"end": 6908,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 6895,
											"end": 6915,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6895,
											"end": 6915,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6895,
											"end": 6915,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6911,
											"end": 6915,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 6895,
											"end": 6915,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 6895,
											"end": 6915,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6895,
											"end": 6915,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 6617,
											"end": 6920,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 7821,
											"end": 8826,
											"name": "tag",
											"source": 13,
											"value": "117"
										},
										{
											"begin": 7821,
											"end": 8826,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "363"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 3,
											"value": "363"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1411,
											"end": 1420,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "367"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9375,
											"end": 9377,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9357,
											"end": 9378,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9414,
											"end": 9416,
											"name": "PUSH",
											"source": 14,
											"value": "10"
										},
										{
											"begin": 9394,
											"end": 9412,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 9394,
											"end": 9412,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9394,
											"end": 9412,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9387,
											"end": 9417,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9433,
											"end": 9451,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 9433,
											"end": 9451,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9433,
											"end": 9451,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9426,
											"end": 9472,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9489,
											"end": 9507,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 9489,
											"end": 9507,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 9173,
											"end": 9513,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "tag",
											"source": 2,
											"value": "367"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7949,
											"end": 8001,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "371"
										},
										{
											"begin": 7956,
											"end": 7965,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7967,
											"end": 7977,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 7979,
											"end": 7985,
											"name": "PUSH",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 7979,
											"end": 7985,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 7987,
											"end": 8000,
											"name": "CHAINID",
											"source": 13
										},
										{
											"begin": 7949,
											"end": 7955,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "233"
										},
										{
											"begin": 7949,
											"end": 8001,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 7949,
											"end": 8001,
											"name": "tag",
											"source": 13,
											"value": "371"
										},
										{
											"begin": 7949,
											"end": 8001,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7941,
											"end": 8002,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "372"
										},
										{
											"begin": 7941,
											"end": 8002,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7941,
											"end": 8002,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7941,
											"end": 8002,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7941,
											"end": 8002,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7941,
											"end": 8002,
											"name": "tag",
											"source": 13,
											"value": "372"
										},
										{
											"begin": 7941,
											"end": 8002,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8017,
											"end": 8028,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 8017,
											"end": 8028,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 8017,
											"end": 8028,
											"name": "PUSH",
											"source": 13,
											"value": "10000"
										},
										{
											"begin": 8017,
											"end": 8028,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8017,
											"end": 8028,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 8017,
											"end": 8028,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 8017,
											"end": 8028,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 8016,
											"end": 8028,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8008,
											"end": 8049,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "373"
										},
										{
											"begin": 8008,
											"end": 8049,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8008,
											"end": 8049,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8008,
											"end": 8049,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8008,
											"end": 8049,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8008,
											"end": 8049,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8008,
											"end": 8049,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 8008,
											"end": 8049,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8008,
											"end": 8049,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 8008,
											"end": 8049,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8008,
											"end": 8049,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "279"
										},
										{
											"begin": 8008,
											"end": 8049,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 8008,
											"end": 8049,
											"name": "tag",
											"source": 13,
											"value": "373"
										},
										{
											"begin": 8008,
											"end": 8049,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8063,
											"end": 8076,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 8063,
											"end": 8076,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 8063,
											"end": 8076,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 8063,
											"end": 8076,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 8055,
											"end": 8111,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "375"
										},
										{
											"begin": 8055,
											"end": 8111,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8055,
											"end": 8111,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8055,
											"end": 8111,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8055,
											"end": 8111,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8055,
											"end": 8111,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10832,
											"end": 10834,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8055,
											"end": 8111,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 8055,
											"end": 8111,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8055,
											"end": 8111,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10814,
											"end": 10835,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10871,
											"end": 10873,
											"name": "PUSH",
											"source": 14,
											"value": "1E"
										},
										{
											"begin": 10851,
											"end": 10869,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 10851,
											"end": 10869,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10851,
											"end": 10869,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10844,
											"end": 10874,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10910,
											"end": 10942,
											"name": "PUSH",
											"source": 14,
											"value": "73616C65206861736E2774206265656E2066696E616C697A6564207965740000"
										},
										{
											"begin": 10890,
											"end": 10908,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 10890,
											"end": 10908,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10890,
											"end": 10908,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10883,
											"end": 10943,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10960,
											"end": 10978,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 10960,
											"end": 10978,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8055,
											"end": 8111,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 10630,
											"end": 10984,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8055,
											"end": 8111,
											"name": "tag",
											"source": 13,
											"value": "375"
										},
										{
											"begin": 8055,
											"end": 8111,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8143,
											"end": 8150,
											"name": "PUSH",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 8143,
											"end": 8150,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 8125,
											"end": 8140,
											"name": "TIMESTAMP",
											"source": 13
										},
										{
											"begin": 8125,
											"end": 8150,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 8117,
											"end": 8169,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "378"
										},
										{
											"begin": 8117,
											"end": 8169,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8117,
											"end": 8169,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8117,
											"end": 8169,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8117,
											"end": 8169,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8117,
											"end": 8169,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10489,
											"end": 10491,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8117,
											"end": 8169,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 8117,
											"end": 8169,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8117,
											"end": 8169,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10471,
											"end": 10492,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10528,
											"end": 10530,
											"name": "PUSH",
											"source": 14,
											"value": "E"
										},
										{
											"begin": 10508,
											"end": 10526,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 10508,
											"end": 10526,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10508,
											"end": 10526,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10501,
											"end": 10531,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1CD85B19481A185CC8195B991959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10547,
											"end": 10565,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 10547,
											"end": 10565,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10547,
											"end": 10565,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10540,
											"end": 10584,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10601,
											"end": 10619,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 10601,
											"end": 10619,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8117,
											"end": 8169,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 10287,
											"end": 10625,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8117,
											"end": 8169,
											"name": "tag",
											"source": 13,
											"value": "378"
										},
										{
											"begin": 8117,
											"end": 8169,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8201,
											"end": 8212,
											"name": "PUSH",
											"source": 13,
											"value": "A"
										},
										{
											"begin": 8201,
											"end": 8212,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 8183,
											"end": 8198,
											"name": "TIMESTAMP",
											"source": 13
										},
										{
											"begin": 8183,
											"end": 8212,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 8175,
											"end": 8240,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "381"
										},
										{
											"begin": 8175,
											"end": 8240,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8175,
											"end": 8240,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8175,
											"end": 8240,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8175,
											"end": 8240,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8175,
											"end": 8240,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9023,
											"end": 9025,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8175,
											"end": 8240,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 8175,
											"end": 8240,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8175,
											"end": 8240,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9005,
											"end": 9026,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9062,
											"end": 9064,
											"name": "PUSH",
											"source": 14,
											"value": "17"
										},
										{
											"begin": 9042,
											"end": 9060,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 9042,
											"end": 9060,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9042,
											"end": 9060,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9035,
											"end": 9065,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1CD85B19481A185CDB89DD081CDD185C9D1959081E595D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9081,
											"end": 9099,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 9081,
											"end": 9099,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9081,
											"end": 9099,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9074,
											"end": 9127,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9144,
											"end": 9162,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 9144,
											"end": 9162,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8175,
											"end": 8240,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 8821,
											"end": 9168,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8175,
											"end": 8240,
											"name": "tag",
											"source": 13,
											"value": "381"
										},
										{
											"begin": 8175,
											"end": 8240,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8302,
											"end": 8315,
											"name": "PUSH",
											"source": 13,
											"value": "F"
										},
										{
											"begin": 8302,
											"end": 8315,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 8287,
											"end": 8297,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 8273,
											"end": 8298,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8273,
											"end": 8298,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8273,
											"end": 8298,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8273,
											"end": 8298,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8273,
											"end": 8286,
											"name": "PUSH",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 8273,
											"end": 8298,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8273,
											"end": 8298,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8273,
											"end": 8298,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8273,
											"end": 8298,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8273,
											"end": 8298,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 8273,
											"end": 8298,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 8261,
											"end": 8298,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "384"
										},
										{
											"begin": 8261,
											"end": 8298,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8261,
											"end": 8270,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 8261,
											"end": 8298,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 8261,
											"end": 8298,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 8261,
											"end": 8298,
											"name": "tag",
											"source": 13,
											"value": "384"
										},
										{
											"begin": 8261,
											"end": 8298,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8261,
											"end": 8315,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 8261,
											"end": 8315,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8246,
											"end": 8367,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "385"
										},
										{
											"begin": 8246,
											"end": 8367,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8246,
											"end": 8367,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8246,
											"end": 8367,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8246,
											"end": 8367,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8246,
											"end": 8367,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8246,
											"end": 8367,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 8246,
											"end": 8367,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8246,
											"end": 8367,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 8246,
											"end": 8367,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8246,
											"end": 8367,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "387"
										},
										{
											"begin": 8246,
											"end": 8367,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 8246,
											"end": 8367,
											"name": "tag",
											"source": 13,
											"value": "385"
										},
										{
											"begin": 8246,
											"end": 8367,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8394,
											"end": 8407,
											"name": "PUSH",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 8394,
											"end": 8407,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 8381,
											"end": 8390,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 8381,
											"end": 8407,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 8381,
											"end": 8407,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8373,
											"end": 8437,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "388"
										},
										{
											"begin": 8373,
											"end": 8437,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8373,
											"end": 8437,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8373,
											"end": 8437,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8373,
											"end": 8437,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8373,
											"end": 8437,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8249,
											"end": 8251,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8373,
											"end": 8437,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 8373,
											"end": 8437,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8373,
											"end": 8437,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8231,
											"end": 8252,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8288,
											"end": 8290,
											"name": "PUSH",
											"source": 14,
											"value": "19"
										},
										{
											"begin": 8268,
											"end": 8286,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 8268,
											"end": 8286,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8268,
											"end": 8286,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8261,
											"end": 8291,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F2DEEA4EE4CA40DCDEE840E6CADCC8D2DCCE40CADCDEEACED"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8307,
											"end": 8325,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 8307,
											"end": 8325,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8307,
											"end": 8325,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8300,
											"end": 8355,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8372,
											"end": 8390,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 8372,
											"end": 8390,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8373,
											"end": 8437,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 8047,
											"end": 8396,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8373,
											"end": 8437,
											"name": "tag",
											"source": 13,
											"value": "388"
										},
										{
											"begin": 8373,
											"end": 8437,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8512,
											"end": 8530,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 8512,
											"end": 8530,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 8492,
											"end": 8508,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "391"
										},
										{
											"begin": 8492,
											"end": 8506,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "215"
										},
										{
											"begin": 8492,
											"end": 8508,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 8492,
											"end": 8508,
											"name": "tag",
											"source": 13,
											"value": "391"
										},
										{
											"begin": 8492,
											"end": 8508,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8470,
											"end": 8489,
											"name": "PUSH",
											"source": 13,
											"value": "B"
										},
										{
											"begin": 8470,
											"end": 8489,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 8458,
											"end": 8489,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 8458,
											"end": 8489,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8458,
											"end": 8467,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 8458,
											"end": 8489,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "293"
										},
										{
											"begin": 8458,
											"end": 8489,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 8458,
											"end": 8489,
											"name": "tag",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 8458,
											"end": 8489,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8458,
											"end": 8508,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "393"
										},
										{
											"begin": 8458,
											"end": 8508,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8458,
											"end": 8508,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8458,
											"end": 8508,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 8458,
											"end": 8508,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 8458,
											"end": 8508,
											"name": "tag",
											"source": 13,
											"value": "393"
										},
										{
											"begin": 8458,
											"end": 8508,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8458,
											"end": 8530,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 8458,
											"end": 8530,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8443,
											"end": 8597,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "394"
										},
										{
											"begin": 8443,
											"end": 8597,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8443,
											"end": 8597,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8443,
											"end": 8597,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8443,
											"end": 8597,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8443,
											"end": 8597,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8443,
											"end": 8597,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 8443,
											"end": 8597,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8443,
											"end": 8597,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 8443,
											"end": 8597,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8443,
											"end": 8597,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "396"
										},
										{
											"begin": 8443,
											"end": 8597,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 8443,
											"end": 8597,
											"name": "tag",
											"source": 13,
											"value": "394"
										},
										{
											"begin": 8443,
											"end": 8597,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8645,
											"end": 8652,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 8645,
											"end": 8652,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 8632,
											"end": 8641,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 8618,
											"end": 8629,
											"name": "PUSH",
											"source": 13,
											"value": "1E"
										},
										{
											"begin": 8618,
											"end": 8629,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 8618,
											"end": 8641,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "397"
										},
										{
											"begin": 8618,
											"end": 8641,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8618,
											"end": 8641,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8618,
											"end": 8641,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 8618,
											"end": 8641,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 8618,
											"end": 8641,
											"name": "tag",
											"source": 13,
											"value": "397"
										},
										{
											"begin": 8618,
											"end": 8641,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8618,
											"end": 8652,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 8618,
											"end": 8652,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8603,
											"end": 8706,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 8603,
											"end": 8706,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8603,
											"end": 8706,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8603,
											"end": 8706,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8603,
											"end": 8706,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8603,
											"end": 8706,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8603,
											"end": 8706,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 8603,
											"end": 8706,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8603,
											"end": 8706,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 8603,
											"end": 8706,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8603,
											"end": 8706,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 8603,
											"end": 8706,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 8603,
											"end": 8706,
											"name": "tag",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 8603,
											"end": 8706,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8755,
											"end": 8765,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 8741,
											"end": 8766,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8741,
											"end": 8766,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8741,
											"end": 8766,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8741,
											"end": 8766,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8741,
											"end": 8754,
											"name": "PUSH",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 8741,
											"end": 8766,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8741,
											"end": 8766,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8741,
											"end": 8766,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8741,
											"end": 8766,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8741,
											"end": 8766,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 8741,
											"end": 8766,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 8741,
											"end": 8778,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "401"
										},
										{
											"begin": 8741,
											"end": 8778,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8769,
											"end": 8778,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 8769,
											"end": 8778,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8741,
											"end": 8778,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 8741,
											"end": 8778,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 8741,
											"end": 8778,
											"name": "tag",
											"source": 13,
											"value": "401"
										},
										{
											"begin": 8741,
											"end": 8778,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8727,
											"end": 8737,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 8713,
											"end": 8738,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8713,
											"end": 8738,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8713,
											"end": 8738,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8713,
											"end": 8738,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8713,
											"end": 8726,
											"name": "PUSH",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 8713,
											"end": 8738,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8713,
											"end": 8738,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8713,
											"end": 8738,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8713,
											"end": 8738,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8713,
											"end": 8738,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 8713,
											"end": 8778,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 8798,
											"end": 8809,
											"name": "PUSH",
											"source": 13,
											"value": "1E"
										},
										{
											"begin": 8798,
											"end": 8809,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 8798,
											"end": 8821,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "402"
										},
										{
											"begin": 8798,
											"end": 8821,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8812,
											"end": 8821,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 8812,
											"end": 8821,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8798,
											"end": 8821,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 8798,
											"end": 8821,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 8798,
											"end": 8821,
											"name": "tag",
											"source": 13,
											"value": "402"
										},
										{
											"begin": 8798,
											"end": 8821,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8784,
											"end": 8795,
											"name": "PUSH",
											"source": 13,
											"value": "1E"
										},
										{
											"begin": 8784,
											"end": 8821,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1701,
											"end": 1702,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2628,
											"end": 2635,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7821,
											"end": 8826,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "tag",
											"source": 13,
											"value": "142"
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "PUSH",
											"source": 13,
											"value": "1A"
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "404"
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "405"
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "tag",
											"source": 13,
											"value": "404"
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "405"
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "tag",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "407"
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "408"
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "407"
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "tag",
											"source": 13,
											"value": "408"
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "tag",
											"source": 13,
											"value": "409"
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "409"
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "tag",
											"source": 13,
											"value": "407"
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 10397,
											"end": 10981,
											"name": "tag",
											"source": 13,
											"value": "159"
										},
										{
											"begin": 10397,
											"end": 10981,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "411"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 3,
											"value": "411"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 10459,
											"end": 10468,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 10459,
											"end": 10468,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 10459,
											"end": 10468,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 10459,
											"end": 10468,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10459,
											"end": 10468,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 10459,
											"end": 10468,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 10459,
											"end": 10468,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 10458,
											"end": 10468,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 10450,
											"end": 10508,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "414"
										},
										{
											"begin": 10450,
											"end": 10508,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10450,
											"end": 10508,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 10450,
											"end": 10508,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10450,
											"end": 10508,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10450,
											"end": 10508,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11952,
											"end": 11954,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 10450,
											"end": 10508,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 10450,
											"end": 10508,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10450,
											"end": 10508,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11934,
											"end": 11955,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11991,
											"end": 11993,
											"name": "PUSH",
											"source": 14,
											"value": "23"
										},
										{
											"begin": 11971,
											"end": 11989,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 11971,
											"end": 11989,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11971,
											"end": 11989,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11964,
											"end": 11994,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12030,
											"end": 12064,
											"name": "PUSH",
											"source": 14,
											"value": "73616C6520686173206265656E20656E646564203A20796F752063616E20636C"
										},
										{
											"begin": 12010,
											"end": 12028,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 12010,
											"end": 12028,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12010,
											"end": 12028,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12003,
											"end": 12065,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "61696D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12081,
											"end": 12099,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 12081,
											"end": 12099,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12081,
											"end": 12099,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12074,
											"end": 12107,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12124,
											"end": 12143,
											"name": "PUSH",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 12124,
											"end": 12143,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10450,
											"end": 10508,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 11750,
											"end": 12149,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10450,
											"end": 10508,
											"name": "tag",
											"source": 13,
											"value": "414"
										},
										{
											"begin": 10450,
											"end": 10508,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10578,
											"end": 10589,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 10578,
											"end": 10589,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 10578,
											"end": 10589,
											"name": "PUSH",
											"source": 13,
											"value": "10000"
										},
										{
											"begin": 10578,
											"end": 10589,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10578,
											"end": 10589,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 10578,
											"end": 10589,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 10578,
											"end": 10589,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 10574,
											"end": 10622,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 10574,
											"end": 10622,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 10574,
											"end": 10622,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10599,
											"end": 10615,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 10599,
											"end": 10613,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "419"
										},
										{
											"begin": 10599,
											"end": 10615,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 10599,
											"end": 10615,
											"name": "tag",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 10599,
											"end": 10615,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10725,
											"end": 10732,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 10725,
											"end": 10732,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 10711,
											"end": 10722,
											"name": "PUSH",
											"source": 13,
											"value": "1E"
										},
										{
											"begin": 10711,
											"end": 10722,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 10711,
											"end": 10732,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 10711,
											"end": 10761,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10711,
											"end": 10761,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 10711,
											"end": 10761,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "420"
										},
										{
											"begin": 10711,
											"end": 10761,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10711,
											"end": 10761,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10754,
											"end": 10761,
											"name": "PUSH",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 10754,
											"end": 10761,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 10736,
											"end": 10751,
											"name": "TIMESTAMP",
											"source": 13
										},
										{
											"begin": 10736,
											"end": 10761,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 10711,
											"end": 10761,
											"name": "tag",
											"source": 13,
											"value": "420"
										},
										{
											"begin": 10711,
											"end": 10761,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10707,
											"end": 10794,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 10707,
											"end": 10794,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "422"
										},
										{
											"begin": 10707,
											"end": 10794,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10771,
											"end": 10787,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "422"
										},
										{
											"begin": 10771,
											"end": 10785,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "419"
										},
										{
											"begin": 10771,
											"end": 10787,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 10771,
											"end": 10787,
											"name": "tag",
											"source": 13,
											"value": "422"
										},
										{
											"begin": 10771,
											"end": 10787,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10900,
											"end": 10907,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 10900,
											"end": 10907,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 10886,
											"end": 10897,
											"name": "PUSH",
											"source": 13,
											"value": "1E"
										},
										{
											"begin": 10886,
											"end": 10897,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 10886,
											"end": 10907,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 10886,
											"end": 10944,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10886,
											"end": 10944,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 10886,
											"end": 10944,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "423"
										},
										{
											"begin": 10886,
											"end": 10944,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10929,
											"end": 10936,
											"name": "PUSH",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 10929,
											"end": 10936,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 10929,
											"end": 10944,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "424"
										},
										{
											"begin": 10929,
											"end": 10944,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10939,
											"end": 10944,
											"name": "PUSH",
											"source": 13,
											"value": "15180"
										},
										{
											"begin": 10929,
											"end": 10944,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 10929,
											"end": 10944,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 10929,
											"end": 10944,
											"name": "tag",
											"source": 13,
											"value": "424"
										},
										{
											"begin": 10929,
											"end": 10944,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10911,
											"end": 10926,
											"name": "TIMESTAMP",
											"source": 13
										},
										{
											"begin": 10911,
											"end": 10944,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 10886,
											"end": 10944,
											"name": "tag",
											"source": 13,
											"value": "423"
										},
										{
											"begin": 10886,
											"end": 10944,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10882,
											"end": 10977,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 10882,
											"end": 10977,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "426"
										},
										{
											"begin": 10882,
											"end": 10977,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10954,
											"end": 10970,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "426"
										},
										{
											"begin": 10954,
											"end": 10968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "419"
										},
										{
											"begin": 10954,
											"end": 10970,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 10954,
											"end": 10970,
											"name": "tag",
											"source": 13,
											"value": "426"
										},
										{
											"begin": 10954,
											"end": 10970,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1701,
											"end": 1702,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2628,
											"end": 2635,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 10397,
											"end": 10981,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 6924,
											"end": 7817,
											"name": "tag",
											"source": 13,
											"value": "161"
										},
										{
											"begin": 6924,
											"end": 7817,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "428"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 3,
											"value": "428"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1411,
											"end": 1420,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "432"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9375,
											"end": 9377,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9357,
											"end": 9378,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9414,
											"end": 9416,
											"name": "PUSH",
											"source": 14,
											"value": "10"
										},
										{
											"begin": 9394,
											"end": 9412,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 9394,
											"end": 9412,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9394,
											"end": 9412,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9387,
											"end": 9417,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9433,
											"end": 9451,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 9433,
											"end": 9451,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9433,
											"end": 9451,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9426,
											"end": 9472,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9489,
											"end": 9507,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 9489,
											"end": 9507,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 9173,
											"end": 9513,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "tag",
											"source": 2,
											"value": "432"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7010,
											"end": 7021,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 7010,
											"end": 7021,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 7010,
											"end": 7021,
											"name": "PUSH",
											"source": 13,
											"value": "10000"
										},
										{
											"begin": 7010,
											"end": 7021,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7010,
											"end": 7021,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 7010,
											"end": 7021,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 7010,
											"end": 7021,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7009,
											"end": 7021,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7001,
											"end": 7042,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "435"
										},
										{
											"begin": 7001,
											"end": 7042,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7001,
											"end": 7042,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7001,
											"end": 7042,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7001,
											"end": 7042,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7001,
											"end": 7042,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7001,
											"end": 7042,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 7001,
											"end": 7042,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7001,
											"end": 7042,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 7001,
											"end": 7042,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7001,
											"end": 7042,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "279"
										},
										{
											"begin": 7001,
											"end": 7042,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 7001,
											"end": 7042,
											"name": "tag",
											"source": 13,
											"value": "435"
										},
										{
											"begin": 7001,
											"end": 7042,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7056,
											"end": 7069,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 7056,
											"end": 7069,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 7056,
											"end": 7069,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 7056,
											"end": 7069,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7048,
											"end": 7104,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 7048,
											"end": 7104,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7048,
											"end": 7104,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7048,
											"end": 7104,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7048,
											"end": 7104,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7048,
											"end": 7104,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10832,
											"end": 10834,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7048,
											"end": 7104,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 7048,
											"end": 7104,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7048,
											"end": 7104,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10814,
											"end": 10835,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10871,
											"end": 10873,
											"name": "PUSH",
											"source": 14,
											"value": "1E"
										},
										{
											"begin": 10851,
											"end": 10869,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 10851,
											"end": 10869,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10851,
											"end": 10869,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10844,
											"end": 10874,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10910,
											"end": 10942,
											"name": "PUSH",
											"source": 14,
											"value": "73616C65206861736E2774206265656E2066696E616C697A6564207965740000"
										},
										{
											"begin": 10890,
											"end": 10908,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 10890,
											"end": 10908,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10890,
											"end": 10908,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10883,
											"end": 10943,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10960,
											"end": 10978,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 10960,
											"end": 10978,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7048,
											"end": 7104,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 10630,
											"end": 10984,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7048,
											"end": 7104,
											"name": "tag",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 7048,
											"end": 7104,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7136,
											"end": 7145,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 7136,
											"end": 7145,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 7118,
											"end": 7133,
											"name": "TIMESTAMP",
											"source": 13
										},
										{
											"begin": 7118,
											"end": 7145,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 7110,
											"end": 7173,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 7110,
											"end": 7173,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7110,
											"end": 7173,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7110,
											"end": 7173,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7110,
											"end": 7173,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7110,
											"end": 7173,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9023,
											"end": 9025,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7110,
											"end": 7173,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 7110,
											"end": 7173,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7110,
											"end": 7173,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9005,
											"end": 9026,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9062,
											"end": 9064,
											"name": "PUSH",
											"source": 14,
											"value": "17"
										},
										{
											"begin": 9042,
											"end": 9060,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 9042,
											"end": 9060,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9042,
											"end": 9060,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9035,
											"end": 9065,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1CD85B19481A185CDB89DD081CDD185C9D1959081E595D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9081,
											"end": 9099,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 9081,
											"end": 9099,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9081,
											"end": 9099,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9074,
											"end": 9127,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9144,
											"end": 9162,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 9144,
											"end": 9162,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7110,
											"end": 7173,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 8821,
											"end": 9168,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7110,
											"end": 7173,
											"name": "tag",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 7110,
											"end": 7173,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7205,
											"end": 7212,
											"name": "PUSH",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 7205,
											"end": 7212,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 7187,
											"end": 7202,
											"name": "TIMESTAMP",
											"source": 13
										},
										{
											"begin": 7187,
											"end": 7212,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 7179,
											"end": 7231,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "441"
										},
										{
											"begin": 7179,
											"end": 7231,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7179,
											"end": 7231,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7179,
											"end": 7231,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7179,
											"end": 7231,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7179,
											"end": 7231,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10489,
											"end": 10491,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7179,
											"end": 7231,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 7179,
											"end": 7231,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7179,
											"end": 7231,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10471,
											"end": 10492,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10528,
											"end": 10530,
											"name": "PUSH",
											"source": 14,
											"value": "E"
										},
										{
											"begin": 10508,
											"end": 10526,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 10508,
											"end": 10526,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10508,
											"end": 10526,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10501,
											"end": 10531,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1CD85B19481A185CC8195B991959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10547,
											"end": 10565,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 10547,
											"end": 10565,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10547,
											"end": 10565,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10540,
											"end": 10584,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10601,
											"end": 10619,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 10601,
											"end": 10619,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7179,
											"end": 7231,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 10287,
											"end": 10625,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7179,
											"end": 7231,
											"name": "tag",
											"source": 13,
											"value": "441"
										},
										{
											"begin": 7179,
											"end": 7231,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7293,
											"end": 7306,
											"name": "PUSH",
											"source": 13,
											"value": "F"
										},
										{
											"begin": 7293,
											"end": 7306,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 7278,
											"end": 7288,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 7264,
											"end": 7289,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7264,
											"end": 7289,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7264,
											"end": 7289,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7264,
											"end": 7289,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7264,
											"end": 7277,
											"name": "PUSH",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 7264,
											"end": 7289,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7264,
											"end": 7289,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7264,
											"end": 7289,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7264,
											"end": 7289,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7264,
											"end": 7289,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 7264,
											"end": 7289,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 7252,
											"end": 7289,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "443"
										},
										{
											"begin": 7252,
											"end": 7289,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7252,
											"end": 7261,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 7252,
											"end": 7289,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 7252,
											"end": 7289,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 7252,
											"end": 7289,
											"name": "tag",
											"source": 13,
											"value": "443"
										},
										{
											"begin": 7252,
											"end": 7289,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7252,
											"end": 7306,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 7252,
											"end": 7306,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7237,
											"end": 7358,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "444"
										},
										{
											"begin": 7237,
											"end": 7358,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7237,
											"end": 7358,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7237,
											"end": 7358,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7237,
											"end": 7358,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7237,
											"end": 7358,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7237,
											"end": 7358,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 7237,
											"end": 7358,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7237,
											"end": 7358,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 7237,
											"end": 7358,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7237,
											"end": 7358,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "387"
										},
										{
											"begin": 7237,
											"end": 7358,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 7237,
											"end": 7358,
											"name": "tag",
											"source": 13,
											"value": "444"
										},
										{
											"begin": 7237,
											"end": 7358,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7385,
											"end": 7398,
											"name": "PUSH",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 7385,
											"end": 7398,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 7372,
											"end": 7381,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 7372,
											"end": 7398,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 7372,
											"end": 7398,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7364,
											"end": 7428,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "446"
										},
										{
											"begin": 7364,
											"end": 7428,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7364,
											"end": 7428,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7364,
											"end": 7428,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7364,
											"end": 7428,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7364,
											"end": 7428,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8249,
											"end": 8251,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7364,
											"end": 7428,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 7364,
											"end": 7428,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7364,
											"end": 7428,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8231,
											"end": 8252,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8288,
											"end": 8290,
											"name": "PUSH",
											"source": 14,
											"value": "19"
										},
										{
											"begin": 8268,
											"end": 8286,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 8268,
											"end": 8286,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8268,
											"end": 8286,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8261,
											"end": 8291,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F2DEEA4EE4CA40DCDEE840E6CADCC8D2DCCE40CADCDEEACED"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8307,
											"end": 8325,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 8307,
											"end": 8325,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8307,
											"end": 8325,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8300,
											"end": 8355,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8372,
											"end": 8390,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 8372,
											"end": 8390,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7364,
											"end": 7428,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 8047,
											"end": 8396,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7364,
											"end": 7428,
											"name": "tag",
											"source": 13,
											"value": "446"
										},
										{
											"begin": 7364,
											"end": 7428,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7503,
											"end": 7521,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 7503,
											"end": 7521,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 7483,
											"end": 7499,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "448"
										},
										{
											"begin": 7483,
											"end": 7497,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "215"
										},
										{
											"begin": 7483,
											"end": 7499,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 7483,
											"end": 7499,
											"name": "tag",
											"source": 13,
											"value": "448"
										},
										{
											"begin": 7483,
											"end": 7499,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7461,
											"end": 7480,
											"name": "PUSH",
											"source": 13,
											"value": "B"
										},
										{
											"begin": 7461,
											"end": 7480,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 7449,
											"end": 7480,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "449"
										},
										{
											"begin": 7449,
											"end": 7480,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7449,
											"end": 7458,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 7449,
											"end": 7480,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "293"
										},
										{
											"begin": 7449,
											"end": 7480,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 7449,
											"end": 7480,
											"name": "tag",
											"source": 13,
											"value": "449"
										},
										{
											"begin": 7449,
											"end": 7480,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7449,
											"end": 7499,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "450"
										},
										{
											"begin": 7449,
											"end": 7499,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7449,
											"end": 7499,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7449,
											"end": 7499,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 7449,
											"end": 7499,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 7449,
											"end": 7499,
											"name": "tag",
											"source": 13,
											"value": "450"
										},
										{
											"begin": 7449,
											"end": 7499,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7449,
											"end": 7521,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 7449,
											"end": 7521,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7434,
											"end": 7588,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "451"
										},
										{
											"begin": 7434,
											"end": 7588,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7434,
											"end": 7588,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7434,
											"end": 7588,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7434,
											"end": 7588,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7434,
											"end": 7588,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7434,
											"end": 7588,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 7434,
											"end": 7588,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7434,
											"end": 7588,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 7434,
											"end": 7588,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7434,
											"end": 7588,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "396"
										},
										{
											"begin": 7434,
											"end": 7588,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 7434,
											"end": 7588,
											"name": "tag",
											"source": 13,
											"value": "451"
										},
										{
											"begin": 7434,
											"end": 7588,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7636,
											"end": 7643,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 7636,
											"end": 7643,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 7623,
											"end": 7632,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 7609,
											"end": 7620,
											"name": "PUSH",
											"source": 13,
											"value": "1E"
										},
										{
											"begin": 7609,
											"end": 7620,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 7609,
											"end": 7632,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "453"
										},
										{
											"begin": 7609,
											"end": 7632,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7609,
											"end": 7632,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7609,
											"end": 7632,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 7609,
											"end": 7632,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 7609,
											"end": 7632,
											"name": "tag",
											"source": 13,
											"value": "453"
										},
										{
											"begin": 7609,
											"end": 7632,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7609,
											"end": 7643,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 7609,
											"end": 7643,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7594,
											"end": 7697,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "454"
										},
										{
											"begin": 7594,
											"end": 7697,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7594,
											"end": 7697,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7594,
											"end": 7697,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7594,
											"end": 7697,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7594,
											"end": 7697,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7594,
											"end": 7697,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 7594,
											"end": 7697,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7594,
											"end": 7697,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 7594,
											"end": 7697,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7594,
											"end": 7697,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 7594,
											"end": 7697,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 7594,
											"end": 7697,
											"name": "tag",
											"source": 13,
											"value": "454"
										},
										{
											"begin": 7594,
											"end": 7697,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7746,
											"end": 7756,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 7732,
											"end": 7757,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7732,
											"end": 7757,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7732,
											"end": 7757,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7732,
											"end": 7757,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7732,
											"end": 7745,
											"name": "PUSH",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 7732,
											"end": 7757,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7732,
											"end": 7757,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7732,
											"end": 7757,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7732,
											"end": 7757,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7732,
											"end": 7757,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 7732,
											"end": 7757,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 7732,
											"end": 7769,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "456"
										},
										{
											"begin": 7732,
											"end": 7769,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7760,
											"end": 7769,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 7760,
											"end": 7769,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7732,
											"end": 7769,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 7732,
											"end": 7769,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 7732,
											"end": 7769,
											"name": "tag",
											"source": 13,
											"value": "456"
										},
										{
											"begin": 7732,
											"end": 7769,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7718,
											"end": 7728,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 7704,
											"end": 7729,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7704,
											"end": 7729,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7704,
											"end": 7729,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7704,
											"end": 7729,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7704,
											"end": 7717,
											"name": "PUSH",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 7704,
											"end": 7729,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7704,
											"end": 7729,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7704,
											"end": 7729,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7704,
											"end": 7729,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7704,
											"end": 7729,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 7704,
											"end": 7769,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 7789,
											"end": 7800,
											"name": "PUSH",
											"source": 13,
											"value": "1E"
										},
										{
											"begin": 7789,
											"end": 7800,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 7789,
											"end": 7812,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 7789,
											"end": 7812,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7803,
											"end": 7812,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 7803,
											"end": 7812,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7789,
											"end": 7812,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 7789,
											"end": 7812,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 7789,
											"end": 7812,
											"name": "tag",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 7789,
											"end": 7812,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7775,
											"end": 7786,
											"name": "PUSH",
											"source": 13,
											"value": "1E"
										},
										{
											"begin": 7775,
											"end": 7812,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 1701,
											"end": 1702,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2628,
											"end": 2635,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6924,
											"end": 7817,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 9315,
											"end": 9796,
											"name": "tag",
											"source": 13,
											"value": "181"
										},
										{
											"begin": 9315,
											"end": 9796,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9397,
											"end": 9402,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9410,
											"end": 9417,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9425,
											"end": 9432,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9455,
											"end": 9458,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9455,
											"end": 9465,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 9469,
											"end": 9471,
											"name": "PUSH",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 9455,
											"end": 9471,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 9447,
											"end": 9472,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "459"
										},
										{
											"begin": 9447,
											"end": 9472,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9447,
											"end": 9472,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9447,
											"end": 9472,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9447,
											"end": 9472,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 9447,
											"end": 9472,
											"name": "tag",
											"source": 13,
											"value": "459"
										},
										{
											"begin": 9447,
											"end": 9472,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9609,
											"end": 9611,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9600,
											"end": 9612,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9600,
											"end": 9612,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9594,
											"end": 9613,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 9665,
											"end": 9667,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 9656,
											"end": 9668,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9656,
											"end": 9668,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9650,
											"end": 9669,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 9758,
											"end": 9760,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 9749,
											"end": 9761,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9749,
											"end": 9761,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9749,
											"end": 9761,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9743,
											"end": 9762,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 9479,
											"end": 9488,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9735,
											"end": 9763,
											"name": "BYTE",
											"source": 13
										},
										{
											"begin": 9735,
											"end": 9763,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9594,
											"end": 9613,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9594,
											"end": 9613,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9650,
											"end": 9669,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9315,
											"end": 9796,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 2708,
											"end": 2730,
											"name": "tag",
											"source": 13,
											"value": "186"
										},
										{
											"begin": 2708,
											"end": 2730,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2708,
											"end": 2730,
											"name": "PUSH",
											"source": 13,
											"value": "1B"
										},
										{
											"begin": 2708,
											"end": 2730,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2708,
											"end": 2730,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2708,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "404"
										},
										{
											"begin": 2708,
											"end": 2730,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2708,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "405"
										},
										{
											"begin": 2708,
											"end": 2730,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 6127,
											"end": 6236,
											"name": "tag",
											"source": 13,
											"value": "215"
										},
										{
											"begin": 6127,
											"end": 6236,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6174,
											"end": 6181,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6211,
											"end": 6230,
											"name": "PUSH",
											"source": 13,
											"value": "B"
										},
										{
											"begin": 6211,
											"end": 6230,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 6197,
											"end": 6208,
											"name": "PUSH",
											"source": 13,
											"value": "1E"
										},
										{
											"begin": 6197,
											"end": 6208,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 6197,
											"end": 6230,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "466"
										},
										{
											"begin": 6197,
											"end": 6230,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6197,
											"end": 6230,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6197,
											"end": 6230,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "293"
										},
										{
											"begin": 6197,
											"end": 6230,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 6197,
											"end": 6230,
											"name": "tag",
											"source": 13,
											"value": "466"
										},
										{
											"begin": 6197,
											"end": 6230,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6189,
											"end": 6231,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6189,
											"end": 6231,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6127,
											"end": 6236,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6127,
											"end": 6236,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 8830,
											"end": 9311,
											"name": "tag",
											"source": 13,
											"value": "233"
										},
										{
											"begin": 8830,
											"end": 9311,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8963,
											"end": 8967,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8975,
											"end": 8982,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8988,
											"end": 8997,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9003,
											"end": 9012,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9031,
											"end": 9056,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "468"
										},
										{
											"begin": 9046,
											"end": 9055,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 9031,
											"end": 9045,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "181"
										},
										{
											"begin": 9031,
											"end": 9056,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 9031,
											"end": 9056,
											"name": "tag",
											"source": 13,
											"value": "468"
										},
										{
											"begin": 9031,
											"end": 9056,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9102,
											"end": 9140,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 9102,
											"end": 9140,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9102,
											"end": 9140,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5087,
											"end": 5119,
											"name": "DUP13",
											"source": 14
										},
										{
											"begin": 5087,
											"end": 5119,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 9102,
											"end": 9140,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9102,
											"end": 9140,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9102,
											"end": 9140,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9102,
											"end": 9140,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5069,
											"end": 5120,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5069,
											"end": 5120,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5069,
											"end": 5120,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5069,
											"end": 5120,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5136,
											"end": 5154,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5136,
											"end": 5154,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5136,
											"end": 5154,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5129,
											"end": 5163,
											"name": "DUP13",
											"source": 14
										},
										{
											"begin": 5129,
											"end": 5163,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5129,
											"end": 5163,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5179,
											"end": 5197,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 5179,
											"end": 5197,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5179,
											"end": 5197,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5179,
											"end": 5197,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5172,
											"end": 5206,
											"name": "DUP13",
											"source": 14
										},
										{
											"begin": 5172,
											"end": 5206,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5172,
											"end": 5206,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9102,
											"end": 9140,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9102,
											"end": 9140,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 9102,
											"end": 9140,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9102,
											"end": 9140,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9102,
											"end": 9140,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 9102,
											"end": 9140,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9102,
											"end": 9140,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9102,
											"end": 9140,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9102,
											"end": 9140,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9102,
											"end": 9140,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5042,
											"end": 5060,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 5042,
											"end": 5060,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5042,
											"end": 5060,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9102,
											"end": 9140,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9102,
											"end": 9140,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 9102,
											"end": 9140,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9085,
											"end": 9146,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9085,
											"end": 9146,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 9085,
											"end": 9146,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9085,
											"end": 9146,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9085,
											"end": 9146,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9085,
											"end": 9146,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9085,
											"end": 9146,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9085,
											"end": 9146,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3191,
											"end": 3257,
											"name": "PUSH",
											"source": 14,
											"value": "19457468657265756D205369676E6564204D6573736167653A0A333200000000"
										},
										{
											"begin": 9185,
											"end": 9250,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 9185,
											"end": 9250,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9185,
											"end": 9250,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3179,
											"end": 3258,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3274,
											"end": 3286,
											"name": "PUSH",
											"source": 14,
											"value": "BC"
										},
										{
											"begin": 3274,
											"end": 3286,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3274,
											"end": 3286,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3267,
											"end": 3295,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3267,
											"end": 3295,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3267,
											"end": 3295,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9019,
											"end": 9056,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 9019,
											"end": 9056,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9019,
											"end": 9056,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9019,
											"end": 9056,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9019,
											"end": 9056,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 3311,
											"end": 3323,
											"name": "PUSH",
											"source": 14,
											"value": "DC"
										},
										{
											"begin": 3311,
											"end": 3323,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9185,
											"end": 9250,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 9185,
											"end": 9250,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9185,
											"end": 9250,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9185,
											"end": 9250,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9185,
											"end": 9250,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9185,
											"end": 9250,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 9185,
											"end": 9250,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9185,
											"end": 9250,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9185,
											"end": 9250,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9185,
											"end": 9250,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9185,
											"end": 9250,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9185,
											"end": 9250,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9175,
											"end": 9251,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9175,
											"end": 9251,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 9185,
											"end": 9250,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9175,
											"end": 9251,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9175,
											"end": 9251,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9175,
											"end": 9251,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9175,
											"end": 9251,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 9274,
											"end": 9305,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9274,
											"end": 9305,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9274,
											"end": 9305,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9274,
											"end": 9305,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9274,
											"end": 9305,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9274,
											"end": 9305,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9274,
											"end": 9305,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9274,
											"end": 9305,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9274,
											"end": 9305,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5636,
											"end": 5661,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5636,
											"end": 5661,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5636,
											"end": 5661,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5709,
											"end": 5713,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 5697,
											"end": 5714,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 5697,
											"end": 5714,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 5677,
											"end": 5695,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5677,
											"end": 5695,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5677,
											"end": 5695,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5670,
											"end": 5715,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5670,
											"end": 5715,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5670,
											"end": 5715,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5670,
											"end": 5715,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5731,
											"end": 5749,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 5731,
											"end": 5749,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5731,
											"end": 5749,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5724,
											"end": 5758,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 5724,
											"end": 5758,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5724,
											"end": 5758,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5774,
											"end": 5792,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 5774,
											"end": 5792,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5774,
											"end": 5792,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5767,
											"end": 5801,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 5767,
											"end": 5801,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5767,
											"end": 5801,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9175,
											"end": 9251,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9274,
											"end": 9305,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 9274,
											"end": 9305,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5608,
											"end": 5627,
											"name": "PUSH",
											"source": 14,
											"value": "A0"
										},
										{
											"begin": 5608,
											"end": 5627,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9274,
											"end": 9305,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9274,
											"end": 9305,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 9274,
											"end": 9305,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 9274,
											"end": 9305,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9274,
											"end": 9305,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9274,
											"end": 9305,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 9274,
											"end": 9305,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9274,
											"end": 9305,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9274,
											"end": 9305,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9274,
											"end": 9305,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 9274,
											"end": 9305,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9274,
											"end": 9305,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 9274,
											"end": 9305,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 9274,
											"end": 9305,
											"name": "STATICCALL",
											"source": 13
										},
										{
											"begin": 9274,
											"end": 9305,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9274,
											"end": 9305,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9274,
											"end": 9305,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9274,
											"end": 9305,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "476"
										},
										{
											"begin": 9274,
											"end": 9305,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9274,
											"end": 9305,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 9274,
											"end": 9305,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9274,
											"end": 9305,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9274,
											"end": 9305,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 9274,
											"end": 9305,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 9274,
											"end": 9305,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9274,
											"end": 9305,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 9274,
											"end": 9305,
											"name": "tag",
											"source": 13,
											"value": "476"
										},
										{
											"begin": 9274,
											"end": 9305,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9274,
											"end": 9305,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 9274,
											"end": 9305,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9274,
											"end": 9305,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9274,
											"end": 9305,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 9264,
											"end": 9270,
											"name": "PUSH",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 9264,
											"end": 9270,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9264,
											"end": 9305,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9264,
											"end": 9305,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9264,
											"end": 9305,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 9264,
											"end": 9270,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9264,
											"end": 9270,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 9264,
											"end": 9305,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 9264,
											"end": 9305,
											"name": "SWAP12",
											"source": 13
										},
										{
											"begin": 8830,
											"end": 9311,
											"name": "SWAP11",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8830,
											"end": 9311,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 10985,
											"end": 11240,
											"name": "tag",
											"source": 13,
											"value": "419"
										},
										{
											"begin": 10985,
											"end": 11240,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11047,
											"end": 11057,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 11061,
											"end": 11062,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11033,
											"end": 11058,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11033,
											"end": 11058,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11033,
											"end": 11058,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11033,
											"end": 11046,
											"name": "PUSH",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 11033,
											"end": 11058,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11033,
											"end": 11058,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11033,
											"end": 11058,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 11033,
											"end": 11058,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11033,
											"end": 11058,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 11033,
											"end": 11058,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 11025,
											"end": 11098,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "478"
										},
										{
											"begin": 11025,
											"end": 11098,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11025,
											"end": 11098,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 11025,
											"end": 11098,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11025,
											"end": 11098,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11025,
											"end": 11098,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7540,
											"end": 7542,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 11025,
											"end": 11098,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 11025,
											"end": 11098,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11025,
											"end": 11098,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7522,
											"end": 7543,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7579,
											"end": 7581,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 7559,
											"end": 7577,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 7559,
											"end": 7577,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7559,
											"end": 7577,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7552,
											"end": 7582,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7618,
											"end": 7651,
											"name": "PUSH",
											"source": 14,
											"value": "75736572206861736E277420616E7920746F6B656E7320746F20636C61696D00"
										},
										{
											"begin": 7598,
											"end": 7616,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 7598,
											"end": 7616,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7598,
											"end": 7616,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7591,
											"end": 7652,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7669,
											"end": 7687,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 7669,
											"end": 7687,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11025,
											"end": 11098,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 7338,
											"end": 7693,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11025,
											"end": 11098,
											"name": "tag",
											"source": 13,
											"value": "478"
										},
										{
											"begin": 11025,
											"end": 11098,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11142,
											"end": 11152,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 11104,
											"end": 11125,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11128,
											"end": 11153,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11128,
											"end": 11153,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11128,
											"end": 11153,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11128,
											"end": 11141,
											"name": "PUSH",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 11128,
											"end": 11153,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11128,
											"end": 11153,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11128,
											"end": 11153,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 11128,
											"end": 11153,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11128,
											"end": 11153,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11128,
											"end": 11153,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 11128,
											"end": 11153,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11128,
											"end": 11153,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 11159,
											"end": 11188,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11159,
											"end": 11188,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11159,
											"end": 11188,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11159,
											"end": 11188,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 11194,
											"end": 11235,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11194,
											"end": 11235,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 11128,
											"end": 11153,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11128,
											"end": 11153,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 11142,
											"end": 11152,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11128,
											"end": 11153,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11128,
											"end": 11153,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11194,
											"end": 11235,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11194,
											"end": 11235,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11104,
											"end": 11125,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11194,
											"end": 11235,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11128,
											"end": 11153,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 11142,
											"end": 11152,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 11194,
											"end": 11235,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 11194,
											"end": 11235,
											"name": "CALL",
											"source": 13
										},
										{
											"begin": 11194,
											"end": 11235,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 11194,
											"end": 11235,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11194,
											"end": 11235,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11194,
											"end": 11235,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11194,
											"end": 11235,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 11194,
											"end": 11235,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11194,
											"end": 11235,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11194,
											"end": 11235,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11194,
											"end": 11235,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 11194,
											"end": 11235,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "483"
										},
										{
											"begin": 11194,
											"end": 11235,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11194,
											"end": 11235,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 11194,
											"end": 11235,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 11194,
											"end": 11235,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11194,
											"end": 11235,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11194,
											"end": 11235,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 11194,
											"end": 11235,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 11194,
											"end": 11235,
											"name": "PUSH",
											"source": 13,
											"value": "3F"
										},
										{
											"begin": 11194,
											"end": 11235,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 11194,
											"end": 11235,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11194,
											"end": 11235,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 11194,
											"end": 11235,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11194,
											"end": 11235,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11194,
											"end": 11235,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 11194,
											"end": 11235,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11194,
											"end": 11235,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 11194,
											"end": 11235,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11194,
											"end": 11235,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11194,
											"end": 11235,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 11194,
											"end": 11235,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11194,
											"end": 11235,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11194,
											"end": 11235,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 11194,
											"end": 11235,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11194,
											"end": 11235,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 11194,
											"end": 11235,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "482"
										},
										{
											"begin": 11194,
											"end": 11235,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11194,
											"end": 11235,
											"name": "tag",
											"source": 13,
											"value": "483"
										},
										{
											"begin": 11194,
											"end": 11235,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11194,
											"end": 11235,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 11194,
											"end": 11235,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11194,
											"end": 11235,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11194,
											"end": 11235,
											"name": "tag",
											"source": 13,
											"value": "482"
										},
										{
											"begin": 11194,
											"end": 11235,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11194,
											"end": 11235,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11194,
											"end": 11235,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11194,
											"end": 11235,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11019,
											"end": 11240,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10985,
											"end": 11240,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 732,
											"name": "tag",
											"source": 14,
											"value": "485"
										},
										{
											"begin": 14,
											"end": 732,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 56,
											"end": 61,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 109,
											"end": 112,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 102,
											"end": 106,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 94,
											"end": 100,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 90,
											"end": 107,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 86,
											"end": 113,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 76,
											"end": 131,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "487"
										},
										{
											"begin": 76,
											"end": 131,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 127,
											"end": 128,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 125,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 117,
											"end": 129,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 76,
											"end": 131,
											"name": "tag",
											"source": 14,
											"value": "487"
										},
										{
											"begin": 76,
											"end": 131,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 163,
											"end": 169,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 150,
											"end": 170,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 189,
											"end": 207,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 226,
											"end": 228,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 222,
											"end": 224,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 219,
											"end": 229,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 216,
											"end": 252,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 216,
											"end": 252,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "489"
										},
										{
											"begin": 216,
											"end": 252,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 232,
											"end": 250,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "489"
										},
										{
											"begin": 232,
											"end": 250,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "490"
										},
										{
											"begin": 232,
											"end": 250,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 232,
											"end": 250,
											"name": "tag",
											"source": 14,
											"value": "489"
										},
										{
											"begin": 232,
											"end": 250,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 307,
											"end": 309,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 301,
											"end": 310,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 275,
											"end": 277,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 361,
											"end": 374,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 361,
											"end": 374,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 357,
											"end": 379,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 357,
											"end": 379,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 357,
											"end": 379,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 381,
											"end": 383,
											"name": "PUSH",
											"source": 14,
											"value": "3F"
										},
										{
											"begin": 353,
											"end": 384,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 349,
											"end": 389,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 337,
											"end": 390,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 337,
											"end": 390,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 337,
											"end": 390,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 405,
											"end": 423,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 405,
											"end": 423,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 405,
											"end": 423,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 425,
											"end": 447,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 425,
											"end": 447,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 425,
											"end": 447,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 402,
											"end": 448,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 399,
											"end": 471,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 399,
											"end": 471,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "492"
										},
										{
											"begin": 399,
											"end": 471,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 451,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "492"
										},
										{
											"begin": 451,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "490"
										},
										{
											"begin": 451,
											"end": 469,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 451,
											"end": 469,
											"name": "tag",
											"source": 14,
											"value": "492"
										},
										{
											"begin": 451,
											"end": 469,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 491,
											"end": 501,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 487,
											"end": 489,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 480,
											"end": 502,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 526,
											"end": 528,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 518,
											"end": 524,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 511,
											"end": 529,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 572,
											"end": 575,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 565,
											"end": 569,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 560,
											"end": 562,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 552,
											"end": 558,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 548,
											"end": 563,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 544,
											"end": 570,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 541,
											"end": 576,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 538,
											"end": 593,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 538,
											"end": 593,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "493"
										},
										{
											"begin": 538,
											"end": 593,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 589,
											"end": 590,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 586,
											"end": 587,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 579,
											"end": 591,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 538,
											"end": 593,
											"name": "tag",
											"source": 14,
											"value": "493"
										},
										{
											"begin": 538,
											"end": 593,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 653,
											"end": 655,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 646,
											"end": 650,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 638,
											"end": 644,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 634,
											"end": 651,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 627,
											"end": 631,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 619,
											"end": 625,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 615,
											"end": 632,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 602,
											"end": 656,
											"name": "CALLDATACOPY",
											"source": 14
										},
										{
											"begin": 700,
											"end": 701,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 693,
											"end": 697,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 688,
											"end": 690,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 680,
											"end": 686,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 676,
											"end": 691,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 672,
											"end": 698,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 665,
											"end": 702,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 720,
											"end": 726,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 711,
											"end": 726,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 711,
											"end": 726,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 711,
											"end": 726,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 711,
											"end": 726,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 711,
											"end": 726,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 711,
											"end": 726,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14,
											"end": 732,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 14,
											"end": 732,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14,
											"end": 732,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14,
											"end": 732,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14,
											"end": 732,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 737,
											"end": 984,
											"name": "tag",
											"source": 14,
											"value": "96"
										},
										{
											"begin": 737,
											"end": 984,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 796,
											"end": 802,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 849,
											"end": 851,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 837,
											"end": 846,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 828,
											"end": 835,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 824,
											"end": 847,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 820,
											"end": 852,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 817,
											"end": 869,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 817,
											"end": 869,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "495"
										},
										{
											"begin": 817,
											"end": 869,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 865,
											"end": 866,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 862,
											"end": 863,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 855,
											"end": 867,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 817,
											"end": 869,
											"name": "tag",
											"source": 14,
											"value": "495"
										},
										{
											"begin": 817,
											"end": 869,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 904,
											"end": 913,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 891,
											"end": 914,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 923,
											"end": 954,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "496"
										},
										{
											"begin": 948,
											"end": 953,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 923,
											"end": 954,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "497"
										},
										{
											"begin": 923,
											"end": 954,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 923,
											"end": 954,
											"name": "tag",
											"source": 14,
											"value": "496"
										},
										{
											"begin": 923,
											"end": 954,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 973,
											"end": 978,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 737,
											"end": 984,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 737,
											"end": 984,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 989,
											"end": 1240,
											"name": "tag",
											"source": 14,
											"value": "315"
										},
										{
											"begin": 989,
											"end": 1240,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1059,
											"end": 1065,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1112,
											"end": 1114,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1100,
											"end": 1109,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1091,
											"end": 1098,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1087,
											"end": 1110,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1083,
											"end": 1115,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 1080,
											"end": 1132,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1080,
											"end": 1132,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "499"
										},
										{
											"begin": 1080,
											"end": 1132,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1128,
											"end": 1129,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1125,
											"end": 1126,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1118,
											"end": 1130,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1080,
											"end": 1132,
											"name": "tag",
											"source": 14,
											"value": "499"
										},
										{
											"begin": 1080,
											"end": 1132,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1160,
											"end": 1169,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1154,
											"end": 1170,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1179,
											"end": 1210,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "496"
										},
										{
											"begin": 1204,
											"end": 1209,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1179,
											"end": 1210,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "497"
										},
										{
											"begin": 1179,
											"end": 1210,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1245,
											"end": 1522,
											"name": "tag",
											"source": 14,
											"value": "301"
										},
										{
											"begin": 1245,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1365,
											"end": 1367,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1353,
											"end": 1362,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1344,
											"end": 1351,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1340,
											"end": 1363,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1336,
											"end": 1368,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 1333,
											"end": 1385,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1333,
											"end": 1385,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "502"
										},
										{
											"begin": 1333,
											"end": 1385,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1381,
											"end": 1382,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1378,
											"end": 1379,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1371,
											"end": 1383,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1333,
											"end": 1385,
											"name": "tag",
											"source": 14,
											"value": "502"
										},
										{
											"begin": 1333,
											"end": 1385,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1413,
											"end": 1422,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1407,
											"end": 1423,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1466,
											"end": 1471,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1459,
											"end": 1472,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1452,
											"end": 1473,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1445,
											"end": 1450,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1442,
											"end": 1474,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 1432,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "496"
										},
										{
											"begin": 1432,
											"end": 1492,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1488,
											"end": 1489,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1485,
											"end": 1486,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1478,
											"end": 1490,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1527,
											"end": 1847,
											"name": "tag",
											"source": 14,
											"value": "116"
										},
										{
											"begin": 1527,
											"end": 1847,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1595,
											"end": 1601,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1648,
											"end": 1650,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1636,
											"end": 1645,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1627,
											"end": 1634,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1623,
											"end": 1646,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1619,
											"end": 1651,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "505"
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1664,
											"end": 1665,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1661,
											"end": 1662,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1654,
											"end": 1666,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "tag",
											"source": 14,
											"value": "505"
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1704,
											"end": 1713,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1691,
											"end": 1714,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 1737,
											"end": 1755,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1729,
											"end": 1735,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1726,
											"end": 1756,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 1723,
											"end": 1773,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1723,
											"end": 1773,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "506"
										},
										{
											"begin": 1723,
											"end": 1773,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1769,
											"end": 1770,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1766,
											"end": 1767,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1759,
											"end": 1771,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1723,
											"end": 1773,
											"name": "tag",
											"source": 14,
											"value": "506"
										},
										{
											"begin": 1723,
											"end": 1773,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1792,
											"end": 1841,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "507"
										},
										{
											"begin": 1833,
											"end": 1840,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1824,
											"end": 1830,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1813,
											"end": 1822,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1809,
											"end": 1831,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1792,
											"end": 1841,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "485"
										},
										{
											"begin": 1792,
											"end": 1841,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1792,
											"end": 1841,
											"name": "tag",
											"source": 14,
											"value": "507"
										},
										{
											"begin": 1792,
											"end": 1841,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1782,
											"end": 1841,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 1527,
											"end": 1847,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1527,
											"end": 1847,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 1852,
											"end": 2444,
											"name": "tag",
											"source": 14,
											"value": "232"
										},
										{
											"begin": 1852,
											"end": 2444,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1947,
											"end": 1953,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1955,
											"end": 1961,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1963,
											"end": 1969,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1971,
											"end": 1977,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2024,
											"end": 2027,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 2012,
											"end": 2021,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2003,
											"end": 2010,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 1999,
											"end": 2022,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1995,
											"end": 2028,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 1992,
											"end": 2045,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1992,
											"end": 2045,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "509"
										},
										{
											"begin": 1992,
											"end": 2045,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2041,
											"end": 2042,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2038,
											"end": 2039,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2031,
											"end": 2043,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1992,
											"end": 2045,
											"name": "tag",
											"source": 14,
											"value": "509"
										},
										{
											"begin": 1992,
											"end": 2045,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2081,
											"end": 2090,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2068,
											"end": 2091,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 2114,
											"end": 2132,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2106,
											"end": 2112,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2103,
											"end": 2133,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 2100,
											"end": 2150,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2100,
											"end": 2150,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "510"
										},
										{
											"begin": 2100,
											"end": 2150,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2146,
											"end": 2147,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2143,
											"end": 2144,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2136,
											"end": 2148,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2100,
											"end": 2150,
											"name": "tag",
											"source": 14,
											"value": "510"
										},
										{
											"begin": 2100,
											"end": 2150,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2169,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "511"
										},
										{
											"begin": 2210,
											"end": 2217,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 2201,
											"end": 2207,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2190,
											"end": 2199,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 2186,
											"end": 2208,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2169,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "485"
										},
										{
											"begin": 2169,
											"end": 2218,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 2169,
											"end": 2218,
											"name": "tag",
											"source": 14,
											"value": "511"
										},
										{
											"begin": 2169,
											"end": 2218,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2159,
											"end": 2218,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 2159,
											"end": 2218,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2159,
											"end": 2218,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2268,
											"end": 2270,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2257,
											"end": 2266,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2253,
											"end": 2271,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2240,
											"end": 2272,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 2281,
											"end": 2312,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "512"
										},
										{
											"begin": 2306,
											"end": 2311,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2281,
											"end": 2312,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "497"
										},
										{
											"begin": 2281,
											"end": 2312,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 2281,
											"end": 2312,
											"name": "tag",
											"source": 14,
											"value": "512"
										},
										{
											"begin": 2281,
											"end": 2312,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1852,
											"end": 2444,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 1852,
											"end": 2444,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": 2331,
											"end": 2336,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 2331,
											"end": 2336,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2383,
											"end": 2385,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2368,
											"end": 2386,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2368,
											"end": 2386,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2355,
											"end": 2387,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 2355,
											"end": 2387,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2434,
											"end": 2436,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 2419,
											"end": 2437,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2406,
											"end": 2438,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 2406,
											"end": 2438,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1852,
											"end": 2444,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 2449,
											"end": 2633,
											"name": "tag",
											"source": 14,
											"value": "358"
										},
										{
											"begin": 2449,
											"end": 2633,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2519,
											"end": 2525,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2572,
											"end": 2574,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2560,
											"end": 2569,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2551,
											"end": 2558,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2547,
											"end": 2570,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2543,
											"end": 2575,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 2540,
											"end": 2592,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2540,
											"end": 2592,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "514"
										},
										{
											"begin": 2540,
											"end": 2592,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2588,
											"end": 2589,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2585,
											"end": 2586,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2578,
											"end": 2590,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2540,
											"end": 2592,
											"name": "tag",
											"source": 14,
											"value": "514"
										},
										{
											"begin": 2540,
											"end": 2592,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2611,
											"end": 2627,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2611,
											"end": 2627,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2449,
											"end": 2633,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2449,
											"end": 2633,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 2638,
											"end": 2944,
											"name": "tag",
											"source": 14,
											"value": "310"
										},
										{
											"begin": 2638,
											"end": 2944,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2726,
											"end": 2732,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2734,
											"end": 2740,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2742,
											"end": 2748,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2795,
											"end": 2797,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 2783,
											"end": 2792,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2774,
											"end": 2781,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 2770,
											"end": 2793,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2766,
											"end": 2798,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 2763,
											"end": 2815,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2763,
											"end": 2815,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "516"
										},
										{
											"begin": 2763,
											"end": 2815,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2811,
											"end": 2812,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2808,
											"end": 2809,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2801,
											"end": 2813,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2763,
											"end": 2815,
											"name": "tag",
											"source": 14,
											"value": "516"
										},
										{
											"begin": 2763,
											"end": 2815,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2840,
											"end": 2849,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2834,
											"end": 2850,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2824,
											"end": 2850,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2824,
											"end": 2850,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2890,
											"end": 2892,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2879,
											"end": 2888,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2875,
											"end": 2893,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2869,
											"end": 2894,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2859,
											"end": 2894,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2859,
											"end": 2894,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2934,
											"end": 2936,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2923,
											"end": 2932,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2919,
											"end": 2937,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2913,
											"end": 2938,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2903,
											"end": 2938,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2903,
											"end": 2938,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2638,
											"end": 2944,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2638,
											"end": 2944,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2638,
											"end": 2944,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2638,
											"end": 2944,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2638,
											"end": 2944,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2638,
											"end": 2944,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 6736,
											"end": 7333,
											"name": "tag",
											"source": 14,
											"value": "144"
										},
										{
											"begin": 6736,
											"end": 7333,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6848,
											"end": 6852,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6877,
											"end": 6879,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6906,
											"end": 6908,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6895,
											"end": 6904,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6888,
											"end": 6909,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6938,
											"end": 6944,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6932,
											"end": 6945,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 6981,
											"end": 6987,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6976,
											"end": 6978,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6965,
											"end": 6974,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 6961,
											"end": 6979,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6954,
											"end": 6988,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7006,
											"end": 7007,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7016,
											"end": 7156,
											"name": "tag",
											"source": 14,
											"value": "531"
										},
										{
											"begin": 7016,
											"end": 7156,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7030,
											"end": 7036,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7027,
											"end": 7028,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7024,
											"end": 7037,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 7016,
											"end": 7156,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 7016,
											"end": 7156,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "533"
										},
										{
											"begin": 7016,
											"end": 7156,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7125,
											"end": 7139,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 7125,
											"end": 7139,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7125,
											"end": 7139,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7121,
											"end": 7144,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7121,
											"end": 7144,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7115,
											"end": 7145,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 7091,
											"end": 7108,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 7091,
											"end": 7108,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7091,
											"end": 7108,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7110,
											"end": 7112,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 7087,
											"end": 7113,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7080,
											"end": 7146,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7045,
											"end": 7055,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7045,
											"end": 7055,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7016,
											"end": 7156,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "531"
										},
										{
											"begin": 7016,
											"end": 7156,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7016,
											"end": 7156,
											"name": "tag",
											"source": 14,
											"value": "533"
										},
										{
											"begin": 7016,
											"end": 7156,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7174,
											"end": 7180,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7171,
											"end": 7172,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7168,
											"end": 7181,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 7165,
											"end": 7256,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 7165,
											"end": 7256,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "534"
										},
										{
											"begin": 7165,
											"end": 7256,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7244,
											"end": 7245,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7239,
											"end": 7241,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 7230,
											"end": 7236,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7219,
											"end": 7228,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 7215,
											"end": 7237,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7211,
											"end": 7242,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7204,
											"end": 7246,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7165,
											"end": 7256,
											"name": "tag",
											"source": 14,
											"value": "534"
										},
										{
											"begin": 7165,
											"end": 7256,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7317,
											"end": 7319,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 7296,
											"end": 7311,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7292,
											"end": 7321,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 7277,
											"end": 7322,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7277,
											"end": 7322,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7277,
											"end": 7322,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7277,
											"end": 7322,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7324,
											"end": 7326,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 7273,
											"end": 7327,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7273,
											"end": 7327,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 6736,
											"end": 7333,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6736,
											"end": 7333,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 8401,
											"end": 8816,
											"name": "tag",
											"source": 14,
											"value": "396"
										},
										{
											"begin": 8401,
											"end": 8816,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8603,
											"end": 8605,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8585,
											"end": 8606,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 8585,
											"end": 8606,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8585,
											"end": 8606,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8642,
											"end": 8644,
											"name": "PUSH",
											"source": 14,
											"value": "33"
										},
										{
											"begin": 8622,
											"end": 8640,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8622,
											"end": 8640,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8622,
											"end": 8640,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8615,
											"end": 8645,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8681,
											"end": 8715,
											"name": "PUSH",
											"source": 14,
											"value": "7468657265206172656E277420656E6F75676820746F6B656E73206C6566742E"
										},
										{
											"begin": 8676,
											"end": 8678,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 8661,
											"end": 8679,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8661,
											"end": 8679,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8654,
											"end": 8716,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8151C9E4818481B1BDDD95C88185B5BDD5B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8747,
											"end": 8749,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 8732,
											"end": 8750,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8732,
											"end": 8750,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8725,
											"end": 8774,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8806,
											"end": 8809,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 8791,
											"end": 8810,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8791,
											"end": 8810,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8401,
											"end": 8816,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 10989,
											"end": 11389,
											"name": "tag",
											"source": 14,
											"value": "387"
										},
										{
											"begin": 10989,
											"end": 11389,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11191,
											"end": 11193,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 11173,
											"end": 11194,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11173,
											"end": 11194,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11173,
											"end": 11194,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11230,
											"end": 11232,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 11210,
											"end": 11228,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11210,
											"end": 11228,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11210,
											"end": 11228,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11203,
											"end": 11233,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11269,
											"end": 11303,
											"name": "PUSH",
											"source": 14,
											"value": "796F7527726520747279696E6720746F2062757920746F6F206D616E7920746F"
										},
										{
											"begin": 11264,
											"end": 11266,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 11249,
											"end": 11267,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11249,
											"end": 11267,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11242,
											"end": 11304,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6B656E73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11335,
											"end": 11337,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 11320,
											"end": 11338,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11320,
											"end": 11338,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11313,
											"end": 11347,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11379,
											"end": 11382,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 11364,
											"end": 11383,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11364,
											"end": 11383,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10989,
											"end": 11389,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 11394,
											"end": 11745,
											"name": "tag",
											"source": 14,
											"value": "261"
										},
										{
											"begin": 11394,
											"end": 11745,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11596,
											"end": 11598,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 11578,
											"end": 11599,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11578,
											"end": 11599,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11578,
											"end": 11599,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11635,
											"end": 11637,
											"name": "PUSH",
											"source": 14,
											"value": "1B"
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11608,
											"end": 11638,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11674,
											"end": 11703,
											"name": "PUSH",
											"source": 14,
											"value": "63616C6C6572206973206E6F742074686520696E69746961746F720000000000"
										},
										{
											"begin": 11669,
											"end": 11671,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 11654,
											"end": 11672,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11654,
											"end": 11672,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11647,
											"end": 11704,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11736,
											"end": 11738,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 11721,
											"end": 11739,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11721,
											"end": 11739,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11394,
											"end": 11745,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 12861,
											"end": 13263,
											"name": "tag",
											"source": 14,
											"value": "400"
										},
										{
											"begin": 12861,
											"end": 13263,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13063,
											"end": 13065,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 13045,
											"end": 13066,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 13045,
											"end": 13066,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13045,
											"end": 13066,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 13102,
											"end": 13104,
											"name": "PUSH",
											"source": 14,
											"value": "26"
										},
										{
											"begin": 13082,
											"end": 13100,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13082,
											"end": 13100,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13082,
											"end": 13100,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13075,
											"end": 13105,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 13141,
											"end": 13175,
											"name": "PUSH",
											"source": 14,
											"value": "6861726463617020697320726561636865642E205472792061206C6F77657220"
										},
										{
											"begin": 13136,
											"end": 13138,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 13121,
											"end": 13139,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13121,
											"end": 13139,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13114,
											"end": 13176,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "185B5BDD5B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13207,
											"end": 13209,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 13192,
											"end": 13210,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13192,
											"end": 13210,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13185,
											"end": 13221,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 13253,
											"end": 13256,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 13238,
											"end": 13257,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13238,
											"end": 13257,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12861,
											"end": 13263,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 13690,
											"end": 14030,
											"name": "tag",
											"source": 14,
											"value": "279"
										},
										{
											"begin": 13690,
											"end": 14030,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13892,
											"end": 13894,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 13874,
											"end": 13895,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 13874,
											"end": 13895,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13874,
											"end": 13895,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 13931,
											"end": 13933,
											"name": "PUSH",
											"source": 14,
											"value": "10"
										},
										{
											"begin": 13911,
											"end": 13929,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13911,
											"end": 13929,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13911,
											"end": 13929,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13904,
											"end": 13934,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1CD85B19481DD85CC818589BDC9D1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13965,
											"end": 13967,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 13950,
											"end": 13968,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13950,
											"end": 13968,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13943,
											"end": 13989,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14021,
											"end": 14023,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 14006,
											"end": 14024,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14006,
											"end": 14024,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13690,
											"end": 14030,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 14795,
											"end": 15150,
											"name": "tag",
											"source": 14,
											"value": "275"
										},
										{
											"begin": 14795,
											"end": 15150,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14997,
											"end": 14999,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 14979,
											"end": 15000,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 14979,
											"end": 15000,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14979,
											"end": 15000,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 15036,
											"end": 15038,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 15016,
											"end": 15034,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15016,
											"end": 15034,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15016,
											"end": 15034,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15009,
											"end": 15039,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 15075,
											"end": 15108,
											"name": "PUSH",
											"source": 14,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 15070,
											"end": 15072,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 15055,
											"end": 15073,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15055,
											"end": 15073,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15048,
											"end": 15109,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 15141,
											"end": 15143,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 15126,
											"end": 15144,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15126,
											"end": 15144,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14795,
											"end": 15150,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 15668,
											"end": 15796,
											"name": "tag",
											"source": 14,
											"value": "303"
										},
										{
											"begin": 15668,
											"end": 15796,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15708,
											"end": 15711,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15739,
											"end": 15740,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15735,
											"end": 15741,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 15732,
											"end": 15733,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15729,
											"end": 15742,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 15726,
											"end": 15765,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 15726,
											"end": 15765,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "560"
										},
										{
											"begin": 15726,
											"end": 15765,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 15745,
											"end": 15763,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "560"
										},
										{
											"begin": 15745,
											"end": 15763,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "561"
										},
										{
											"begin": 15745,
											"end": 15763,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 15745,
											"end": 15763,
											"name": "tag",
											"source": 14,
											"value": "560"
										},
										{
											"begin": 15745,
											"end": 15763,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15781,
											"end": 15790,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15781,
											"end": 15790,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15668,
											"end": 15796,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 15801,
											"end": 16018,
											"name": "tag",
											"source": 14,
											"value": "291"
										},
										{
											"begin": 15801,
											"end": 16018,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15841,
											"end": 15842,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15867,
											"end": 15868,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15857,
											"end": 15989,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "563"
										},
										{
											"begin": 15857,
											"end": 15989,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 15911,
											"end": 15921,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B71"
										},
										{
											"begin": 15906,
											"end": 15909,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 15902,
											"end": 15922,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 15899,
											"end": 15900,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15892,
											"end": 15923,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 15946,
											"end": 15950,
											"name": "PUSH",
											"source": 14,
											"value": "12"
										},
										{
											"begin": 15943,
											"end": 15944,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 15936,
											"end": 15951,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 15974,
											"end": 15978,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 15971,
											"end": 15972,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15964,
											"end": 15979,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 15857,
											"end": 15989,
											"name": "tag",
											"source": 14,
											"value": "563"
										},
										{
											"begin": 15857,
											"end": 15989,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16003,
											"end": 16012,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 16003,
											"end": 16012,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15801,
											"end": 16018,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 16023,
											"end": 16191,
											"name": "tag",
											"source": 14,
											"value": "293"
										},
										{
											"begin": 16023,
											"end": 16191,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16063,
											"end": 16070,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16129,
											"end": 16130,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16125,
											"end": 16126,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16121,
											"end": 16127,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 16117,
											"end": 16131,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 16114,
											"end": 16115,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 16111,
											"end": 16132,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 16106,
											"end": 16107,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16099,
											"end": 16108,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 16092,
											"end": 16109,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 16088,
											"end": 16133,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 16085,
											"end": 16156,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 16085,
											"end": 16156,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "566"
										},
										{
											"begin": 16085,
											"end": 16156,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 16136,
											"end": 16154,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "566"
										},
										{
											"begin": 16136,
											"end": 16154,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "561"
										},
										{
											"begin": 16136,
											"end": 16154,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 16136,
											"end": 16154,
											"name": "tag",
											"source": 14,
											"value": "566"
										},
										{
											"begin": 16136,
											"end": 16154,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16176,
											"end": 16185,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 16176,
											"end": 16185,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16023,
											"end": 16191,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 16196,
											"end": 16576,
											"name": "tag",
											"source": 14,
											"value": "405"
										},
										{
											"begin": 16196,
											"end": 16576,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16275,
											"end": 16276,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 16271,
											"end": 16283,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16271,
											"end": 16283,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16271,
											"end": 16283,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 16271,
											"end": 16283,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16318,
											"end": 16330,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16318,
											"end": 16330,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 16318,
											"end": 16330,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 16339,
											"end": 16400,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "568"
										},
										{
											"begin": 16339,
											"end": 16400,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 16393,
											"end": 16397,
											"name": "PUSH",
											"source": 14,
											"value": "7F"
										},
										{
											"begin": 16385,
											"end": 16391,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16381,
											"end": 16398,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 16371,
											"end": 16398,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16371,
											"end": 16398,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16339,
											"end": 16400,
											"name": "tag",
											"source": 14,
											"value": "568"
										},
										{
											"begin": 16339,
											"end": 16400,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16446,
											"end": 16448,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 16438,
											"end": 16444,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16435,
											"end": 16449,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 16415,
											"end": 16433,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16412,
											"end": 16450,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 16409,
											"end": 16570,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 16409,
											"end": 16570,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "569"
										},
										{
											"begin": 16409,
											"end": 16570,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 16492,
											"end": 16502,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B71"
										},
										{
											"begin": 16487,
											"end": 16490,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 16483,
											"end": 16503,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 16480,
											"end": 16481,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16473,
											"end": 16504,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 16527,
											"end": 16531,
											"name": "PUSH",
											"source": 14,
											"value": "22"
										},
										{
											"begin": 16524,
											"end": 16525,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 16517,
											"end": 16532,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 16555,
											"end": 16559,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 16552,
											"end": 16553,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16545,
											"end": 16560,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 16409,
											"end": 16570,
											"name": "tag",
											"source": 14,
											"value": "569"
										},
										{
											"begin": 16409,
											"end": 16570,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16409,
											"end": 16570,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16196,
											"end": 16576,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16196,
											"end": 16576,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16196,
											"end": 16576,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16196,
											"end": 16576,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 16581,
											"end": 16708,
											"name": "tag",
											"source": 14,
											"value": "561"
										},
										{
											"begin": 16581,
											"end": 16708,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16642,
											"end": 16652,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B71"
										},
										{
											"begin": 16637,
											"end": 16640,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 16633,
											"end": 16653,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 16630,
											"end": 16631,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16623,
											"end": 16654,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 16673,
											"end": 16677,
											"name": "PUSH",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 16670,
											"end": 16671,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 16663,
											"end": 16678,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 16697,
											"end": 16701,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 16694,
											"end": 16695,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16687,
											"end": 16702,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 16713,
											"end": 16840,
											"name": "tag",
											"source": 14,
											"value": "490"
										},
										{
											"begin": 16713,
											"end": 16840,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16774,
											"end": 16784,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B71"
										},
										{
											"begin": 16769,
											"end": 16772,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 16765,
											"end": 16785,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 16762,
											"end": 16763,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16755,
											"end": 16786,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 16805,
											"end": 16809,
											"name": "PUSH",
											"source": 14,
											"value": "41"
										},
										{
											"begin": 16802,
											"end": 16803,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 16795,
											"end": 16810,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 16829,
											"end": 16833,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 16826,
											"end": 16827,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16819,
											"end": 16834,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 16845,
											"end": 16976,
											"name": "tag",
											"source": 14,
											"value": "497"
										},
										{
											"begin": 16845,
											"end": 16976,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16920,
											"end": 16951,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16920,
											"end": 16951,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 16910,
											"end": 16952,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16910,
											"end": 16952,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 16900,
											"end": 16970,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "573"
										},
										{
											"begin": 16900,
											"end": 16970,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 16966,
											"end": 16967,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16963,
											"end": 16964,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 16956,
											"end": 16968,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 16900,
											"end": 16970,
											"name": "tag",
											"source": 14,
											"value": "573"
										},
										{
											"begin": 16900,
											"end": 16970,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16845,
											"end": 16976,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16845,
											"end": 16976,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"abortSale()": "03bcf11d",
							"buyTokensPublic()": "957f1474",
							"buyTokensWhitelist(bytes)": "59663174",
							"claimStaleEth()": "8f5d036b",
							"claimTokens()": "48c54b9d",
							"deadAddress()": "27c8f835",
							"description()": "7284e416",
							"endSaleAllowClaim()": "201a3419",
							"endTime()": "3197cbb6",
							"factory()": "c45a0155",
							"feeBP()": "017f6fae",
							"finalizeSale()": "58a687ec",
							"hardcap()": "b071cbe6",
							"imageUrl()": "aba83150",
							"liquidityLockDuration()": "4ae01d52",
							"liquidityShareBP()": "a611dc37",
							"listingTokensPerOneEth()": "a0f7ab35",
							"master()": "ee97f7f3",
							"maxBuyPerUser()": "de284b3a",
							"minBuyPerUser()": "12e409c5",
							"paused()": "5c975abb",
							"recipient()": "66d003ac",
							"router()": "f887ea40",
							"saleAborted()": "64db812e",
							"saleEnded()": "9b8906ae",
							"saleFinalized()": "a5f0dea2",
							"saleId()": "c84c0387",
							"saleInitiator()": "bca1da85",
							"saleTokensPerOneEth()": "c7bf5166",
							"signer()": "238ac933",
							"softcap()": "f89be593",
							"splitSignature(bytes)": "a7bb5803",
							"startTime()": "78e97925",
							"teamVestDuration()": "27a72c96",
							"teamVestEnabled()": "85bf4946",
							"token()": "fc0c546a",
							"tokenAmountForLiquidity()": "6ef2e4d3",
							"tokenAmountForSale()": "039ce157",
							"tokenTotalAmount()": "83b17fdd",
							"totalBuyEth()": "da2cbd50",
							"totalBuyTokens()": "d132a8f4",
							"userBuyAmount(address)": "6b7f3df3",
							"userVestDuration()": "ea44c1bc",
							"userVestEnabled()": "d4b9de51",
							"usersVestingWallets(address)": "3c876081",
							"verify(bytes,address,uint256,uint256)": "e49dce66",
							"whitelistEnabled()": "51fb012d",
							"wlStartTime()": "be9feb30"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_imageUrl\",\"type\":\"string\"},{\"internalType\":\"uint256[8]\",\"name\":\"_saleInputs\",\"type\":\"uint256[8]\"},{\"internalType\":\"bool\",\"name\":\"_whitelistEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_wlStartTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_liquidityLockDuration\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_router\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_saleInitiator\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Debug\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"abortSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyTokensPublic\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"buyTokensWhitelist\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimStaleEth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deadAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endSaleAllowClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Factory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeBP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finalizeSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hardcap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"imageUrl\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityLockDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityShareBP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listingTokensPerOneEth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"master\",\"outputs\":[{\"internalType\":\"contract ILaunchpadMaster\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxBuyPerUser\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minBuyPerUser\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"recipient\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"router\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Router02\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saleAborted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saleEnded\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saleFinalized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saleId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saleInitiator\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saleTokensPerOneEth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"signer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"softcap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"}],\"name\":\"splitSignature\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamVestDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamVestEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAmountForLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAmountForSale\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenTotalAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalBuyEth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalBuyTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userBuyAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"userVestDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"userVestEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"usersVestingWallets\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_saleId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_chainId\",\"type\":\"uint256\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"whitelistEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wlStartTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"launchpad/contracts/launchpadChild.sol\":\"LaunchpadChild\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x4a1a0ba12bf1a33f10d9fe226278cf59675c0b929d29e4da99658a079b27fb84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bda1319db846d6d6f92d8a57a9bdee8bde1dc39aa7546165791692c24dd6f30a\",\"dweb:/ipfs/Qma5oZ7DmbdAjd8mpiW7mx896PDtwsQtCQ2hj9Upf7b7JK\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0xe68ed7fb8766ed1e888291f881e36b616037f852b37d96877045319ad298ba87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d491a2ca79dbf44bc02e876e21a5847a2cbcc011188532ad8662cdc1c134a4e\",\"dweb:/ipfs/QmUQXhSV8ZvHLzfdG89ZNSh1nLrAYyjnNBLznJGwGcwVk8\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"launchpad/contracts/ILaunchpadMaster.sol\":{\"keccak256\":\"0x3a890dc151df49e903831be104d05e310a19263199554ea63337ea9ff9aca1e6\",\"urls\":[\"bzz-raw://3eb186c4b90932ac4704ab62cd43b2ce115108f35868180f82b47f38c0c5d59a\",\"dweb:/ipfs/QmTnuX4SYL2BygAYJoKHNoKn2yvkH49pWFkinPn2yp8NN8\"]},\"launchpad/contracts/IUniswapV2Factory.sol\":{\"keccak256\":\"0x7e199a801fd5a8edd07d39beabe4e759e3029fb4930a1934ed360f0485f766d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f86f80e0e4cb5efbd5bc71d8530cf67a1a3f0d08441e3d4517407bbe7fc2969\",\"dweb:/ipfs/QmeZoqqYGi2d6EpNx6bqnPdqcU5KBX2wqHU5WskMEKkdW2\"]},\"launchpad/contracts/IUniswapV2Router.sol\":{\"keccak256\":\"0x85e739829b533618da1f6467f3459717496c5c982f92d2a0c7df8bb7248f0ab5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b63e51c33ef66612e6a724eb8f84e66ace21d49b2600d105603235e13e674c4f\",\"dweb:/ipfs/QmWhcifYKLKnSvk2MyGQPjx77vXrjuQdWrC2L2d9SwPar9\"]},\"launchpad/contracts/launchpadChild.sol\":{\"keccak256\":\"0x1b9d32369f67fe2151c5885ffea0243a7341ffbe6d01be37c4ed952493621de3\",\"urls\":[\"bzz-raw://12010879961ca10a221c94b20e0073f2f44929ad173a33a2889237ec803be918\",\"dweb:/ipfs/QmWNNyUMvVY5tGjZWs5kbAQaiBZ15qYbdbuZimRqMCSmkv\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> launchpad/contracts/ILaunchpadMaster.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "launchpad/contracts/ILaunchpadMaster.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> launchpad/contracts/launchpadChild.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "launchpad/contracts/launchpadChild.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "9302",
				"formattedMessage": "Warning: Return value of low-level calls not used.\n   --> launchpad/contracts/launchpadChild.sol:318:5:\n    |\n318 |     msg.sender.call{value: amountToClaim}(\"\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Return value of low-level calls not used.",
				"severity": "warning",
				"sourceLocation": {
					"end": 11235,
					"file": "launchpad/contracts/launchpadChild.sol",
					"start": 11194
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "9302",
				"formattedMessage": "Warning: Return value of low-level calls not used.\n   --> launchpad/contracts/launchpadChild.sol:347:5:\n    |\n347 |     master.feesWallet().call{value: ((totalBuyEth * feeBP) / 10_000)}(\"\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Return value of low-level calls not used.",
				"severity": "warning",
				"sourceLocation": {
					"end": 12368,
					"file": "launchpad/contracts/launchpadChild.sol",
					"start": 12299
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "9302",
				"formattedMessage": "Warning: Return value of low-level calls not used.\n   --> launchpad/contracts/launchpadChild.sol:348:5:\n    |\n348 |     saleInitiator.call{value: address(this).balance}(\"\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Return value of low-level calls not used.",
				"severity": "warning",
				"sourceLocation": {
					"end": 12426,
					"file": "launchpad/contracts/launchpadChild.sol",
					"start": 12374
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							308
						],
						"Context": [
							908
						],
						"ERC165": [
							1135
						],
						"IAccessControl": [
							381
						],
						"IERC165": [
							1147
						],
						"Strings": [
							1111
						]
					},
					"id": 309,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 309,
							"sourceUnit": 382,
							"src": "133:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 309,
							"sourceUnit": 909,
							"src": "164:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../utils/Strings.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 309,
							"sourceUnit": 1112,
							"src": "195:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 309,
							"sourceUnit": 1136,
							"src": "226:43:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 908,
										"src": "1841:7:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "1841:7:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "IAccessControl",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 381,
										"src": "1850:14:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "1850:14:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "ERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1135,
										"src": "1866:6:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "1866:6:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "271:1534:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it."
							},
							"fullyImplemented": true,
							"id": 308,
							"linearizedBaseContracts": [
								308,
								1135,
								1147,
								381,
								908
							],
							"name": "AccessControl",
							"nameLocation": "1824:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 19,
									"members": [
										{
											"constant": false,
											"id": 16,
											"mutability": "mutable",
											"name": "members",
											"nameLocation": "1930:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 19,
											"src": "1905:32:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 15,
												"keyType": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1913:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1905:24:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueType": {
													"id": 14,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1924:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "1955:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 19,
											"src": "1947:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 17,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1947:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "1886:8:0",
									"nodeType": "StructDefinition",
									"scope": 308,
									"src": "1879:92:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 24,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2014:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 308,
									"src": "1977:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 23,
										"keyType": {
											"id": 20,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "1985:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "1977:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueType": {
											"id": 22,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 21,
												"name": "RoleData",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 19,
												"src": "1996:8:0"
											},
											"referencedDeclaration": 19,
											"src": "1996:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$19_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 27,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2051:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 308,
									"src": "2027:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 25,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2027:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 26,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2072:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "2495:58:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 33,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "2516:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 34,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 898,
																"src": "2522:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 35,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2522:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 32,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 124,
														"src": "2505:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2505:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "2505:30:0"
											},
											{
												"id": 38,
												"nodeType": "PlaceholderStatement",
												"src": "2545:1:0"
											}
										]
									},
									"documentation": {
										"id": 28,
										"nodeType": "StructuredDocumentation",
										"src": "2083:375:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with a standardized message including the required role.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n _Available since v4.1._"
									},
									"id": 40,
									"name": "onlyRole",
									"nameLocation": "2472:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2489:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2481:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 29,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2481:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2480:14:0"
									},
									"src": "2463:90:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1134
									],
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "2711:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 54,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 49,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "2728:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 51,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 381,
																		"src": "2748:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$381_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$381_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 50,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2743:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2743:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$381",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2743:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2728:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 57,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "2803:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 55,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2779:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$308_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1134,
															"src": "2779:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2779:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2728:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 48,
												"id": 60,
												"nodeType": "Return",
												"src": "2721:94:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "2559:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2629:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 45,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2687:8:0"
									},
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2654:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2647:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 42,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2647:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2646:20:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2705:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 46,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2705:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2704:6:0"
									},
									"scope": 308,
									"src": "2620:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										348
									],
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "3001:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 73,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "3018:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 75,
															"indexExpression": {
																"id": 74,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "3025:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3018:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$19_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 76,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "members",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 16,
														"src": "3018:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 78,
													"indexExpression": {
														"id": 77,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "3039:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3018:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 72,
												"id": 79,
												"nodeType": "Return",
												"src": "3011:36:0"
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "2828:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 81,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2918:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 69,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2977:8:0"
									},
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2934:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2926:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 64,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2926:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2948:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2940:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2925:31:0"
									},
									"returnParameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2995:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 70,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2995:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2994:6:0"
									},
									"scope": 308,
									"src": "2909:145:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 123,
										"nodeType": "Block",
										"src": "3408:419:0",
										"statements": [
											{
												"condition": {
													"id": 93,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3422:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 90,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 84,
																"src": "3431:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 91,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 86,
																"src": "3437:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 89,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "3423:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 92,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3423:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 122,
												"nodeType": "IfStatement",
												"src": "3418:403:0",
												"trueBody": {
													"id": 121,
													"nodeType": "Block",
													"src": "3447:374:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																						"id": 99,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3555:25:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						"value": "AccessControl: account "
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 104,
																										"name": "account",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 86,
																										"src": "3634:7:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 103,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "3626:7:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint160_$",
																										"typeString": "type(uint160)"
																									},
																									"typeName": {
																										"id": 102,
																										"name": "uint160",
																										"nodeType": "ElementaryTypeName",
																										"src": "3626:7:0",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 105,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "3626:16:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint160",
																									"typeString": "uint160"
																								}
																							},
																							{
																								"hexValue": "3230",
																								"id": 106,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "3644:2:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_20_by_1",
																									"typeString": "int_const 20"
																								},
																								"value": "20"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint160",
																									"typeString": "uint160"
																								},
																								{
																									"typeIdentifier": "t_rational_20_by_1",
																									"typeString": "int_const 20"
																								}
																							],
																							"expression": {
																								"id": 100,
																								"name": "Strings",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1111,
																								"src": "3606:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_Strings_$1111_$",
																									"typeString": "type(library Strings)"
																								}
																							},
																							"id": 101,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1110,
																							"src": "3606:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (uint256,uint256) pure returns (string memory)"
																							}
																						},
																						"id": 107,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3606:41:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					},
																					{
																						"hexValue": "206973206d697373696e6720726f6c6520",
																						"id": 108,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3673:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						"value": " is missing role "
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 113,
																										"name": "role",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 84,
																										"src": "3746:4:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									],
																									"id": 112,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "3738:7:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint256_$",
																										"typeString": "type(uint256)"
																									},
																									"typeName": {
																										"id": 111,
																										"name": "uint256",
																										"nodeType": "ElementaryTypeName",
																										"src": "3738:7:0",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 114,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "3738:13:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"hexValue": "3332",
																								"id": 115,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "3753:2:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								},
																								"value": "32"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								}
																							],
																							"expression": {
																								"id": 109,
																								"name": "Strings",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1111,
																								"src": "3718:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_Strings_$1111_$",
																									"typeString": "type(library Strings)"
																								}
																							},
																							"id": 110,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1110,
																							"src": "3718:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (uint256,uint256) pure returns (string memory)"
																							}
																						},
																						"id": 116,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3718:38:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						},
																						{
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					],
																					"expression": {
																						"id": 97,
																						"name": "abi",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967295,
																						"src": "3513:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_abi",
																							"typeString": "abi"
																						}
																					},
																					"id": 98,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberName": "encodePacked",
																					"nodeType": "MemberAccess",
																					"src": "3513:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																						"typeString": "function () pure returns (bytes memory)"
																					}
																				},
																				"id": 117,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3513:265:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 96,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3485:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																				"typeString": "type(string storage pointer)"
																			},
																			"typeName": {
																				"id": 95,
																				"name": "string",
																				"nodeType": "ElementaryTypeName",
																				"src": "3485:6:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 118,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3485:311:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 94,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "3461:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 119,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3461:349:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 120,
															"nodeType": "ExpressionStatement",
															"src": "3461:349:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "3060:270:0",
										"text": " @dev Revert with a standard message if `account` is missing `role`.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/"
									},
									"id": 124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3344:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3363:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "3355:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 83,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3355:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3377:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "3369:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3369:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3354:31:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3408:0:0"
									},
									"scope": 308,
									"src": "3335:492:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										356
									],
									"body": {
										"id": 138,
										"nodeType": "Block",
										"src": "4091:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 133,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 24,
															"src": "4108:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 135,
														"indexExpression": {
															"id": 134,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 127,
															"src": "4115:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4108:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$19_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 136,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 18,
													"src": "4108:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 132,
												"id": 137,
												"nodeType": "Return",
												"src": "4101:29:0"
											}
										]
									},
									"documentation": {
										"id": 125,
										"nodeType": "StructuredDocumentation",
										"src": "3833:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 139,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "4017:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 129,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4064:8:0"
									},
									"parameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4038:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "4030:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 126,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4030:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4029:14:0"
									},
									"returnParameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "4082:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 130,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4082:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4081:9:0"
									},
									"scope": 308,
									"src": "4008:129:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										364
									],
									"body": {
										"id": 158,
										"nodeType": "Block",
										"src": "4490:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 154,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 142,
															"src": "4511:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 155,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 144,
															"src": "4517:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 153,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 276,
														"src": "4500:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4500:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 157,
												"nodeType": "ExpressionStatement",
												"src": "4500:25:0"
											}
										]
									},
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "4143:239:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 159,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 149,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 142,
															"src": "4483:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 148,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 139,
														"src": "4470:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4470:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 151,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 147,
												"name": "onlyRole",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4461:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4461:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4396:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 146,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4452:8:0"
									},
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4414:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "4406:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 141,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4406:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4428:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "4420:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4420:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4405:31:0"
									},
									"returnParameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4490:0:0"
									},
									"scope": 308,
									"src": "4387:145:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										372
									],
									"body": {
										"id": 178,
										"nodeType": "Block",
										"src": "4870:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 174,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 162,
															"src": "4892:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 175,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 164,
															"src": "4898:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 173,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "4880:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4880:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 177,
												"nodeType": "ExpressionStatement",
												"src": "4880:26:0"
											}
										]
									},
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "4538:223:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 179,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 169,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 162,
															"src": "4863:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 168,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 139,
														"src": "4850:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4850:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 171,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 167,
												"name": "onlyRole",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4841:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4841:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4775:10:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 166,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4832:8:0"
									},
									"parameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4794:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "4786:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 161,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4786:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4808:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "4800:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4800:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4785:31:0"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4870:0:0"
									},
									"scope": 308,
									"src": "4766:147:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										380
									],
									"body": {
										"id": 201,
										"nodeType": "Block",
										"src": "5481:137:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 189,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 184,
																"src": "5499:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 190,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 898,
																	"src": "5510:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 191,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5510:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5499:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66",
															"id": 193,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5524:49:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															},
															"value": "AccessControl: can only renounce roles for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															}
														],
														"id": 188,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5491:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5491:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 195,
												"nodeType": "ExpressionStatement",
												"src": "5491:83:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 197,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 182,
															"src": "5597:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 198,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 184,
															"src": "5603:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 196,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "5585:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5585:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 200,
												"nodeType": "ExpressionStatement",
												"src": "5585:26:0"
											}
										]
									},
									"documentation": {
										"id": 180,
										"nodeType": "StructuredDocumentation",
										"src": "4919:480:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."
									},
									"functionSelector": "36568abe",
									"id": 202,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5413:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 186,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5472:8:0"
									},
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5434:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "5426:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 181,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5448:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "5440:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5440:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5425:31:0"
									},
									"returnParameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5481:0:0"
									},
									"scope": 308,
									"src": "5404:214:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 215,
										"nodeType": "Block",
										"src": "6325:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 211,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 205,
															"src": "6346:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 212,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 207,
															"src": "6352:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 210,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 276,
														"src": "6335:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6335:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 214,
												"nodeType": "ExpressionStatement",
												"src": "6335:25:0"
											}
										]
									},
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "5624:628:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ====\n NOTE: This function is deprecated in favor of {_grantRole}."
									},
									"id": 216,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setupRole",
									"nameLocation": "6266:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6285:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "6277:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 204,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6277:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6299:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "6291:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6291:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6276:31:0"
									},
									"returnParameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6325:0:0"
									},
									"scope": 308,
									"src": "6257:110:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 243,
										"nodeType": "Block",
										"src": "6565:174:0",
										"statements": [
											{
												"assignments": [
													225
												],
												"declarations": [
													{
														"constant": false,
														"id": 225,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "6583:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 243,
														"src": "6575:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 224,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "6575:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 229,
												"initialValue": {
													"arguments": [
														{
															"id": 227,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "6616:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 226,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 139,
														"src": "6603:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6603:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6575:46:0"
											},
											{
												"expression": {
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 230,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "6631:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 232,
															"indexExpression": {
																"id": 231,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 219,
																"src": "6638:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6631:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$19_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 233,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 18,
														"src": "6631:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 234,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 221,
														"src": "6656:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "6631:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 236,
												"nodeType": "ExpressionStatement",
												"src": "6631:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 238,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "6697:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 239,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 225,
															"src": "6703:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 240,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "6722:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 237,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 320,
														"src": "6680:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6680:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 242,
												"nodeType": "EmitStatement",
												"src": "6675:57:0"
											}
										]
									},
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "6373:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 244,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "6501:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6523:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "6515:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 218,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6515:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "6537:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "6529:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 220,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6529:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6514:33:0"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6565:0:0"
									},
									"scope": 308,
									"src": "6492:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 275,
										"nodeType": "Block",
										"src": "6929:165:0",
										"statements": [
											{
												"condition": {
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6943:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 253,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 247,
																"src": "6952:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 254,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 249,
																"src": "6958:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 252,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "6944:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 255,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6944:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 274,
												"nodeType": "IfStatement",
												"src": "6939:149:0",
												"trueBody": {
													"id": 273,
													"nodeType": "Block",
													"src": "6968:120:0",
													"statements": [
														{
															"expression": {
																"id": 264,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 257,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 24,
																				"src": "6982:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 259,
																			"indexExpression": {
																				"id": 258,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 247,
																				"src": "6989:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6982:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$19_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 260,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 16,
																		"src": "6982:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 262,
																	"indexExpression": {
																		"id": 261,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 249,
																		"src": "7003:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6982:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 263,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7014:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6982:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 265,
															"nodeType": "ExpressionStatement",
															"src": "6982:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 267,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 247,
																		"src": "7049:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 268,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 249,
																		"src": "7055:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 269,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 898,
																			"src": "7064:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 270,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7064:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 266,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 329,
																	"src": "7037:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 271,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7037:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 272,
															"nodeType": "EmitStatement",
															"src": "7032:45:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 245,
										"nodeType": "StructuredDocumentation",
										"src": "6745:111:0",
										"text": " @dev Grants `role` to `account`.\n Internal function without access restriction."
									},
									"id": 276,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6870:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6889:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6881:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 246,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6881:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6903:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6895:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6895:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6880:31:0"
									},
									"returnParameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6929:0:0"
									},
									"scope": 308,
									"src": "6861:233:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 306,
										"nodeType": "Block",
										"src": "7288:165:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 285,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 279,
															"src": "7310:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 286,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "7316:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 284,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 81,
														"src": "7302:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7302:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 305,
												"nodeType": "IfStatement",
												"src": "7298:149:0",
												"trueBody": {
													"id": 304,
													"nodeType": "Block",
													"src": "7326:121:0",
													"statements": [
														{
															"expression": {
																"id": 295,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 288,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 24,
																				"src": "7340:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 290,
																			"indexExpression": {
																				"id": 289,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 279,
																				"src": "7347:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7340:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$19_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 291,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 16,
																		"src": "7340:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 293,
																	"indexExpression": {
																		"id": 292,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 281,
																		"src": "7361:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7340:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 294,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7372:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "7340:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 296,
															"nodeType": "ExpressionStatement",
															"src": "7340:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 298,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 279,
																		"src": "7408:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 299,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 281,
																		"src": "7414:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 300,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 898,
																			"src": "7423:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 301,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7423:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 297,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 338,
																	"src": "7396:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 302,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7396:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 303,
															"nodeType": "EmitStatement",
															"src": "7391:45:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "7100:114:0",
										"text": " @dev Revokes `role` from `account`.\n Internal function without access restriction."
									},
									"id": 307,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "7228:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7248:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "7240:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 278,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7240:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7262:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "7254:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7254:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7239:31:0"
									},
									"returnParameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7288:0:0"
									},
									"scope": 308,
									"src": "7219:234:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 309,
							"src": "1806:5649:0",
							"usedErrors": []
						}
					],
					"src": "108:7348:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							381
						]
					},
					"id": 382,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 310,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "94:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 311,
								"nodeType": "StructuredDocumentation",
								"src": "119:89:1",
								"text": " @dev External interface of AccessControl declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 381,
							"linearizedBaseContracts": [
								381
							],
							"name": "IAccessControl",
							"nameLocation": "219:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 312,
										"nodeType": "StructuredDocumentation",
										"src": "240:292:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"
									},
									"id": 320,
									"name": "RoleAdminChanged",
									"nameLocation": "543:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "576:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "560:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 313,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "560:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 316,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "598:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "582:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 315,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "582:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 318,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "633:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "617:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 317,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "617:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "559:87:1"
									},
									"src": "537:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 321,
										"nodeType": "StructuredDocumentation",
										"src": "653:212:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
									},
									"id": 329,
									"name": "RoleGranted",
									"nameLocation": "876:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 323,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "904:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "888:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 322,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "888:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 325,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "926:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "910:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "910:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 327,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "951:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "935:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 326,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "887:71:1"
									},
									"src": "870:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 330,
										"nodeType": "StructuredDocumentation",
										"src": "965:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"id": 338,
									"name": "RoleRevoked",
									"nameLocation": "1251:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1279:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "1263:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 331,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1263:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1301:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "1285:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1285:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 336,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1326:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "1310:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1310:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1262:71:1"
									},
									"src": "1245:89:1"
								},
								{
									"documentation": {
										"id": 339,
										"nodeType": "StructuredDocumentation",
										"src": "1340:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 348,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1430:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1446:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "1438:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 340,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1438:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1460:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "1452:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 342,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1452:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1437:31:1"
									},
									"returnParameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "1492:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 345,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1492:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1491:6:1"
									},
									"scope": 381,
									"src": "1421:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 349,
										"nodeType": "StructuredDocumentation",
										"src": "1504:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 356,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "1702:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1723:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "1715:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 350,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1715:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1714:14:1"
									},
									"returnParameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "1752:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 353,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1752:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1751:9:1"
									},
									"scope": 381,
									"src": "1693:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 357,
										"nodeType": "StructuredDocumentation",
										"src": "1767:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 364,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2020:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2038:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "2030:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 358,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2030:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2052:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "2044:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 360,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2044:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2029:31:1"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2069:0:1"
									},
									"scope": 381,
									"src": "2011:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 365,
										"nodeType": "StructuredDocumentation",
										"src": "2076:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 372,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2313:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2332:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "2324:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 366,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2324:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2346:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "2338:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2338:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2323:31:1"
									},
									"returnParameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2363:0:1"
									},
									"scope": 381,
									"src": "2304:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "2370:480:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."
									},
									"functionSelector": "36568abe",
									"id": 380,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "2864:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2885:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "2877:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 374,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2877:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2899:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "2891:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 376,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2876:31:1"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2916:0:1"
									},
									"scope": 381,
									"src": "2855:62:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 382,
							"src": "209:2710:1",
							"usedErrors": []
						}
					],
					"src": "94:2826:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							908
						],
						"Pausable": [
							473
						]
					},
					"id": 474,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 383,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "90:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 384,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 474,
							"sourceUnit": 909,
							"src": "115:30:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 386,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 908,
										"src": "617:7:2"
									},
									"id": 387,
									"nodeType": "InheritanceSpecifier",
									"src": "617:7:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 385,
								"nodeType": "StructuredDocumentation",
								"src": "147:439:2",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 473,
							"linearizedBaseContracts": [
								473,
								908
							],
							"name": "Pausable",
							"nameLocation": "605:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "631:73:2",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"id": 392,
									"name": "Paused",
									"nameLocation": "715:6:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "730:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "722:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "722:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "721:17:2"
									},
									"src": "709:30:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 393,
										"nodeType": "StructuredDocumentation",
										"src": "745:70:2",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"id": 397,
									"name": "Unpaused",
									"nameLocation": "826:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "843:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "835:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "835:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "834:17:2"
									},
									"src": "820:32:2"
								},
								{
									"constant": false,
									"id": 399,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "871:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 473,
									"src": "858:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 398,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "858:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 407,
										"nodeType": "Block",
										"src": "971:32:2",
										"statements": [
											{
												"expression": {
													"id": 405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 403,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 399,
														"src": "981:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 404,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "991:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "981:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 406,
												"nodeType": "ExpressionStatement",
												"src": "981:15:2"
											}
										]
									},
									"documentation": {
										"id": 400,
										"nodeType": "StructuredDocumentation",
										"src": "885:67:2",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 408,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "968:2:2"
									},
									"returnParameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "971:0:2"
									},
									"scope": 473,
									"src": "957:46:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 416,
										"nodeType": "Block",
										"src": "1151:31:2",
										"statements": [
											{
												"expression": {
													"id": 414,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 399,
													"src": "1168:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 413,
												"id": 415,
												"nodeType": "Return",
												"src": "1161:14:2"
											}
										]
									},
									"documentation": {
										"id": 409,
										"nodeType": "StructuredDocumentation",
										"src": "1009:84:2",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 417,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1107:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1113:2:2"
									},
									"returnParameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "1145:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 411,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1145:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1144:6:2"
									},
									"scope": 473,
									"src": "1098:84:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 428,
										"nodeType": "Block",
										"src": "1393:66:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 423,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1411:9:2",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 421,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "1412:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 422,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1412:8:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 424,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1422:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 420,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1403:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1403:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 426,
												"nodeType": "ExpressionStatement",
												"src": "1403:38:2"
											},
											{
												"id": 427,
												"nodeType": "PlaceholderStatement",
												"src": "1451:1:2"
											}
										]
									},
									"documentation": {
										"id": 418,
										"nodeType": "StructuredDocumentation",
										"src": "1188:175:2",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 429,
									"name": "whenNotPaused",
									"nameLocation": "1377:13:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1390:2:2"
									},
									"src": "1368:91:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 439,
										"nodeType": "Block",
										"src": "1659:69:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 433,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 417,
																"src": "1677:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1677:8:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 435,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1687:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 432,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1669:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1669:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 437,
												"nodeType": "ExpressionStatement",
												"src": "1669:41:2"
											},
											{
												"id": 438,
												"nodeType": "PlaceholderStatement",
												"src": "1720:1:2"
											}
										]
									},
									"documentation": {
										"id": 430,
										"nodeType": "StructuredDocumentation",
										"src": "1465:167:2",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 440,
									"name": "whenPaused",
									"nameLocation": "1646:10:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1656:2:2"
									},
									"src": "1637:91:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 455,
										"nodeType": "Block",
										"src": "1912:66:2",
										"statements": [
											{
												"expression": {
													"id": 448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 446,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 399,
														"src": "1922:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 447,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1932:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1922:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 449,
												"nodeType": "ExpressionStatement",
												"src": "1922:14:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 451,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 898,
																"src": "1958:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 452,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1958:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 450,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 392,
														"src": "1951:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1951:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 454,
												"nodeType": "EmitStatement",
												"src": "1946:25:2"
											}
										]
									},
									"documentation": {
										"id": 441,
										"nodeType": "StructuredDocumentation",
										"src": "1734:124:2",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 456,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 444,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 443,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 429,
												"src": "1898:13:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1898:13:2"
										}
									],
									"name": "_pause",
									"nameLocation": "1872:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1878:2:2"
									},
									"returnParameters": {
										"id": 445,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1912:0:2"
									},
									"scope": 473,
									"src": "1863:115:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 471,
										"nodeType": "Block",
										"src": "2158:69:2",
										"statements": [
											{
												"expression": {
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 462,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 399,
														"src": "2168:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 463,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2178:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2168:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 465,
												"nodeType": "ExpressionStatement",
												"src": "2168:15:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 467,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 898,
																"src": "2207:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2207:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 466,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 397,
														"src": "2198:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2198:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 470,
												"nodeType": "EmitStatement",
												"src": "2193:27:2"
											}
										]
									},
									"documentation": {
										"id": 457,
										"nodeType": "StructuredDocumentation",
										"src": "1984:121:2",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 472,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 460,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 459,
												"name": "whenPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 440,
												"src": "2147:10:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2147:10:2"
										}
									],
									"name": "_unpause",
									"nameLocation": "2119:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2127:2:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2158:0:2"
									},
									"scope": 473,
									"src": "2110:117:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 474,
							"src": "587:1642:2",
							"usedErrors": []
						}
					],
					"src": "90:2140:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							513
						]
					},
					"id": 514,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 475,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "97:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 476,
								"nodeType": "StructuredDocumentation",
								"src": "122:750:3",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 513,
							"linearizedBaseContracts": [
								513
							],
							"name": "ReentrancyGuard",
							"nameLocation": "891:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 479,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1686:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 513,
									"src": "1661:41:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 477,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1661:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 478,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1701:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 482,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1733:8:3",
									"nodeType": "VariableDeclaration",
									"scope": 513,
									"src": "1708:37:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 480,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1708:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 481,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1744:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 484,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1768:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 513,
									"src": "1752:23:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 483,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1752:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 491,
										"nodeType": "Block",
										"src": "1796:39:3",
										"statements": [
											{
												"expression": {
													"id": 489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 487,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 484,
														"src": "1806:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 488,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 479,
														"src": "1816:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1806:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 490,
												"nodeType": "ExpressionStatement",
												"src": "1806:22:3"
											}
										]
									},
									"id": 492,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:3"
									},
									"returnParameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1796:0:3"
									},
									"scope": 513,
									"src": "1782:53:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 511,
										"nodeType": "Block",
										"src": "2236:421:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 498,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 496,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 484,
																"src": "2325:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 497,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 482,
																"src": "2336:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2325:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 499,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2346:33:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 495,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2317:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2317:63:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 501,
												"nodeType": "ExpressionStatement",
												"src": "2317:63:3"
											},
											{
												"expression": {
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 502,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 484,
														"src": "2455:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 503,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 482,
														"src": "2465:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2455:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 505,
												"nodeType": "ExpressionStatement",
												"src": "2455:18:3"
											},
											{
												"id": 506,
												"nodeType": "PlaceholderStatement",
												"src": "2484:1:3"
											},
											{
												"expression": {
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 507,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 484,
														"src": "2628:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 508,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 479,
														"src": "2638:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2628:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 510,
												"nodeType": "ExpressionStatement",
												"src": "2628:22:3"
											}
										]
									},
									"documentation": {
										"id": 493,
										"nodeType": "StructuredDocumentation",
										"src": "1841:366:3",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 512,
									"name": "nonReentrant",
									"nameLocation": "2221:12:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2233:2:3"
									},
									"src": "2212:445:3",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 514,
							"src": "873:1786:3",
							"usedErrors": []
						}
					],
					"src": "97:2563:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							591
						]
					},
					"id": 592,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 515,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 516,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:4",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 591,
							"linearizedBaseContracts": [
								591
							],
							"name": "IERC20",
							"nameLocation": "212:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 517,
										"nodeType": "StructuredDocumentation",
										"src": "225:66:4",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 522,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "305:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "316:2:4"
									},
									"returnParameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "342:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 519,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "342:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "341:9:4"
									},
									"scope": 591,
									"src": "296:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 523,
										"nodeType": "StructuredDocumentation",
										"src": "357:72:4",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 530,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "443:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "461:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "453:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 524,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "453:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "452:17:4"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "493:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "493:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "492:9:4"
									},
									"scope": 591,
									"src": "434:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 531,
										"nodeType": "StructuredDocumentation",
										"src": "508:202:4",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 540,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "724:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "741:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "733:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "733:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "753:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "745:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "745:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "732:28:4"
									},
									"returnParameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "779:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 537,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "779:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "778:6:4"
									},
									"scope": 591,
									"src": "715:70:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 541,
										"nodeType": "StructuredDocumentation",
										"src": "791:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 550,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1069:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1087:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "1079:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1079:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1102:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "1094:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1078:32:4"
									},
									"returnParameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "1134:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1134:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1133:9:4"
									},
									"scope": 591,
									"src": "1060:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 551,
										"nodeType": "StructuredDocumentation",
										"src": "1149:642:4",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 560,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1805:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1821:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "1813:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 552,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1813:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1838:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "1830:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 554,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1830:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1812:33:4"
									},
									"returnParameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "1864:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 557,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1864:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1863:6:4"
									},
									"scope": 591,
									"src": "1796:74:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 561,
										"nodeType": "StructuredDocumentation",
										"src": "1876:287:4",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 572,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2177:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2207:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "2199:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 562,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2199:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2229:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "2221:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 564,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2221:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2249:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "2241:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2241:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2189:72:4"
									},
									"returnParameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "2280:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 569,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2280:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2279:6:4"
									},
									"scope": 591,
									"src": "2168:118:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 573,
										"nodeType": "StructuredDocumentation",
										"src": "2292:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 581,
									"name": "Transfer",
									"nameLocation": "2461:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 575,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2486:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "2470:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 574,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2470:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 577,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2508:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "2492:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 576,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2492:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 579,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2520:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "2512:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 578,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2512:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2469:57:4"
									},
									"src": "2455:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 582,
										"nodeType": "StructuredDocumentation",
										"src": "2533:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 590,
									"name": "Approval",
									"nameLocation": "2692:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 584,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2717:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "2701:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 583,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 586,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2740:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "2724:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2724:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 588,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2757:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "2749:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2749:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2700:63:4"
									},
									"src": "2686:78:4"
								}
							],
							"scope": 592,
							"src": "202:2564:4",
							"usedErrors": []
						}
					],
					"src": "106:2661:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							886
						]
					},
					"id": 887,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 593,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 594,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:5",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 886,
							"linearizedBaseContracts": [
								886
							],
							"name": "Address",
							"nameLocation": "202:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 608,
										"nodeType": "Block",
										"src": "1241:254:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 602,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 597,
																"src": "1465:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 603,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 604,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 605,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 601,
												"id": 607,
												"nodeType": "Return",
												"src": "1458:30:5"
											}
										]
									},
									"documentation": {
										"id": 595,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:5",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 609,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "1195:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:5"
									},
									"returnParameters": {
										"id": 601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "1235:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 599,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:5"
									},
									"scope": 886,
									"src": "1175:320:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 642,
										"nodeType": "Block",
										"src": "2483:241:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 624,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 620,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$886",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$886",
																				"typeString": "library Address"
																			}
																		],
																		"id": 619,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 618,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 621,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 622,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 623,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 614,
																"src": "2526:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 625,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 617,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 627,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:5"
											},
											{
												"assignments": [
													629,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 629,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 642,
														"src": "2578:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 628,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 636,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 634,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 630,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 612,
																"src": "2596:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 633,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 632,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 614,
																"src": "2618:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 638,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 629,
															"src": "2647:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 639,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 637,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 641,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:5"
											}
										]
									},
									"documentation": {
										"id": 610,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:5",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 643,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "2431:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 611,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:5",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "2458:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 613,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:5"
									},
									"returnParameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:5"
									},
									"scope": 886,
									"src": "2412:312:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 659,
										"nodeType": "Block",
										"src": "3555:84:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 654,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 646,
															"src": "3585:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 655,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 648,
															"src": "3593:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 656,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3599:32:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 653,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															660,
															680
														],
														"referencedDeclaration": 680,
														"src": "3572:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 652,
												"id": 658,
												"nodeType": "Return",
												"src": "3565:67:5"
											}
										]
									},
									"documentation": {
										"id": 644,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:5",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 660,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "3488:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 645,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "3504:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 647,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:5"
									},
									"returnParameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "3541:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 650,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:5"
									},
									"scope": 886,
									"src": "3466:173:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 679,
										"nodeType": "Block",
										"src": "4008:76:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 673,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 663,
															"src": "4047:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 674,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "4055:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 675,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4061:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 676,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "4064:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 672,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															700,
															750
														],
														"referencedDeclaration": 750,
														"src": "4025:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4025:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 671,
												"id": 678,
												"nodeType": "Return",
												"src": "4018:59:5"
											}
										]
									},
									"documentation": {
										"id": 661,
										"nodeType": "StructuredDocumentation",
										"src": "3645:211:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 680,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3870:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3900:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "3892:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 662,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3892:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3929:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "3916:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 664,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3916:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3957:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "3943:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 666,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3943:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3882:93:5"
									},
									"returnParameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "3994:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 669,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3994:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3993:14:5"
									},
									"scope": 886,
									"src": "3861:223:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 699,
										"nodeType": "Block",
										"src": "4589:111:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 693,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 683,
															"src": "4628:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 694,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "4636:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 695,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "4642:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 696,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4649:43:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 692,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															700,
															750
														],
														"referencedDeclaration": 750,
														"src": "4606:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4606:87:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 691,
												"id": 698,
												"nodeType": "Return",
												"src": "4599:94:5"
											}
										]
									},
									"documentation": {
										"id": 681,
										"nodeType": "StructuredDocumentation",
										"src": "4090:351:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 700,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4455:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4494:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "4486:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4486:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4523:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "4510:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 684,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4510:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4545:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "4537:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4537:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4476:80:5"
									},
									"returnParameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "4575:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 689,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4575:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4574:14:5"
									},
									"scope": 886,
									"src": "4446:254:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "5127:320:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 721,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 717,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5153:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$886",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$886",
																				"typeString": "library Address"
																			}
																		],
																		"id": 716,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5145:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 715,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5145:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 718,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5145:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 719,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5145:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 720,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 707,
																"src": "5170:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5145:30:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 722,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5177:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 714,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5137:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5137:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 724,
												"nodeType": "ExpressionStatement",
												"src": "5137:81:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 727,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 703,
																	"src": "5247:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 726,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 609,
																"src": "5236:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 728,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5236:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 729,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5256:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 725,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5228:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5228:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 731,
												"nodeType": "ExpressionStatement",
												"src": "5228:60:5"
											},
											{
												"assignments": [
													733,
													735
												],
												"declarations": [
													{
														"constant": false,
														"id": 733,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5305:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 749,
														"src": "5300:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 732,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5300:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 735,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5327:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 749,
														"src": "5314:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 734,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5314:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 742,
												"initialValue": {
													"arguments": [
														{
															"id": 740,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "5367:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 736,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 703,
																"src": "5341:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 737,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5341:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 739,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 738,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 707,
																"src": "5360:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5341:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5341:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5299:73:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 744,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 733,
															"src": "5406:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 745,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 735,
															"src": "5415:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 746,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "5427:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 743,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 885,
														"src": "5389:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:51:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 713,
												"id": 748,
												"nodeType": "Return",
												"src": "5382:58:5"
											}
										]
									},
									"documentation": {
										"id": 701,
										"nodeType": "StructuredDocumentation",
										"src": "4706:237:5",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4957:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 703,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4996:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "4988:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 702,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4988:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5025:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "5012:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 704,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5012:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5047:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "5039:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 706,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5039:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5076:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "5062:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 708,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5062:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4978:116:5"
									},
									"returnParameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "5113:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 711,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5113:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5112:14:5"
									},
									"scope": 886,
									"src": "4948:499:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "5724:97:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 761,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "5760:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 762,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "5768:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 763,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5774:39:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 760,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															767,
															802
														],
														"referencedDeclaration": 802,
														"src": "5741:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5741:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 759,
												"id": 765,
												"nodeType": "Return",
												"src": "5734:80:5"
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "5453:166:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5633:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5660:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "5652:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5652:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5681:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "5668:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 754,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5668:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5651:35:5"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "5710:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 757,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5710:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5709:14:5"
									},
									"scope": 886,
									"src": "5624:197:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 801,
										"nodeType": "Block",
										"src": "6163:228:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 781,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 770,
																	"src": "6192:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 780,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 609,
																"src": "6181:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 782,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6181:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 783,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6201:38:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 779,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6173:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6173:67:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 785,
												"nodeType": "ExpressionStatement",
												"src": "6173:67:5"
											},
											{
												"assignments": [
													787,
													789
												],
												"declarations": [
													{
														"constant": false,
														"id": 787,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6257:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 801,
														"src": "6252:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 786,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6252:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 789,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6279:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 801,
														"src": "6266:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 788,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6266:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 794,
												"initialValue": {
													"arguments": [
														{
															"id": 792,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 772,
															"src": "6311:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 790,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "6293:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 791,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6293:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6293:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6251:65:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 796,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 787,
															"src": "6350:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 797,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 789,
															"src": "6359:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 798,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 774,
															"src": "6371:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 795,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 885,
														"src": "6333:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6333:51:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 778,
												"id": 800,
												"nodeType": "Return",
												"src": "6326:58:5"
											}
										]
									},
									"documentation": {
										"id": 768,
										"nodeType": "StructuredDocumentation",
										"src": "5827:173:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 802,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6014:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6050:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "6042:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6042:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6079:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "6066:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 771,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6066:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6107:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "6093:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 773,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6093:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6032:93:5"
									},
									"returnParameters": {
										"id": 778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 777,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "6149:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 776,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6149:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6148:14:5"
									},
									"scope": 886,
									"src": "6005:386:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 818,
										"nodeType": "Block",
										"src": "6667:101:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 813,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 805,
															"src": "6705:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 814,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 807,
															"src": "6713:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 815,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6719:41:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 812,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															819,
															854
														],
														"referencedDeclaration": 854,
														"src": "6684:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6684:77:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 811,
												"id": 817,
												"nodeType": "Return",
												"src": "6677:84:5"
											}
										]
									},
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "6397:168:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 819,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6579:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6608:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "6600:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6600:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "6616:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 806,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6599:35:5"
									},
									"returnParameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "6653:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 809,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6653:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6652:14:5"
									},
									"scope": 886,
									"src": "6570:198:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 853,
										"nodeType": "Block",
										"src": "7109:232:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 833,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 822,
																	"src": "7138:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 832,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 609,
																"src": "7127:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 834,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7127:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 835,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7147:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 831,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7119:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7119:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 837,
												"nodeType": "ExpressionStatement",
												"src": "7119:69:5"
											},
											{
												"assignments": [
													839,
													841
												],
												"declarations": [
													{
														"constant": false,
														"id": 839,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7205:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 853,
														"src": "7200:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 838,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7200:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 841,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7227:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 853,
														"src": "7214:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 840,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7214:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 846,
												"initialValue": {
													"arguments": [
														{
															"id": 844,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 824,
															"src": "7261:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 842,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 822,
															"src": "7241:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 843,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7241:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7241:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7199:67:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 848,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 839,
															"src": "7300:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 849,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 841,
															"src": "7309:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 850,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 826,
															"src": "7321:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 847,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 885,
														"src": "7283:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7283:51:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 830,
												"id": 852,
												"nodeType": "Return",
												"src": "7276:58:5"
											}
										]
									},
									"documentation": {
										"id": 820,
										"nodeType": "StructuredDocumentation",
										"src": "6774:175:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 854,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6963:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7001:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "6993:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 821,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6993:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7030:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "7017:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 823,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7017:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7058:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "7044:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 825,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7044:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6983:93:5"
									},
									"returnParameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "7095:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 828,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7095:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7094:14:5"
									},
									"scope": 886,
									"src": "6954:387:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 884,
										"nodeType": "Block",
										"src": "7721:532:5",
										"statements": [
											{
												"condition": {
													"id": 866,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 857,
													"src": "7735:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 882,
													"nodeType": "Block",
													"src": "7792:455:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 873,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 870,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 859,
																		"src": "7876:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 871,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7876:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 872,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7896:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7876:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 880,
																"nodeType": "Block",
																"src": "8184:53:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 877,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 861,
																					"src": "8209:12:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 876,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8202:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 878,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8202:20:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 879,
																		"nodeType": "ExpressionStatement",
																		"src": "8202:20:5"
																	}
																]
															},
															"id": 881,
															"nodeType": "IfStatement",
															"src": "7872:365:5",
															"trueBody": {
																"id": 875,
																"nodeType": "Block",
																"src": "7899:279:5",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8019:145:5",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8041:40:5",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8070:10:5"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8064:5:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8064:17:5"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8045:15:5",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8113:2:5",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8117:10:5"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8109:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8109:19:5"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8130:15:5"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8102:6:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8102:44:5"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8102:44:5"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 859,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8070:10:5",
																				"valueSize": 1
																			},
																			{
																				"declaration": 859,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8117:10:5",
																				"valueSize": 1
																			}
																		],
																		"id": 874,
																		"nodeType": "InlineAssembly",
																		"src": "8010:154:5"
																	}
																]
															}
														}
													]
												},
												"id": 883,
												"nodeType": "IfStatement",
												"src": "7731:516:5",
												"trueBody": {
													"id": 869,
													"nodeType": "Block",
													"src": "7744:42:5",
													"statements": [
														{
															"expression": {
																"id": 867,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 859,
																"src": "7765:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 865,
															"id": 868,
															"nodeType": "Return",
															"src": "7758:17:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "7347:209:5",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 885,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7570:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7601:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "7596:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 856,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7596:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7631:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "7618:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 858,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7618:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7665:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "7651:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 860,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7651:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7586:97:5"
									},
									"returnParameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "7707:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 863,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7707:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:14:5"
									},
									"scope": 886,
									"src": "7561:692:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 887,
							"src": "194:8061:5",
							"usedErrors": []
						}
					],
					"src": "101:8155:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							908
						]
					},
					"id": 909,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 888,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 889,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 908,
							"linearizedBaseContracts": [
								908
							],
							"name": "Context",
							"nameLocation": "626:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 897,
										"nodeType": "Block",
										"src": "702:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 894,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 893,
												"id": 896,
												"nodeType": "Return",
												"src": "712:17:6"
											}
										]
									},
									"id": 898,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 890,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:6"
									},
									"returnParameters": {
										"id": 893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 892,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "693:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 891,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:6"
									},
									"scope": 908,
									"src": "640:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 906,
										"nodeType": "Block",
										"src": "809:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 903,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 902,
												"id": 905,
												"nodeType": "Return",
												"src": "819:15:6"
											}
										]
									},
									"id": 907,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:6"
									},
									"returnParameters": {
										"id": 902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 901,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "793:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 900,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:6"
									},
									"scope": 908,
									"src": "742:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 909,
							"src": "608:235:6",
							"usedErrors": []
						}
					],
					"src": "86:758:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Strings": [
							1111
						]
					},
					"id": 1112,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 910,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 911,
								"nodeType": "StructuredDocumentation",
								"src": "111:34:7",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1111,
							"linearizedBaseContracts": [
								1111
							],
							"name": "Strings",
							"nameLocation": "154:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 914,
									"mutability": "constant",
									"name": "_HEX_SYMBOLS",
									"nameLocation": "193:12:7",
									"nodeType": "VariableDeclaration",
									"scope": 1111,
									"src": "168:58:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 912,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "168:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 913,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "208:18:7",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 992,
										"nodeType": "Block",
										"src": "399:632:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 924,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 922,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 917,
														"src": "601:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 923,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "610:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "601:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 928,
												"nodeType": "IfStatement",
												"src": "597:51:7",
												"trueBody": {
													"id": 927,
													"nodeType": "Block",
													"src": "613:35:7",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 925,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "634:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																	"typeString": "literal_string \"0\""
																},
																"value": "0"
															},
															"functionReturnParameters": 921,
															"id": 926,
															"nodeType": "Return",
															"src": "627:10:7"
														}
													]
												}
											},
											{
												"assignments": [
													930
												],
												"declarations": [
													{
														"constant": false,
														"id": 930,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "665:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 992,
														"src": "657:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 929,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "657:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 932,
												"initialValue": {
													"id": 931,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 917,
													"src": "672:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "657:20:7"
											},
											{
												"assignments": [
													934
												],
												"declarations": [
													{
														"constant": false,
														"id": 934,
														"mutability": "mutable",
														"name": "digits",
														"nameLocation": "695:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 992,
														"src": "687:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 933,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "687:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 935,
												"nodeType": "VariableDeclarationStatement",
												"src": "687:14:7"
											},
											{
												"body": {
													"id": 946,
													"nodeType": "Block",
													"src": "729:57:7",
													"statements": [
														{
															"expression": {
																"id": 940,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "743:8:7",
																"subExpression": {
																	"id": 939,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 934,
																	"src": "743:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 941,
															"nodeType": "ExpressionStatement",
															"src": "743:8:7"
														},
														{
															"expression": {
																"id": 944,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 942,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 930,
																	"src": "765:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 943,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "773:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "765:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 945,
															"nodeType": "ExpressionStatement",
															"src": "765:10:7"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 936,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 930,
														"src": "718:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 937,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "726:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "718:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 947,
												"nodeType": "WhileStatement",
												"src": "711:75:7"
											},
											{
												"assignments": [
													949
												],
												"declarations": [
													{
														"constant": false,
														"id": 949,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "808:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 992,
														"src": "795:19:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 948,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "795:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 954,
												"initialValue": {
													"arguments": [
														{
															"id": 952,
															"name": "digits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 934,
															"src": "827:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 951,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "817:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 950,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "821:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "817:17:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "795:39:7"
											},
											{
												"body": {
													"id": 985,
													"nodeType": "Block",
													"src": "863:131:7",
													"statements": [
														{
															"expression": {
																"id": 960,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 958,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 934,
																	"src": "877:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 959,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "887:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "877:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 961,
															"nodeType": "ExpressionStatement",
															"src": "877:11:7"
														},
														{
															"expression": {
																"id": 979,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 962,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 949,
																		"src": "902:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 964,
																	"indexExpression": {
																		"id": 963,
																		"name": "digits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 934,
																		"src": "909:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "902:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 976,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3438",
																						"id": 969,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "932:2:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 974,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 972,
																									"name": "value",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 917,
																									"src": "945:5:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "%",
																								"rightExpression": {
																									"hexValue": "3130",
																									"id": 973,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "953:2:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_10_by_1",
																										"typeString": "int_const 10"
																									},
																									"value": "10"
																								},
																								"src": "945:10:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 971,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "937:7:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": {
																								"id": 970,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "937:7:7",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 975,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "937:19:7",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "932:24:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 968,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "926:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 967,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "926:5:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 977,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "926:31:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 966,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "919:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 965,
																			"name": "bytes1",
																			"nodeType": "ElementaryTypeName",
																			"src": "919:6:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 978,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "919:39:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "902:56:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 980,
															"nodeType": "ExpressionStatement",
															"src": "902:56:7"
														},
														{
															"expression": {
																"id": 983,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 981,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 917,
																	"src": "972:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 982,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "981:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "972:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 984,
															"nodeType": "ExpressionStatement",
															"src": "972:11:7"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 955,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 917,
														"src": "851:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 956,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "860:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "851:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 986,
												"nodeType": "WhileStatement",
												"src": "844:150:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 989,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 949,
															"src": "1017:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 988,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1010:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 987,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1010:6:7",
															"typeDescriptions": {}
														}
													},
													"id": 990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1010:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 921,
												"id": 991,
												"nodeType": "Return",
												"src": "1003:21:7"
											}
										]
									},
									"documentation": {
										"id": 915,
										"nodeType": "StructuredDocumentation",
										"src": "233:90:7",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 993,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "337:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "354:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "346:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 916,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "346:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "345:15:7"
									},
									"returnParameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "384:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 919,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "384:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "383:15:7"
									},
									"scope": 1111,
									"src": "328:703:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1033,
										"nodeType": "Block",
										"src": "1210:255:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1001,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 996,
														"src": "1224:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1002,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1233:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1224:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1007,
												"nodeType": "IfStatement",
												"src": "1220:54:7",
												"trueBody": {
													"id": 1006,
													"nodeType": "Block",
													"src": "1236:38:7",
													"statements": [
														{
															"expression": {
																"hexValue": "30783030",
																"id": 1004,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1257:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
																	"typeString": "literal_string \"0x00\""
																},
																"value": "0x00"
															},
															"functionReturnParameters": 1000,
															"id": 1005,
															"nodeType": "Return",
															"src": "1250:13:7"
														}
													]
												}
											},
											{
												"assignments": [
													1009
												],
												"declarations": [
													{
														"constant": false,
														"id": 1009,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "1291:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1033,
														"src": "1283:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1008,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1283:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1011,
												"initialValue": {
													"id": 1010,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 996,
													"src": "1298:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1283:20:7"
											},
											{
												"assignments": [
													1013
												],
												"declarations": [
													{
														"constant": false,
														"id": 1013,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "1321:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1033,
														"src": "1313:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1012,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1313:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1015,
												"initialValue": {
													"hexValue": "30",
													"id": 1014,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1330:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1313:18:7"
											},
											{
												"body": {
													"id": 1026,
													"nodeType": "Block",
													"src": "1359:57:7",
													"statements": [
														{
															"expression": {
																"id": 1020,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "1373:8:7",
																"subExpression": {
																	"id": 1019,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1013,
																	"src": "1373:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1021,
															"nodeType": "ExpressionStatement",
															"src": "1373:8:7"
														},
														{
															"expression": {
																"id": 1024,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1022,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1009,
																	"src": "1395:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 1023,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1404:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "1395:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1025,
															"nodeType": "ExpressionStatement",
															"src": "1395:10:7"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1016,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1009,
														"src": "1348:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1017,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1356:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1348:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1027,
												"nodeType": "WhileStatement",
												"src": "1341:75:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1029,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 996,
															"src": "1444:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1030,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1013,
															"src": "1451:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1028,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1034,
															1110
														],
														"referencedDeclaration": 1110,
														"src": "1432:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1031,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1432:26:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1000,
												"id": 1032,
												"nodeType": "Return",
												"src": "1425:33:7"
											}
										]
									},
									"documentation": {
										"id": 994,
										"nodeType": "StructuredDocumentation",
										"src": "1037:94:7",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1034,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1145:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1165:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "1157:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 995,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:15:7"
									},
									"returnParameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "1195:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 998,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1195:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:15:7"
									},
									"scope": 1111,
									"src": "1136:329:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1109,
										"nodeType": "Block",
										"src": "1678:351:7",
										"statements": [
											{
												"assignments": [
													1045
												],
												"declarations": [
													{
														"constant": false,
														"id": 1045,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1701:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1109,
														"src": "1688:19:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1044,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1688:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1054,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1052,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1050,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1048,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1720:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1049,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1039,
																	"src": "1724:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1720:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1051,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1733:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1720:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1047,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1710:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1046,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1714:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1710:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1688:47:7"
											},
											{
												"expression": {
													"id": 1059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1055,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1045,
															"src": "1745:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1057,
														"indexExpression": {
															"hexValue": "30",
															"id": 1056,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1752:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1745:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1058,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1757:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1745:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1060,
												"nodeType": "ExpressionStatement",
												"src": "1745:15:7"
											},
											{
												"expression": {
													"id": 1065,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1061,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1045,
															"src": "1770:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1063,
														"indexExpression": {
															"hexValue": "31",
															"id": 1062,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1777:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1770:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1064,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1782:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "1770:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1066,
												"nodeType": "ExpressionStatement",
												"src": "1770:15:7"
											},
											{
												"body": {
													"id": 1095,
													"nodeType": "Block",
													"src": "1840:87:7",
													"statements": [
														{
															"expression": {
																"id": 1089,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1081,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1045,
																		"src": "1854:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1083,
																	"indexExpression": {
																		"id": 1082,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1068,
																		"src": "1861:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1854:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1084,
																		"name": "_HEX_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 914,
																		"src": "1866:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1088,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1087,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1085,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1037,
																			"src": "1879:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1086,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1887:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "1879:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1866:25:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "1854:37:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1090,
															"nodeType": "ExpressionStatement",
															"src": "1854:37:7"
														},
														{
															"expression": {
																"id": 1093,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1091,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1037,
																	"src": "1905:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1092,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1915:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1905:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1094,
															"nodeType": "ExpressionStatement",
															"src": "1905:11:7"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1075,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1068,
														"src": "1828:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1076,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1832:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1828:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1096,
												"initializationExpression": {
													"assignments": [
														1068
													],
													"declarations": [
														{
															"constant": false,
															"id": 1068,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1808:1:7",
															"nodeType": "VariableDeclaration",
															"scope": 1096,
															"src": "1800:9:7",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1067,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1800:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1074,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1073,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1071,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1069,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1812:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1070,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1039,
																"src": "1816:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1812:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1072,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1825:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1812:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1800:26:7"
												},
												"loopExpression": {
													"expression": {
														"id": 1079,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "1835:3:7",
														"subExpression": {
															"id": 1078,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1068,
															"src": "1837:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1080,
													"nodeType": "ExpressionStatement",
													"src": "1835:3:7"
												},
												"nodeType": "ForStatement",
												"src": "1795:132:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1098,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1037,
																"src": "1944:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1099,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1953:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1944:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 1101,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1956:34:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 1097,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1936:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1936:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1103,
												"nodeType": "ExpressionStatement",
												"src": "1936:55:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1106,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1045,
															"src": "2015:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1105,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2008:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1104,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2008:6:7",
															"typeDescriptions": {}
														}
													},
													"id": 1107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2008:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1043,
												"id": 1108,
												"nodeType": "Return",
												"src": "2001:21:7"
											}
										]
									},
									"documentation": {
										"id": 1035,
										"nodeType": "StructuredDocumentation",
										"src": "1471:112:7",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1597:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1617:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "1609:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1036,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1609:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1632:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "1624:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1038,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1624:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1608:31:7"
									},
									"returnParameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "1663:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1041,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1663:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:15:7"
									},
									"scope": 1111,
									"src": "1588:441:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1112,
							"src": "146:1885:7",
							"usedErrors": []
						}
					],
					"src": "86:1946:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1135
						],
						"IERC165": [
							1147
						]
					},
					"id": 1136,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1113,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1114,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1136,
							"sourceUnit": 1148,
							"src": "124:23:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1116,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1147,
										"src": "754:7:8"
									},
									"id": 1117,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:8"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1115,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:8",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 1135,
							"linearizedBaseContracts": [
								1135,
								1147
							],
							"name": "ERC165",
							"nameLocation": "744:6:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1146
									],
									"body": {
										"id": 1133,
										"nodeType": "Block",
										"src": "920:64:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1126,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1120,
														"src": "937:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1128,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1147,
																	"src": "957:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1147_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1147_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1127,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1129,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1147",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1130,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1125,
												"id": 1132,
												"nodeType": "Return",
												"src": "930:47:8"
											}
										]
									},
									"documentation": {
										"id": 1118,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:8",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1134,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1122,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:8"
									},
									"parameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "856:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1119,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:8"
									},
									"returnParameters": {
										"id": 1125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1124,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "914:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1123,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:8"
									},
									"scope": 1135,
									"src": "829:155:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1136,
							"src": "726:260:8",
							"usedErrors": []
						}
					],
					"src": "99:888:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1147
						]
					},
					"id": 1148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1137,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1138,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:9",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1147,
							"linearizedBaseContracts": [
								1147
							],
							"name": "IERC165",
							"nameLocation": "415:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1139,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:9",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1146,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "801:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1140,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:9"
									},
									"returnParameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1144,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "844:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1143,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:9"
									},
									"scope": 1147,
									"src": "774:76:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1148,
							"src": "405:447:9",
							"usedErrors": []
						}
					],
					"src": "100:753:9"
				},
				"id": 9
			},
			"launchpad/contracts/ILaunchpadMaster.sol": {
				"ast": {
					"absolutePath": "launchpad/contracts/ILaunchpadMaster.sol",
					"exportedSymbols": {
						"ILaunchpadMaster": [
							1186
						]
					},
					"id": 1187,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1149,
							"literals": [
								"solidity",
								"=",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1186,
							"linearizedBaseContracts": [
								1186
							],
							"name": "ILaunchpadMaster",
							"nameLocation": "35:16:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "b1d2ef90",
									"id": 1156,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "saleToSigner",
									"nameLocation": "68:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1151,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "81:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "81:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "80:9:10"
									},
									"returnParameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "112:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "112:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "111:9:10"
									},
									"scope": 1186,
									"src": "59:62:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7e44d2cc",
									"id": 1161,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feesWallet",
									"nameLocation": "135:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "145:2:10"
									},
									"returnParameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "170:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "170:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "169:9:10"
									},
									"scope": 1186,
									"src": "126:53:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dafdeb1a",
									"id": 1168,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addressToSaleId",
									"nameLocation": "193:15:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "209:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "209:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "208:9:10"
									},
									"returnParameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "240:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "240:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "239:9:10"
									},
									"scope": 1186,
									"src": "184:65:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e7689193",
									"id": 1175,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "saleIdToAddress",
									"nameLocation": "263:15:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "279:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "279:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "278:9:10"
									},
									"returnParameters": {
										"id": 1174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "310:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "310:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "309:9:10"
									},
									"scope": 1186,
									"src": "254:65:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "73dc1349",
									"id": 1180,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feesBP",
									"nameLocation": "333:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1176,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "339:2:10"
									},
									"returnParameters": {
										"id": 1179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "364:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "364:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "363:9:10"
									},
									"scope": 1186,
									"src": "324:49:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2e849894",
									"id": 1185,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "currentSaleId",
									"nameLocation": "387:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1181,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "400:2:10"
									},
									"returnParameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "425:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "424:9:10"
									},
									"scope": 1186,
									"src": "378:56:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1187,
							"src": "25:416:10",
							"usedErrors": []
						}
					],
					"src": "0:444:10"
				},
				"id": 10
			},
			"launchpad/contracts/IUniswapV2Factory.sol": {
				"ast": {
					"absolutePath": "launchpad/contracts/IUniswapV2Factory.sol",
					"exportedSymbols": {
						"IUniswapV2Factory": [
							1249
						]
					},
					"id": 1250,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1188,
							"literals": [
								"solidity",
								"=",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1249,
							"linearizedBaseContracts": [
								1249
							],
							"name": "IUniswapV2Factory",
							"nameLocation": "68:17:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 1198,
									"name": "PairCreated",
									"nameLocation": "98:11:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1190,
												"indexed": true,
												"mutability": "mutable",
												"name": "token0",
												"nameLocation": "126:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "110:22:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "110:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1192,
												"indexed": true,
												"mutability": "mutable",
												"name": "token1",
												"nameLocation": "150:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "134:22:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "134:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1194,
												"indexed": false,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "166:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "158:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "158:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1196,
												"indexed": false,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "172:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1195,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "172:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "109:68:11"
									},
									"src": "92:86:11"
								},
								{
									"functionSelector": "017e7e58",
									"id": 1203,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeTo",
									"nameLocation": "193:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "198:2:11"
									},
									"returnParameters": {
										"id": 1202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1203,
												"src": "224:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "224:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "223:9:11"
									},
									"scope": 1249,
									"src": "184:49:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "094b7415",
									"id": 1208,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeToSetter",
									"nameLocation": "247:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1204,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "258:2:11"
									},
									"returnParameters": {
										"id": 1207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1206,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1208,
												"src": "284:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "284:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "283:9:11"
									},
									"scope": 1249,
									"src": "238:55:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e6a43905",
									"id": 1217,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPair",
									"nameLocation": "308:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1210,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "324:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "316:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "316:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "340:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "332:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "332:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "315:32:11"
									},
									"returnParameters": {
										"id": 1216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1215,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "379:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "371:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "371:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "370:14:11"
									},
									"scope": 1249,
									"src": "299:86:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1e3dd18b",
									"id": 1224,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allPairs",
									"nameLocation": "399:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1224,
												"src": "408:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1218,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "408:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "407:6:11"
									},
									"returnParameters": {
										"id": 1223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1222,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "445:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1224,
												"src": "437:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "436:14:11"
									},
									"scope": 1249,
									"src": "390:61:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "574f2ba3",
									"id": 1229,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allPairsLength",
									"nameLocation": "465:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "479:2:11"
									},
									"returnParameters": {
										"id": 1228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1227,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "505:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1226,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "505:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:6:11"
									},
									"scope": 1249,
									"src": "456:55:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c9c65396",
									"id": 1238,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createPair",
									"nameLocation": "526:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "545:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "537:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "537:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "561:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "553:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "553:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "536:32:11"
									},
									"returnParameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "595:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "587:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "587:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "586:14:11"
									},
									"scope": 1249,
									"src": "517:84:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f46901ed",
									"id": 1243,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeTo",
									"nameLocation": "616:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "625:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "625:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "624:9:11"
									},
									"returnParameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "642:0:11"
									},
									"scope": 1249,
									"src": "607:36:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a2e74af6",
									"id": 1248,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeToSetter",
									"nameLocation": "657:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "672:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "672:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "671:9:11"
									},
									"returnParameters": {
										"id": 1247,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "689:0:11"
									},
									"scope": 1249,
									"src": "648:42:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1250,
							"src": "58:634:11",
							"usedErrors": []
						}
					],
					"src": "33:660:11"
				},
				"id": 11
			},
			"launchpad/contracts/IUniswapV2Router.sol": {
				"ast": {
					"absolutePath": "launchpad/contracts/IUniswapV2Router.sol",
					"exportedSymbols": {
						"IUniswapV2Router01": [
							1557
						],
						"IUniswapV2Router02": [
							1642
						]
					},
					"id": 1643,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1251,
							"literals": [
								"solidity",
								"=",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1557,
							"linearizedBaseContracts": [
								1557
							],
							"name": "IUniswapV2Router01",
							"nameLocation": "68:18:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "c45a0155",
									"id": 1256,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "102:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1252,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "109:2:12"
									},
									"returnParameters": {
										"id": 1255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1256,
												"src": "135:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "135:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "134:9:12"
									},
									"scope": 1557,
									"src": "93:51:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad5c4648",
									"id": 1261,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "WETH",
									"nameLocation": "158:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "162:2:12"
									},
									"returnParameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "188:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "188:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "187:9:12"
									},
									"scope": 1557,
									"src": "149:48:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e8e33700",
									"id": 1286,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nameLocation": "212:12:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "242:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "234:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "234:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1265,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "266:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "258:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "258:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "amountADesired",
												"nameLocation": "287:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "282:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1266,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "282:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1269,
												"mutability": "mutable",
												"name": "amountBDesired",
												"nameLocation": "316:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "311:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1268,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "311:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1271,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "345:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "340:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1270,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "340:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "370:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "365:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1272,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "365:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "398:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "390:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "390:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "415:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "410:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1276,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "410:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "224:205:12"
									},
									"returnParameters": {
										"id": 1285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1280,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "453:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "448:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1279,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "448:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1282,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "467:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "462:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1281,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "462:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1284,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "481:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "476:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1283,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "476:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "447:44:12"
									},
									"scope": 1557,
									"src": "203:289:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f305d719",
									"id": 1307,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidityETH",
									"nameLocation": "506:15:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1288,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "539:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "531:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "531:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1290,
												"mutability": "mutable",
												"name": "amountTokenDesired",
												"nameLocation": "559:18:12",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "554:23:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1289,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "554:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1292,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "592:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "587:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1291,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "587:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1294,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "621:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "616:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1293,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "616:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1296,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "651:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "643:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "643:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "668:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "663:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1297,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "663:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "521:161:12"
									},
									"returnParameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1301,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "714:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "709:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1300,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "709:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1303,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "732:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "727:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1302,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "727:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1305,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "748:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "743:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1304,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "743:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:50:12"
									},
									"scope": 1557,
									"src": "497:262:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "baa2abde",
									"id": 1328,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidity",
									"nameLocation": "773:15:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1309,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "806:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1328,
												"src": "798:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1308,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "798:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "830:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1328,
												"src": "822:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1313,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "851:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1328,
												"src": "846:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1312,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "846:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1315,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "875:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 1328,
												"src": "870:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1314,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "870:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1317,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "900:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 1328,
												"src": "895:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1316,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "895:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1319,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "928:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 1328,
												"src": "920:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "920:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1321,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "945:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1328,
												"src": "940:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1320,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "940:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:171:12"
									},
									"returnParameters": {
										"id": 1327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1324,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "983:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1328,
												"src": "978:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1323,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "978:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1326,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "997:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1328,
												"src": "992:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1325,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "992:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "977:28:12"
									},
									"scope": 1557,
									"src": "764:242:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "02751cec",
									"id": 1347,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETH",
									"nameLocation": "1020:18:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1330,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1056:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "1048:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1048:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1332,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1076:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "1071:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1331,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1071:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "1100:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "1095:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1333,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1095:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1336,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "1129:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "1124:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1335,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1124:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1159:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "1151:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1151:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1340,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1176:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "1171:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1339,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1171:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1038:152:12"
									},
									"returnParameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1343,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "1214:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "1209:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1342,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1209:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "1232:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "1227:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1344,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1227:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1208:34:12"
									},
									"scope": 1557,
									"src": "1011:232:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2195995c",
									"id": 1376,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityWithPermit",
									"nameLocation": "1257:25:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1349,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "1300:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1376,
												"src": "1292:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1292:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1351,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "1324:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1376,
												"src": "1316:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1316:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1353,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1345:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1376,
												"src": "1340:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1352,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1340:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1355,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "1369:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 1376,
												"src": "1364:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1354,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1364:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1357,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "1394:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 1376,
												"src": "1389:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1356,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1389:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1359,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1422:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 1376,
												"src": "1414:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1414:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1361,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1439:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1376,
												"src": "1434:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1360,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1434:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1363,
												"mutability": "mutable",
												"name": "approveMax",
												"nameLocation": "1462:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 1376,
												"src": "1457:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1362,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1457:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1480:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1376,
												"src": "1474:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1364,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1474:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1367,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1491:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1376,
												"src": "1483:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1366,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1483:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1369,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1502:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1376,
												"src": "1494:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1368,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1494:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1282:227:12"
									},
									"returnParameters": {
										"id": 1375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1372,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "1533:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1376,
												"src": "1528:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1371,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1528:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1374,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "1547:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1376,
												"src": "1542:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1373,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1542:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1527:28:12"
									},
									"scope": 1557,
									"src": "1248:308:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ded9382a",
									"id": 1403,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHWithPermit",
									"nameLocation": "1570:28:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1616:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1403,
												"src": "1608:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1608:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1636:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1403,
												"src": "1631:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1379,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1631:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "1660:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 1403,
												"src": "1655:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1381,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1655:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "1689:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1403,
												"src": "1684:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1383,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1684:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1719:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 1403,
												"src": "1711:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1388,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1736:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1403,
												"src": "1731:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1387,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1731:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "approveMax",
												"nameLocation": "1759:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 1403,
												"src": "1754:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1389,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1754:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1392,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1777:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1403,
												"src": "1771:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1391,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1771:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1788:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1403,
												"src": "1780:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1393,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1780:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1396,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1799:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1403,
												"src": "1791:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1395,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1791:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1598:208:12"
									},
									"returnParameters": {
										"id": 1402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1399,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "1830:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1403,
												"src": "1825:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1398,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1825:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1401,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "1848:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1403,
												"src": "1843:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1400,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1843:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1824:34:12"
									},
									"scope": 1557,
									"src": "1561:298:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "38ed1739",
									"id": 1420,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokens",
									"nameLocation": "1873:24:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1405,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1912:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1420,
												"src": "1907:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1404,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1907:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1407,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "1935:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1420,
												"src": "1930:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1406,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1930:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1410,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1976:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1420,
												"src": "1957:23:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1408,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1957:7:12",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1409,
													"nodeType": "ArrayTypeName",
													"src": "1957:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1998:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 1420,
												"src": "1990:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1990:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1414,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2015:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1420,
												"src": "2010:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1413,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2010:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1897:132:12"
									},
									"returnParameters": {
										"id": 1419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2062:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1420,
												"src": "2048:21:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1416,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2048:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1417,
													"nodeType": "ArrayTypeName",
													"src": "2048:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2047:23:12"
									},
									"scope": 1557,
									"src": "1864:207:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8803dbee",
									"id": 1437,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokensForExactTokens",
									"nameLocation": "2085:24:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2124:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1437,
												"src": "2119:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1421,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2119:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1424,
												"mutability": "mutable",
												"name": "amountInMax",
												"nameLocation": "2148:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1437,
												"src": "2143:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1423,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2143:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1427,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2188:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1437,
												"src": "2169:23:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1425,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2169:7:12",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1426,
													"nodeType": "ArrayTypeName",
													"src": "2169:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1429,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2210:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 1437,
												"src": "2202:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2202:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1431,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2227:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1437,
												"src": "2222:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1430,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2222:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2109:132:12"
									},
									"returnParameters": {
										"id": 1436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1435,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2274:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1437,
												"src": "2260:21:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1433,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2260:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1434,
													"nodeType": "ArrayTypeName",
													"src": "2260:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2259:23:12"
									},
									"scope": 1557,
									"src": "2076:207:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7ff36ab5",
									"id": 1452,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactETHForTokens",
									"nameLocation": "2297:21:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1439,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "2324:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "2319:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1438,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2319:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1442,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2357:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "2338:23:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1440,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2338:7:12",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1441,
													"nodeType": "ArrayTypeName",
													"src": "2338:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1444,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2371:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "2363:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1443,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2363:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1446,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2380:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "2375:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1445,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2318:71:12"
									},
									"returnParameters": {
										"id": 1451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2454:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "2440:21:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1448,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2440:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1449,
													"nodeType": "ArrayTypeName",
													"src": "2440:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:23:12"
									},
									"scope": 1557,
									"src": "2288:175:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4a25d94a",
									"id": 1469,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokensForExactETH",
									"nameLocation": "2477:21:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2504:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1469,
												"src": "2499:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1453,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2499:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1456,
												"mutability": "mutable",
												"name": "amountInMax",
												"nameLocation": "2520:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1469,
												"src": "2515:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1455,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2515:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1459,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2552:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1469,
												"src": "2533:23:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1457,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2533:7:12",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1458,
													"nodeType": "ArrayTypeName",
													"src": "2533:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1461,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2566:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 1469,
												"src": "2558:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2558:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1463,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2575:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1469,
												"src": "2570:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1462,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2570:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2498:86:12"
									},
									"returnParameters": {
										"id": 1468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1467,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2633:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1469,
												"src": "2619:21:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1465,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2619:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1466,
													"nodeType": "ArrayTypeName",
													"src": "2619:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2618:23:12"
									},
									"scope": 1557,
									"src": "2468:174:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18cbafe5",
									"id": 1486,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForETH",
									"nameLocation": "2656:21:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1471,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2683:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "2678:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1470,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2678:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1473,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "2698:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "2693:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1472,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2693:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1476,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2731:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "2712:23:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1474,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2712:7:12",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1475,
													"nodeType": "ArrayTypeName",
													"src": "2712:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1478,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2745:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "2737:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1477,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1480,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2754:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "2749:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1479,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2749:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2677:86:12"
									},
									"returnParameters": {
										"id": 1485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1484,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2812:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "2798:21:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1482,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2798:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1483,
													"nodeType": "ArrayTypeName",
													"src": "2798:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2797:23:12"
									},
									"scope": 1557,
									"src": "2647:174:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fb3bdb41",
									"id": 1501,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapETHForExactTokens",
									"nameLocation": "2835:21:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1488,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2862:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1501,
												"src": "2857:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1487,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2857:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1491,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2892:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1501,
												"src": "2873:23:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1489,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2873:7:12",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1490,
													"nodeType": "ArrayTypeName",
													"src": "2873:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1493,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2906:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 1501,
												"src": "2898:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2898:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1495,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2915:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1501,
												"src": "2910:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1494,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2910:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2856:68:12"
									},
									"returnParameters": {
										"id": 1500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1499,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2989:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1501,
												"src": "2975:21:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1497,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2975:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1498,
													"nodeType": "ArrayTypeName",
													"src": "2975:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2974:23:12"
									},
									"scope": 1557,
									"src": "2826:172:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad615dec",
									"id": 1512,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quote",
									"nameLocation": "3013:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1503,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "3024:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1512,
												"src": "3019:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1502,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3019:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1505,
												"mutability": "mutable",
												"name": "reserveA",
												"nameLocation": "3038:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1512,
												"src": "3033:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1504,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3033:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1507,
												"mutability": "mutable",
												"name": "reserveB",
												"nameLocation": "3053:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1512,
												"src": "3048:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1506,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3048:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3018:44:12"
									},
									"returnParameters": {
										"id": 1511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1510,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "3091:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1512,
												"src": "3086:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1509,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3086:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3085:14:12"
									},
									"scope": 1557,
									"src": "3004:96:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "054d50d4",
									"id": 1523,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountOut",
									"nameLocation": "3114:12:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1514,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3132:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1523,
												"src": "3127:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1513,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3127:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1516,
												"mutability": "mutable",
												"name": "reserveIn",
												"nameLocation": "3147:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1523,
												"src": "3142:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1515,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3142:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1518,
												"mutability": "mutable",
												"name": "reserveOut",
												"nameLocation": "3163:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 1523,
												"src": "3158:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1517,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3158:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3126:48:12"
									},
									"returnParameters": {
										"id": 1522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1521,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3203:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1523,
												"src": "3198:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1520,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3198:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3197:16:12"
									},
									"scope": 1557,
									"src": "3105:109:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "85f8c259",
									"id": 1534,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountIn",
									"nameLocation": "3228:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1525,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3245:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1534,
												"src": "3240:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1524,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3240:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1527,
												"mutability": "mutable",
												"name": "reserveIn",
												"nameLocation": "3261:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1534,
												"src": "3256:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1526,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3256:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1529,
												"mutability": "mutable",
												"name": "reserveOut",
												"nameLocation": "3277:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 1534,
												"src": "3272:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1528,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3272:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3239:49:12"
									},
									"returnParameters": {
										"id": 1533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1532,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3317:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1534,
												"src": "3312:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1531,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3312:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3311:15:12"
									},
									"scope": 1557,
									"src": "3219:108:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d06ca61f",
									"id": 1545,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsOut",
									"nameLocation": "3341:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1536,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3360:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1545,
												"src": "3355:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1535,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3355:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1539,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "3389:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1545,
												"src": "3370:23:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1537,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3370:7:12",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1538,
													"nodeType": "ArrayTypeName",
													"src": "3370:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3354:40:12"
									},
									"returnParameters": {
										"id": 1544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1543,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "3432:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1545,
												"src": "3418:21:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1541,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "3418:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1542,
													"nodeType": "ArrayTypeName",
													"src": "3418:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3417:23:12"
									},
									"scope": 1557,
									"src": "3332:109:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1f00ca74",
									"id": 1556,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsIn",
									"nameLocation": "3455:12:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1547,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3473:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1556,
												"src": "3468:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1546,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3468:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1550,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "3503:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1556,
												"src": "3484:23:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1548,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3484:7:12",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1549,
													"nodeType": "ArrayTypeName",
													"src": "3484:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3467:41:12"
									},
									"returnParameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1554,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "3546:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1556,
												"src": "3532:21:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1552,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "3532:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1553,
													"nodeType": "ArrayTypeName",
													"src": "3532:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3531:23:12"
									},
									"scope": 1557,
									"src": "3446:109:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1643,
							"src": "58:3499:12",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1558,
										"name": "IUniswapV2Router01",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1557,
										"src": "3622:18:12"
									},
									"id": 1559,
									"nodeType": "InheritanceSpecifier",
									"src": "3622:18:12"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1642,
							"linearizedBaseContracts": [
								1642,
								1557
							],
							"name": "IUniswapV2Router02",
							"nameLocation": "3600:18:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "af2979eb",
									"id": 1576,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHSupportingFeeOnTransferTokens",
									"nameLocation": "3656:47:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1561,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3721:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "3713:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3713:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1563,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "3741:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "3736:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1562,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3736:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1565,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "3765:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "3760:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1564,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3760:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1567,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "3794:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "3789:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1566,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3789:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1569,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3824:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "3816:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1568,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3816:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1571,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3841:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "3836:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1570,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3836:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3703:152:12"
									},
									"returnParameters": {
										"id": 1575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1574,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "3879:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "3874:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1573,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3874:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3873:16:12"
									},
									"scope": 1642,
									"src": "3647:243:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5b0d5984",
									"id": 1601,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens",
									"nameLocation": "3904:57:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1578,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3979:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1601,
												"src": "3971:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3971:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1580,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "3999:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1601,
												"src": "3994:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1579,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3994:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1582,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "4023:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 1601,
												"src": "4018:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1581,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4018:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1584,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "4052:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1601,
												"src": "4047:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1583,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4047:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1586,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4082:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 1601,
												"src": "4074:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4074:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1588,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "4099:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1601,
												"src": "4094:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1587,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4094:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1590,
												"mutability": "mutable",
												"name": "approveMax",
												"nameLocation": "4122:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 1601,
												"src": "4117:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1589,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4117:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1592,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "4140:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1601,
												"src": "4134:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1591,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4134:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1594,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4151:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1601,
												"src": "4143:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1593,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4143:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1596,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "4162:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1601,
												"src": "4154:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1595,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4154:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3961:208:12"
									},
									"returnParameters": {
										"id": 1600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1599,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "4193:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1601,
												"src": "4188:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1598,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4188:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4187:16:12"
									},
									"scope": 1642,
									"src": "3895:309:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5c11d795",
									"id": 1615,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
									"nameLocation": "4219:53:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1603,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "4287:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1615,
												"src": "4282:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1602,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4282:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1605,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "4310:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1615,
												"src": "4305:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1604,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4305:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1608,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "4351:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1615,
												"src": "4332:23:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1606,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4332:7:12",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1607,
													"nodeType": "ArrayTypeName",
													"src": "4332:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1610,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4373:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 1615,
												"src": "4365:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1609,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4365:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1612,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "4390:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1615,
												"src": "4385:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1611,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4385:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4272:132:12"
									},
									"returnParameters": {
										"id": 1614,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4413:0:12"
									},
									"scope": 1642,
									"src": "4210:204:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b6f9de95",
									"id": 1627,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
									"nameLocation": "4428:50:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1617,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "4493:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1627,
												"src": "4488:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1616,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4488:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1620,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "4534:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1627,
												"src": "4515:23:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1618,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4515:7:12",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1619,
													"nodeType": "ArrayTypeName",
													"src": "4515:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1622,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4556:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 1627,
												"src": "4548:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4548:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1624,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "4573:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1627,
												"src": "4568:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1623,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4568:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4478:109:12"
									},
									"returnParameters": {
										"id": 1626,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4604:0:12"
									},
									"scope": 1642,
									"src": "4419:186:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "791ac947",
									"id": 1641,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
									"nameLocation": "4619:50:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1629,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "4684:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1641,
												"src": "4679:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1628,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4679:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1631,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "4707:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1641,
												"src": "4702:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1630,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4702:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1634,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "4748:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1641,
												"src": "4729:23:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1632,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4729:7:12",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1633,
													"nodeType": "ArrayTypeName",
													"src": "4729:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1636,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4770:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 1641,
												"src": "4762:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4762:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1638,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "4787:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1641,
												"src": "4782:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1637,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4782:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4669:132:12"
									},
									"returnParameters": {
										"id": 1640,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4810:0:12"
									},
									"scope": 1642,
									"src": "4610:201:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1643,
							"src": "3590:1223:12",
							"usedErrors": []
						}
					],
					"src": "33:4781:12"
				},
				"id": 12
			},
			"launchpad/contracts/launchpadChild.sol": {
				"ast": {
					"absolutePath": "launchpad/contracts/launchpadChild.sol",
					"exportedSymbols": {
						"AccessControl": [
							308
						],
						"Address": [
							886
						],
						"Context": [
							908
						],
						"ERC165": [
							1135
						],
						"IAccessControl": [
							381
						],
						"IERC165": [
							1147
						],
						"IERC20": [
							591
						],
						"ILaunchpadMaster": [
							1186
						],
						"IUniswapV2Factory": [
							1249
						],
						"IUniswapV2Router01": [
							1557
						],
						"IUniswapV2Router02": [
							1642
						],
						"LaunchpadChild": [
							2593
						],
						"Pausable": [
							473
						],
						"ReentrancyGuard": [
							513
						],
						"Strings": [
							1111
						]
					},
					"id": 2594,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1644,
							"literals": [
								"solidity",
								"=",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:13"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 1645,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2594,
							"sourceUnit": 309,
							"src": "25:58:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 1646,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2594,
							"sourceUnit": 514,
							"src": "84:62:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
							"file": "@openzeppelin/contracts/security/Pausable.sol",
							"id": 1647,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2594,
							"sourceUnit": 474,
							"src": "147:55:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1648,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2594,
							"sourceUnit": 592,
							"src": "203:56:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "@openzeppelin/contracts/utils/Address.sol",
							"id": 1649,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2594,
							"sourceUnit": 887,
							"src": "260:51:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "launchpad/contracts/IUniswapV2Router.sol",
							"file": "./IUniswapV2Router.sol",
							"id": 1650,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2594,
							"sourceUnit": 1643,
							"src": "312:32:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "launchpad/contracts/IUniswapV2Factory.sol",
							"file": "./IUniswapV2Factory.sol",
							"id": 1651,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2594,
							"sourceUnit": 1250,
							"src": "345:33:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "launchpad/contracts/ILaunchpadMaster.sol",
							"file": "./ILaunchpadMaster.sol",
							"id": 1652,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2594,
							"sourceUnit": 1187,
							"src": "379:32:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1653,
										"name": "ReentrancyGuard",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 513,
										"src": "449:15:13"
									},
									"id": 1654,
									"nodeType": "InheritanceSpecifier",
									"src": "449:15:13"
								},
								{
									"baseName": {
										"id": 1655,
										"name": "Pausable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 473,
										"src": "466:8:13"
									},
									"id": 1656,
									"nodeType": "InheritanceSpecifier",
									"src": "466:8:13"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2593,
							"linearizedBaseContracts": [
								2593,
								473,
								908,
								513
							],
							"name": "LaunchpadChild",
							"nameLocation": "431:14:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "83b17fdd",
									"id": 1658,
									"mutability": "mutable",
									"name": "tokenTotalAmount",
									"nameLocation": "506:16:13",
									"nodeType": "VariableDeclaration",
									"scope": 2593,
									"src": "491:31:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1657,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "491:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a0f7ab35",
									"id": 1660,
									"mutability": "mutable",
									"name": "listingTokensPerOneEth",
									"nameLocation": "591:22:13",
									"nodeType": "VariableDeclaration",
									"scope": 2593,
									"src": "576:37:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1659,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "576:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a611dc37",
									"id": 1662,
									"mutability": "mutable",
									"name": "liquidityShareBP",
									"nameLocation": "679:16:13",
									"nodeType": "VariableDeclaration",
									"scope": 2593,
									"src": "664:31:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1661,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "664:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b071cbe6",
									"id": 1664,
									"mutability": "mutable",
									"name": "hardcap",
									"nameLocation": "773:7:13",
									"nodeType": "VariableDeclaration",
									"scope": 2593,
									"src": "758:22:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1663,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "758:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f89be593",
									"id": 1666,
									"mutability": "mutable",
									"name": "softcap",
									"nameLocation": "823:7:13",
									"nodeType": "VariableDeclaration",
									"scope": 2593,
									"src": "808:22:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1665,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "808:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "017f6fae",
									"id": 1668,
									"mutability": "mutable",
									"name": "feeBP",
									"nameLocation": "873:5:13",
									"nodeType": "VariableDeclaration",
									"scope": 2593,
									"src": "858:20:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1667,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "858:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "78e97925",
									"id": 1670,
									"mutability": "mutable",
									"name": "startTime",
									"nameLocation": "932:9:13",
									"nodeType": "VariableDeclaration",
									"scope": 2593,
									"src": "917:24:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1669,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "917:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3197cbb6",
									"id": 1672,
									"mutability": "mutable",
									"name": "endTime",
									"nameLocation": "1005:7:13",
									"nodeType": "VariableDeclaration",
									"scope": 2593,
									"src": "990:22:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1671,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "990:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "be9feb30",
									"id": 1674,
									"mutability": "mutable",
									"name": "wlStartTime",
									"nameLocation": "1074:11:13",
									"nodeType": "VariableDeclaration",
									"scope": 2593,
									"src": "1059:26:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1673,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1059:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c7bf5166",
									"id": 1676,
									"mutability": "mutable",
									"name": "saleTokensPerOneEth",
									"nameLocation": "1159:19:13",
									"nodeType": "VariableDeclaration",
									"scope": 2593,
									"src": "1144:34:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1675,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1144:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4ae01d52",
									"id": 1678,
									"mutability": "mutable",
									"name": "liquidityLockDuration",
									"nameLocation": "1242:21:13",
									"nodeType": "VariableDeclaration",
									"scope": 2593,
									"src": "1227:36:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1677,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1227:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ea44c1bc",
									"id": 1680,
									"mutability": "mutable",
									"name": "userVestDuration",
									"nameLocation": "1343:16:13",
									"nodeType": "VariableDeclaration",
									"scope": 2593,
									"src": "1328:31:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1679,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1328:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "27a72c96",
									"id": 1682,
									"mutability": "mutable",
									"name": "teamVestDuration",
									"nameLocation": "1437:16:13",
									"nodeType": "VariableDeclaration",
									"scope": 2593,
									"src": "1422:31:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1681,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1422:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "de284b3a",
									"id": 1684,
									"mutability": "mutable",
									"name": "maxBuyPerUser",
									"nameLocation": "1532:13:13",
									"nodeType": "VariableDeclaration",
									"scope": 2593,
									"src": "1517:28:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1683,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1517:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "12e409c5",
									"id": 1686,
									"mutability": "mutable",
									"name": "minBuyPerUser",
									"nameLocation": "1600:13:13",
									"nodeType": "VariableDeclaration",
									"scope": 2593,
									"src": "1585:28:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1685,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1585:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "039ce157",
									"id": 1688,
									"mutability": "mutable",
									"name": "tokenAmountForSale",
									"nameLocation": "1668:18:13",
									"nodeType": "VariableDeclaration",
									"scope": 2593,
									"src": "1653:33:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1687,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1653:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6ef2e4d3",
									"id": 1690,
									"mutability": "mutable",
									"name": "tokenAmountForLiquidity",
									"nameLocation": "1746:23:13",
									"nodeType": "VariableDeclaration",
									"scope": 2593,
									"src": "1731:38:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1689,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1731:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d4b9de51",
									"id": 1692,
									"mutability": "mutable",
									"name": "userVestEnabled",
									"nameLocation": "1832:15:13",
									"nodeType": "VariableDeclaration",
									"scope": 2593,
									"src": "1820:27:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1691,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1820:4:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "85bf4946",
									"id": 1694,
									"mutability": "mutable",
									"name": "teamVestEnabled",
									"nameLocation": "1903:15:13",
									"nodeType": "VariableDeclaration",
									"scope": 2593,
									"src": "1891:27:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1693,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1891:4:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "51fb012d",
									"id": 1696,
									"mutability": "mutable",
									"name": "whitelistEnabled",
									"nameLocation": "1973:16:13",
									"nodeType": "VariableDeclaration",
									"scope": 2593,
									"src": "1961:28:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1695,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1961:4:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "27c8f835",
									"id": 1699,
									"mutability": "mutable",
									"name": "deadAddress",
									"nameLocation": "2036:11:13",
									"nodeType": "VariableDeclaration",
									"scope": 2593,
									"src": "2021:71:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1697,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2021:7:13",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303064456144",
										"id": 1698,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2050:42:13",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x000000000000000000000000000000000000dEaD"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "238ac933",
									"id": 1701,
									"mutability": "mutable",
									"name": "signer",
									"nameLocation": "2112:6:13",
									"nodeType": "VariableDeclaration",
									"scope": 2593,
									"src": "2097:21:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1700,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2097:7:13",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ee97f7f3",
									"id": 1704,
									"mutability": "mutable",
									"name": "master",
									"nameLocation": "2196:6:13",
									"nodeType": "VariableDeclaration",
									"scope": 2593,
									"src": "2172:30:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ILaunchpadMaster_$1186",
										"typeString": "contract ILaunchpadMaster"
									},
									"typeName": {
										"id": 1703,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1702,
											"name": "ILaunchpadMaster",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1186,
											"src": "2172:16:13"
										},
										"referencedDeclaration": 1186,
										"src": "2172:16:13",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ILaunchpadMaster_$1186",
											"typeString": "contract ILaunchpadMaster"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f887ea40",
									"id": 1707,
									"mutability": "mutable",
									"name": "router",
									"nameLocation": "2372:6:13",
									"nodeType": "VariableDeclaration",
									"scope": 2593,
									"src": "2346:32:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IUniswapV2Router02_$1642",
										"typeString": "contract IUniswapV2Router02"
									},
									"typeName": {
										"id": 1706,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1705,
											"name": "IUniswapV2Router02",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1642,
											"src": "2346:18:13"
										},
										"referencedDeclaration": 1642,
										"src": "2346:18:13",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV2Router02_$1642",
											"typeString": "contract IUniswapV2Router02"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c45a0155",
									"id": 1710,
									"mutability": "mutable",
									"name": "factory",
									"nameLocation": "2454:7:13",
									"nodeType": "VariableDeclaration",
									"scope": 2593,
									"src": "2429:32:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IUniswapV2Factory_$1249",
										"typeString": "contract IUniswapV2Factory"
									},
									"typeName": {
										"id": 1709,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1708,
											"name": "IUniswapV2Factory",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1249,
											"src": "2429:17:13"
										},
										"referencedDeclaration": 1249,
										"src": "2429:17:13",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV2Factory_$1249",
											"typeString": "contract IUniswapV2Factory"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 1713,
									"mutability": "mutable",
									"name": "token",
									"nameLocation": "2539:5:13",
									"nodeType": "VariableDeclaration",
									"scope": 2593,
									"src": "2525:19:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$591",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1712,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1711,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 591,
											"src": "2525:6:13"
										},
										"referencedDeclaration": 591,
										"src": "2525:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$591",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c84c0387",
									"id": 1715,
									"mutability": "mutable",
									"name": "saleId",
									"nameLocation": "2604:6:13",
									"nodeType": "VariableDeclaration",
									"scope": 2593,
									"src": "2589:21:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1714,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2589:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7284e416",
									"id": 1717,
									"mutability": "mutable",
									"name": "description",
									"nameLocation": "2660:11:13",
									"nodeType": "VariableDeclaration",
									"scope": 2593,
									"src": "2646:25:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1716,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2646:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "aba83150",
									"id": 1719,
									"mutability": "mutable",
									"name": "imageUrl",
									"nameLocation": "2722:8:13",
									"nodeType": "VariableDeclaration",
									"scope": 2593,
									"src": "2708:22:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1718,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2708:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "66d003ac",
									"id": 1721,
									"mutability": "mutable",
									"name": "recipient",
									"nameLocation": "2789:9:13",
									"nodeType": "VariableDeclaration",
									"scope": 2593,
									"src": "2766:32:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 1720,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2766:15:13",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "bca1da85",
									"id": 1723,
									"mutability": "mutable",
									"name": "saleInitiator",
									"nameLocation": "2847:13:13",
									"nodeType": "VariableDeclaration",
									"scope": 2593,
									"src": "2824:36:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 1722,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2824:15:13",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "da2cbd50",
									"id": 1725,
									"mutability": "mutable",
									"name": "totalBuyEth",
									"nameLocation": "2908:11:13",
									"nodeType": "VariableDeclaration",
									"scope": 2593,
									"src": "2893:26:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1724,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2893:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a5f0dea2",
									"id": 1727,
									"mutability": "mutable",
									"name": "saleFinalized",
									"nameLocation": "2975:13:13",
									"nodeType": "VariableDeclaration",
									"scope": 2593,
									"src": "2963:25:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1726,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "2963:4:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9b8906ae",
									"id": 1729,
									"mutability": "mutable",
									"name": "saleEnded",
									"nameLocation": "3037:9:13",
									"nodeType": "VariableDeclaration",
									"scope": 2593,
									"src": "3025:21:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1728,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "3025:4:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "64db812e",
									"id": 1731,
									"mutability": "mutable",
									"name": "saleAborted",
									"nameLocation": "3119:11:13",
									"nodeType": "VariableDeclaration",
									"scope": 2593,
									"src": "3107:23:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1730,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "3107:4:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3c876081",
									"id": 1735,
									"mutability": "mutable",
									"name": "usersVestingWallets",
									"nameLocation": "3242:19:13",
									"nodeType": "VariableDeclaration",
									"scope": 2593,
									"src": "3207:54:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
										"typeString": "mapping(address => address)"
									},
									"typeName": {
										"id": 1734,
										"keyType": {
											"id": 1732,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3215:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "3207:27:13",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
											"typeString": "mapping(address => address)"
										},
										"valueType": {
											"id": 1733,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3226:7:13",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6b7f3df3",
									"id": 1739,
									"mutability": "mutable",
									"name": "userBuyAmount",
									"nameLocation": "3349:13:13",
									"nodeType": "VariableDeclaration",
									"scope": 2593,
									"src": "3314:48:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1738,
										"keyType": {
											"id": 1736,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3322:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "3314:27:13",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 1737,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3333:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 1743,
									"name": "Debug",
									"nameLocation": "3401:5:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1741,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3415:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "3407:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1740,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3407:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3406:16:13"
									},
									"src": "3395:28:13"
								},
								{
									"body": {
										"id": 1958,
										"nodeType": "Block",
										"src": "4043:1920:13",
										"statements": [
											{
												"expression": {
													"id": 1770,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1766,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1713,
														"src": "4065:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$591",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1768,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1745,
																"src": "4080:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1767,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 591,
															"src": "4073:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$591_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1769,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4073:14:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$591",
															"typeString": "contract IERC20"
														}
													},
													"src": "4065:22:13",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$591",
														"typeString": "contract IERC20"
													}
												},
												"id": 1771,
												"nodeType": "ExpressionStatement",
												"src": "4065:22:13"
											},
											{
												"expression": {
													"id": 1774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1772,
														"name": "description",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1717,
														"src": "4093:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1773,
														"name": "_description",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1747,
														"src": "4107:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "4093:26:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1775,
												"nodeType": "ExpressionStatement",
												"src": "4093:26:13"
											},
											{
												"expression": {
													"id": 1778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1776,
														"name": "imageUrl",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1719,
														"src": "4125:8:13",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1777,
														"name": "_imageUrl",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1749,
														"src": "4136:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "4125:20:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1779,
												"nodeType": "ExpressionStatement",
												"src": "4125:20:13"
											},
											{
												"expression": {
													"id": 1784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1780,
														"name": "tokenTotalAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1658,
														"src": "4175:16:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 1781,
															"name": "_saleInputs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1753,
															"src": "4194:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$8_memory_ptr",
																"typeString": "uint256[8] memory"
															}
														},
														"id": 1783,
														"indexExpression": {
															"hexValue": "30",
															"id": 1782,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4206:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4194:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4175:33:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1785,
												"nodeType": "ExpressionStatement",
												"src": "4175:33:13"
											},
											{
												"expression": {
													"id": 1790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1786,
														"name": "listingTokensPerOneEth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1660,
														"src": "4214:22:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 1787,
															"name": "_saleInputs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1753,
															"src": "4239:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$8_memory_ptr",
																"typeString": "uint256[8] memory"
															}
														},
														"id": 1789,
														"indexExpression": {
															"hexValue": "31",
															"id": 1788,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4251:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4239:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4214:39:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1791,
												"nodeType": "ExpressionStatement",
												"src": "4214:39:13"
											},
											{
												"expression": {
													"id": 1796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1792,
														"name": "liquidityShareBP",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1662,
														"src": "4259:16:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 1793,
															"name": "_saleInputs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1753,
															"src": "4278:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$8_memory_ptr",
																"typeString": "uint256[8] memory"
															}
														},
														"id": 1795,
														"indexExpression": {
															"hexValue": "32",
															"id": 1794,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4290:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4278:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4259:33:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1797,
												"nodeType": "ExpressionStatement",
												"src": "4259:33:13"
											},
											{
												"expression": {
													"id": 1802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1798,
														"name": "hardcap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1664,
														"src": "4298:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 1799,
															"name": "_saleInputs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1753,
															"src": "4308:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$8_memory_ptr",
																"typeString": "uint256[8] memory"
															}
														},
														"id": 1801,
														"indexExpression": {
															"hexValue": "33",
															"id": 1800,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4320:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4308:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4298:24:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1803,
												"nodeType": "ExpressionStatement",
												"src": "4298:24:13"
											},
											{
												"expression": {
													"id": 1808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1804,
														"name": "startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1670,
														"src": "4328:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 1805,
															"name": "_saleInputs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1753,
															"src": "4340:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$8_memory_ptr",
																"typeString": "uint256[8] memory"
															}
														},
														"id": 1807,
														"indexExpression": {
															"hexValue": "34",
															"id": 1806,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4352:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4_by_1",
																"typeString": "int_const 4"
															},
															"value": "4"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4340:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4328:26:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1809,
												"nodeType": "ExpressionStatement",
												"src": "4328:26:13"
											},
											{
												"expression": {
													"id": 1814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1810,
														"name": "endTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1672,
														"src": "4360:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 1811,
															"name": "_saleInputs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1753,
															"src": "4370:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$8_memory_ptr",
																"typeString": "uint256[8] memory"
															}
														},
														"id": 1813,
														"indexExpression": {
															"hexValue": "35",
															"id": 1812,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4382:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_5_by_1",
																"typeString": "int_const 5"
															},
															"value": "5"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4370:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4360:24:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1815,
												"nodeType": "ExpressionStatement",
												"src": "4360:24:13"
											},
											{
												"expression": {
													"id": 1820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1816,
														"name": "maxBuyPerUser",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1684,
														"src": "4390:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 1817,
															"name": "_saleInputs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1753,
															"src": "4406:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$8_memory_ptr",
																"typeString": "uint256[8] memory"
															}
														},
														"id": 1819,
														"indexExpression": {
															"hexValue": "36",
															"id": 1818,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4418:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_6_by_1",
																"typeString": "int_const 6"
															},
															"value": "6"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4406:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4390:30:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1821,
												"nodeType": "ExpressionStatement",
												"src": "4390:30:13"
											},
											{
												"expression": {
													"id": 1826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1822,
														"name": "minBuyPerUser",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1686,
														"src": "4426:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 1823,
															"name": "_saleInputs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1753,
															"src": "4442:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$8_memory_ptr",
																"typeString": "uint256[8] memory"
															}
														},
														"id": 1825,
														"indexExpression": {
															"hexValue": "37",
															"id": 1824,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4454:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_7_by_1",
																"typeString": "int_const 7"
															},
															"value": "7"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4442:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4426:30:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1827,
												"nodeType": "ExpressionStatement",
												"src": "4426:30:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1831,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1829,
																"name": "minBuyPerUser",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1686,
																"src": "4470:13:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1830,
																"name": "hardcap",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1664,
																"src": "4486:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4470:23:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6d696e2062757920706572207573657220697320686967686572207468616e2068617264636170",
															"id": 1832,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4495:41:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b253088eb843b61a79d6dacfebf6dd8590800840f2d12dcc8dec83049af7df61",
																"typeString": "literal_string \"min buy per user is higher than hardcap\""
															},
															"value": "min buy per user is higher than hardcap"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b253088eb843b61a79d6dacfebf6dd8590800840f2d12dcc8dec83049af7df61",
																"typeString": "literal_string \"min buy per user is higher than hardcap\""
															}
														],
														"id": 1828,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4462:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4462:75:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1834,
												"nodeType": "ExpressionStatement",
												"src": "4462:75:13"
											},
											{
												"expression": {
													"id": 1840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1835,
														"name": "master",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1704,
														"src": "4544:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ILaunchpadMaster_$1186",
															"typeString": "contract ILaunchpadMaster"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 1837,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4570:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1838,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4570:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1836,
															"name": "ILaunchpadMaster",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1186,
															"src": "4553:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ILaunchpadMaster_$1186_$",
																"typeString": "type(contract ILaunchpadMaster)"
															}
														},
														"id": 1839,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4553:28:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ILaunchpadMaster_$1186",
															"typeString": "contract ILaunchpadMaster"
														}
													},
													"src": "4544:37:13",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ILaunchpadMaster_$1186",
														"typeString": "contract ILaunchpadMaster"
													}
												},
												"id": 1841,
												"nodeType": "ExpressionStatement",
												"src": "4544:37:13"
											},
											{
												"expression": {
													"id": 1846,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1842,
														"name": "feeBP",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1668,
														"src": "4587:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 1843,
																"name": "master",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1704,
																"src": "4595:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ILaunchpadMaster_$1186",
																	"typeString": "contract ILaunchpadMaster"
																}
															},
															"id": 1844,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "feesBP",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1180,
															"src": "4595:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																"typeString": "function () view external returns (uint256)"
															}
														},
														"id": 1845,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4595:15:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4587:23:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1847,
												"nodeType": "ExpressionStatement",
												"src": "4587:23:13"
											},
											{
												"expression": {
													"id": 1861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1848,
														"name": "saleTokensPerOneEth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1676,
														"src": "4617:19:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1860,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1857,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1854,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1849,
																					"name": "tokenTotalAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1658,
																					"src": "4647:16:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1852,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "31305f303030",
																								"id": 1850,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "4667:6:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_10000_by_1",
																									"typeString": "int_const 10000"
																								},
																								"value": "10_000"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "-",
																							"rightExpression": {
																								"id": 1851,
																								"name": "liquidityShareBP",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1662,
																								"src": "4676:16:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "4667:25:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 1853,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "4666:27:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "4647:46:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1855,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "4646:48:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "31305f303030",
																		"id": 1856,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4697:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10000_by_1",
																			"typeString": "int_const 10000"
																		},
																		"value": "10_000"
																	},
																	"src": "4646:57:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1858,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4645:59:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1859,
															"name": "hardcap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1664,
															"src": "4713:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4645:75:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4617:103:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1862,
												"nodeType": "ExpressionStatement",
												"src": "4617:103:13"
											},
											{
												"expression": {
													"id": 1867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1863,
														"name": "softcap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1666,
														"src": "4727:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1866,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1864,
															"name": "hardcap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1664,
															"src": "4737:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 1865,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4747:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "4737:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4727:21:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1868,
												"nodeType": "ExpressionStatement",
												"src": "4727:21:13"
											},
											{
												"expression": {
													"id": 1876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1869,
														"name": "tokenAmountForLiquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1690,
														"src": "4754:23:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1875,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1872,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1870,
																		"name": "tokenTotalAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1658,
																		"src": "4781:16:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1871,
																		"name": "liquidityShareBP",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1662,
																		"src": "4800:16:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4781:35:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1873,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4780:37:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "31305f303030",
															"id": 1874,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4820:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															},
															"value": "10_000"
														},
														"src": "4780:46:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4754:72:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1877,
												"nodeType": "ExpressionStatement",
												"src": "4754:72:13"
											},
											{
												"expression": {
													"id": 1882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1878,
														"name": "tokenAmountForSale",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1688,
														"src": "4832:18:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1881,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1879,
															"name": "tokenTotalAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1658,
															"src": "4853:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1880,
															"name": "tokenAmountForLiquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1690,
															"src": "4872:23:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4853:42:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4832:63:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1883,
												"nodeType": "ExpressionStatement",
												"src": "4832:63:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1898,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1887,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1885,
																	"name": "tokenAmountForLiquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1690,
																	"src": "5066:23:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1886,
																	"name": "listingTokensPerOneEth",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1660,
																	"src": "5092:22:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5066:48:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1896,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1893,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1888,
																						"name": "hardcap",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1664,
																						"src": "5127:7:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1891,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"hexValue": "31305f303030",
																									"id": 1889,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "5138:6:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_10000_by_1",
																										"typeString": "int_const 10000"
																									},
																									"value": "10_000"
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "-",
																								"rightExpression": {
																									"id": 1890,
																									"name": "feeBP",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1668,
																									"src": "5147:5:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "5138:14:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1892,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "5137:16:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "5127:26:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1894,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "5126:28:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"hexValue": "31305f303030",
																			"id": 1895,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5157:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"value": "10_000"
																		},
																		"src": "5126:37:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1897,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5125:39:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5066:98:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f7420656e6f7567682045544820666f72206c69717569646974792c20696e637265617365206c697374696e67207072696365206f72206465637265617365206c6971756964697479207368617265",
															"id": 1899,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5172:82:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fd0d685c1aea5b2037f3c3abd58b011bee2d2bed9ec4cb7b6efa2c3035e44a7f",
																"typeString": "literal_string \"not enough ETH for liquidity, increase listing price or decrease liquidity share\""
															},
															"value": "not enough ETH for liquidity, increase listing price or decrease liquidity share"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fd0d685c1aea5b2037f3c3abd58b011bee2d2bed9ec4cb7b6efa2c3035e44a7f",
																"typeString": "literal_string \"not enough ETH for liquidity, increase listing price or decrease liquidity share\""
															}
														],
														"id": 1884,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5051:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5051:209:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1901,
												"nodeType": "ExpressionStatement",
												"src": "5051:209:13"
											},
											{
												"expression": {
													"id": 1904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1902,
														"name": "liquidityLockDuration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1678,
														"src": "5267:21:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1903,
														"name": "_liquidityLockDuration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1759,
														"src": "5291:22:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5267:46:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1905,
												"nodeType": "ExpressionStatement",
												"src": "5267:46:13"
											},
											{
												"expression": {
													"id": 1908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1906,
														"name": "whitelistEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1696,
														"src": "5534:16:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1907,
														"name": "_whitelistEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1755,
														"src": "5553:17:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5534:36:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1909,
												"nodeType": "ExpressionStatement",
												"src": "5534:36:13"
											},
											{
												"expression": {
													"id": 1912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1910,
														"name": "wlStartTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1674,
														"src": "5576:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1911,
														"name": "_wlStartTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1757,
														"src": "5590:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5576:26:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1913,
												"nodeType": "ExpressionStatement",
												"src": "5576:26:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1917,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1915,
																"name": "wlStartTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1674,
																"src": "5616:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1916,
																"name": "startTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1670,
																"src": "5630:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5616:23:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1914,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5608:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5608:32:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1919,
												"nodeType": "ExpressionStatement",
												"src": "5608:32:13"
											},
											{
												"expression": {
													"id": 1924,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1920,
														"name": "saleId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1715,
														"src": "5647:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 1921,
																"name": "master",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1704,
																"src": "5656:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ILaunchpadMaster_$1186",
																	"typeString": "contract ILaunchpadMaster"
																}
															},
															"id": 1922,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "currentSaleId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1185,
															"src": "5656:20:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																"typeString": "function () view external returns (uint256)"
															}
														},
														"id": 1923,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5656:22:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5647:31:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1925,
												"nodeType": "ExpressionStatement",
												"src": "5647:31:13"
											},
											{
												"condition": {
													"id": 1926,
													"name": "whitelistEnabled",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1696,
													"src": "5689:16:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1935,
												"nodeType": "IfStatement",
												"src": "5685:73:13",
												"trueBody": {
													"id": 1934,
													"nodeType": "Block",
													"src": "5707:51:13",
													"statements": [
														{
															"expression": {
																"id": 1932,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1927,
																	"name": "signer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1701,
																	"src": "5715:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1930,
																			"name": "saleId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1715,
																			"src": "5744:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1928,
																			"name": "master",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1704,
																			"src": "5724:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_ILaunchpadMaster_$1186",
																				"typeString": "contract ILaunchpadMaster"
																			}
																		},
																		"id": 1929,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "saleToSigner",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1156,
																		"src": "5724:19:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
																			"typeString": "function (uint256) view external returns (address)"
																		}
																	},
																	"id": 1931,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5724:27:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "5715:36:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1933,
															"nodeType": "ExpressionStatement",
															"src": "5715:36:13"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1936,
														"name": "recipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1721,
														"src": "5764:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1939,
																		"name": "master",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1704,
																		"src": "5784:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ILaunchpadMaster_$1186",
																			"typeString": "contract ILaunchpadMaster"
																		}
																	},
																	"id": 1940,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "feesWallet",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1161,
																	"src": "5784:17:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																		"typeString": "function () view external returns (address)"
																	}
																},
																"id": 1941,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5784:19:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1938,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5776:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 1937,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5776:8:13",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 1942,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5776:28:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "5764:40:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 1944,
												"nodeType": "ExpressionStatement",
												"src": "5764:40:13"
											},
											{
												"expression": {
													"id": 1950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1945,
														"name": "saleInitiator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1723,
														"src": "5810:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1948,
																"name": "_saleInitiator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1763,
																"src": "5834:14:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1947,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5826:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 1946,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5826:8:13",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 1949,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5826:23:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "5810:39:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 1951,
												"nodeType": "ExpressionStatement",
												"src": "5810:39:13"
											},
											{
												"expression": {
													"id": 1956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1952,
														"name": "router",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1707,
														"src": "5856:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Router02_$1642",
															"typeString": "contract IUniswapV2Router02"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1954,
																"name": "_router",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1761,
																"src": "5884:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1953,
															"name": "IUniswapV2Router02",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1642,
															"src": "5865:18:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IUniswapV2Router02_$1642_$",
																"typeString": "type(contract IUniswapV2Router02)"
															}
														},
														"id": 1955,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5865:27:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Router02_$1642",
															"typeString": "contract IUniswapV2Router02"
														}
													},
													"src": "5856:36:13",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV2Router02_$1642",
														"typeString": "contract IUniswapV2Router02"
													}
												},
												"id": 1957,
												"nodeType": "ExpressionStatement",
												"src": "5856:36:13"
											}
										]
									},
									"id": 1959,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1745,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "3468:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1959,
												"src": "3460:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1744,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3460:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1747,
												"mutability": "mutable",
												"name": "_description",
												"nameLocation": "3494:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 1959,
												"src": "3480:26:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1746,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3480:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1749,
												"mutability": "mutable",
												"name": "_imageUrl",
												"nameLocation": "3526:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 1959,
												"src": "3512:23:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1748,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3512:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1753,
												"mutability": "mutable",
												"name": "_saleInputs",
												"nameLocation": "3700:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 1959,
												"src": "3682:29:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$8_memory_ptr",
													"typeString": "uint256[8]"
												},
												"typeName": {
													"baseType": {
														"id": 1750,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3682:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1752,
													"length": {
														"hexValue": "38",
														"id": 1751,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3690:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_8_by_1",
															"typeString": "int_const 8"
														},
														"value": "8"
													},
													"nodeType": "ArrayTypeName",
													"src": "3682:10:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$8_storage_ptr",
														"typeString": "uint256[8]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1755,
												"mutability": "mutable",
												"name": "_whitelistEnabled",
												"nameLocation": "3910:17:13",
												"nodeType": "VariableDeclaration",
												"scope": 1959,
												"src": "3905:22:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1754,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3905:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1757,
												"mutability": "mutable",
												"name": "_wlStartTime",
												"nameLocation": "3941:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 1959,
												"src": "3933:20:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3933:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1759,
												"mutability": "mutable",
												"name": "_liquidityLockDuration",
												"nameLocation": "3967:22:13",
												"nodeType": "VariableDeclaration",
												"scope": 1959,
												"src": "3959:30:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1758,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3959:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1761,
												"mutability": "mutable",
												"name": "_router",
												"nameLocation": "4003:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1959,
												"src": "3995:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3995:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1763,
												"mutability": "mutable",
												"name": "_saleInitiator",
												"nameLocation": "4024:14:13",
												"nodeType": "VariableDeclaration",
												"scope": 1959,
												"src": "4016:22:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1762,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4016:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3438:604:13"
									},
									"returnParameters": {
										"id": 1765,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4043:0:13"
									},
									"scope": 2593,
									"src": "3427:2536:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1970,
										"nodeType": "Block",
										"src": "6038:85:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1965,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1962,
																"name": "saleInitiator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1723,
																"src": "6052:13:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1963,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "6069:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1964,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "6069:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6052:27:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "63616c6c6572206973206e6f742074686520696e69746961746f72",
															"id": 1966,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6081:29:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9cb0afc8c9b5b9fc27a027f975ade36198094a1ec0c916df62820d443e1a1c77",
																"typeString": "literal_string \"caller is not the initiator\""
															},
															"value": "caller is not the initiator"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9cb0afc8c9b5b9fc27a027f975ade36198094a1ec0c916df62820d443e1a1c77",
																"typeString": "literal_string \"caller is not the initiator\""
															}
														],
														"id": 1961,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6044:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6044:67:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1968,
												"nodeType": "ExpressionStatement",
												"src": "6044:67:13"
											},
											{
												"id": 1969,
												"nodeType": "PlaceholderStatement",
												"src": "6117:1:13"
											}
										]
									},
									"id": 1971,
									"name": "onlyInitiator",
									"nameLocation": "6022:13:13",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1960,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6035:2:13"
									},
									"src": "6013:110:13",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1981,
										"nodeType": "Block",
										"src": "6183:53:13",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1978,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1976,
																"name": "totalBuyEth",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1725,
																"src": "6197:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1977,
																"name": "saleTokensPerOneEth",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1676,
																"src": "6211:19:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6197:33:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1979,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "6196:35:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1975,
												"id": 1980,
												"nodeType": "Return",
												"src": "6189:42:13"
											}
										]
									},
									"functionSelector": "d132a8f4",
									"id": 1982,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalBuyTokens",
									"nameLocation": "6136:14:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1972,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6150:2:13"
									},
									"returnParameters": {
										"id": 1975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1974,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1982,
												"src": "6174:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1973,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6174:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6173:9:13"
									},
									"scope": 2593,
									"src": "6127:109:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2003,
										"nodeType": "Block",
										"src": "6446:137:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1989,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "6460:10:13",
															"subExpression": {
																"id": 1988,
																"name": "saleEnded",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1729,
																"src": "6461:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "636c61696d696e672068617320616c72656164792073746172746564",
															"id": 1990,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6472:30:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b13a5e015676912b1112c867e0dfefd574586eb4bed77e8fcd93eea707633c98",
																"typeString": "literal_string \"claiming has already started\""
															},
															"value": "claiming has already started"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b13a5e015676912b1112c867e0dfefd574586eb4bed77e8fcd93eea707633c98",
																"typeString": "literal_string \"claiming has already started\""
															}
														],
														"id": 1987,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6452:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6452:51:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1992,
												"nodeType": "ExpressionStatement",
												"src": "6452:51:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1995,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "6517:12:13",
															"subExpression": {
																"id": 1994,
																"name": "saleAborted",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1731,
																"src": "6518:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "73616c6520616c72656164792061626f72746564",
															"id": 1996,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6531:22:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24b1a4c6f79d5c5aaa26c5a97ee11271e530551566a6d2db18850d832232b204",
																"typeString": "literal_string \"sale already aborted\""
															},
															"value": "sale already aborted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24b1a4c6f79d5c5aaa26c5a97ee11271e530551566a6d2db18850d832232b204",
																"typeString": "literal_string \"sale already aborted\""
															}
														],
														"id": 1993,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6509:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6509:45:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1998,
												"nodeType": "ExpressionStatement",
												"src": "6509:45:13"
											},
											{
												"expression": {
													"id": 2001,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1999,
														"name": "saleAborted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1731,
														"src": "6560:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2000,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6574:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6560:18:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2002,
												"nodeType": "ExpressionStatement",
												"src": "6560:18:13"
											}
										]
									},
									"functionSelector": "03bcf11d",
									"id": 2004,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1985,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1984,
												"name": "onlyInitiator",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1971,
												"src": "6432:13:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "6432:13:13"
										}
									],
									"name": "abortSale",
									"nameLocation": "6411:9:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1983,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6420:2:13"
									},
									"returnParameters": {
										"id": 1986,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6446:0:13"
									},
									"scope": 2593,
									"src": "6402:181:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2032,
										"nodeType": "Block",
										"src": "6664:256:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2011,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "6720:12:13",
															"subExpression": {
																"id": 2010,
																"name": "saleAborted",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1731,
																"src": "6721:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "73616c65207761732061626f72746564",
															"id": 2012,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6734:18:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c769e5d2e8ac99c64c2d1f0a6746ec097b7e2850242705fdb33d040c4a20431c",
																"typeString": "literal_string \"sale was aborted\""
															},
															"value": "sale was aborted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c769e5d2e8ac99c64c2d1f0a6746ec097b7e2850242705fdb33d040c4a20431c",
																"typeString": "literal_string \"sale was aborted\""
															}
														],
														"id": 2009,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6712:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2013,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6712:41:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2014,
												"nodeType": "ExpressionStatement",
												"src": "6712:41:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2024,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 2020,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "6798:4:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_LaunchpadChild_$2593",
																					"typeString": "contract LaunchpadChild"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_LaunchpadChild_$2593",
																					"typeString": "contract LaunchpadChild"
																				}
																			],
																			"id": 2019,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6790:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2018,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6790:7:13",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2021,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6790:13:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 2016,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1713,
																		"src": "6774:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$591",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 2017,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 530,
																	"src": "6774:15:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 2022,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6774:30:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2023,
																"name": "tokenTotalAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1658,
																"src": "6808:16:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6774:50:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e73756666696369656e7420616d6f756e74206f6620746f6b656e732073656e7420746f207468652061646472657373",
															"id": 2025,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6832:51:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6d2e427d2d5ae0a6a45b02e560a7a3d7bab0f9ccdfa5894afdedfd29b2f6613c",
																"typeString": "literal_string \"insufficient amount of tokens sent to the address\""
															},
															"value": "insufficient amount of tokens sent to the address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6d2e427d2d5ae0a6a45b02e560a7a3d7bab0f9ccdfa5894afdedfd29b2f6613c",
																"typeString": "literal_string \"insufficient amount of tokens sent to the address\""
															}
														],
														"id": 2015,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6759:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2026,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6759:130:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2027,
												"nodeType": "ExpressionStatement",
												"src": "6759:130:13"
											},
											{
												"expression": {
													"id": 2030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2028,
														"name": "saleFinalized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1727,
														"src": "6895:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2029,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6911:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6895:20:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2031,
												"nodeType": "ExpressionStatement",
												"src": "6895:20:13"
											}
										]
									},
									"functionSelector": "58a687ec",
									"id": 2033,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2007,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2006,
												"name": "onlyInitiator",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1971,
												"src": "6650:13:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "6650:13:13"
										}
									],
									"name": "finalizeSale",
									"nameLocation": "6626:12:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2005,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6638:2:13"
									},
									"returnParameters": {
										"id": 2008,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6664:0:13"
									},
									"scope": 2593,
									"src": "6617:303:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2131,
										"nodeType": "Block",
										"src": "6995:822:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2042,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "7009:12:13",
															"subExpression": {
																"id": 2041,
																"name": "saleAborted",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1731,
																"src": "7010:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "73616c65207761732061626f72746564",
															"id": 2043,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7023:18:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c769e5d2e8ac99c64c2d1f0a6746ec097b7e2850242705fdb33d040c4a20431c",
																"typeString": "literal_string \"sale was aborted\""
															},
															"value": "sale was aborted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c769e5d2e8ac99c64c2d1f0a6746ec097b7e2850242705fdb33d040c4a20431c",
																"typeString": "literal_string \"sale was aborted\""
															}
														],
														"id": 2040,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7001:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7001:41:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2045,
												"nodeType": "ExpressionStatement",
												"src": "7001:41:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2047,
															"name": "saleFinalized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1727,
															"src": "7056:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "73616c65206861736e2774206265656e2066696e616c697a656420796574",
															"id": 2048,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7071:32:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_98c86f59fdcbeb736e3b86fd1a71dc66836dfc40e27f24dced2fe4ad98b5863a",
																"typeString": "literal_string \"sale hasn't been finalized yet\""
															},
															"value": "sale hasn't been finalized yet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_98c86f59fdcbeb736e3b86fd1a71dc66836dfc40e27f24dced2fe4ad98b5863a",
																"typeString": "literal_string \"sale hasn't been finalized yet\""
															}
														],
														"id": 2046,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7048:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7048:56:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2050,
												"nodeType": "ExpressionStatement",
												"src": "7048:56:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2055,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2052,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "7118:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 2053,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "7118:15:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2054,
																"name": "startTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1670,
																"src": "7136:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7118:27:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "73616c65206861736e2774207374617274656420796574",
															"id": 2056,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7147:25:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2cc9aeec6e31d1d4d41d3a4052b418ae4d2bf05b728be0f65352a318589e6544",
																"typeString": "literal_string \"sale hasn't started yet\""
															},
															"value": "sale hasn't started yet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2cc9aeec6e31d1d4d41d3a4052b418ae4d2bf05b728be0f65352a318589e6544",
																"typeString": "literal_string \"sale hasn't started yet\""
															}
														],
														"id": 2051,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7110:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7110:63:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2058,
												"nodeType": "ExpressionStatement",
												"src": "7110:63:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2063,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2060,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "7187:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 2061,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "7187:15:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2062,
																"name": "endTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1672,
																"src": "7205:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7187:25:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "73616c652068617320656e646564",
															"id": 2064,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7214:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_910016fcba5f3c495db91eda71589fc5b0e9a221d09feda00eef62020cb88280",
																"typeString": "literal_string \"sale has ended\""
															},
															"value": "sale has ended"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_910016fcba5f3c495db91eda71589fc5b0e9a221d09feda00eef62020cb88280",
																"typeString": "literal_string \"sale has ended\""
															}
														],
														"id": 2059,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7179:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2065,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7179:52:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2066,
												"nodeType": "ExpressionStatement",
												"src": "7179:52:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2076,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2074,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2068,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "7252:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2069,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "7252:9:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"baseExpression": {
																		"id": 2070,
																		"name": "userBuyAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1739,
																		"src": "7264:13:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2073,
																	"indexExpression": {
																		"expression": {
																			"id": 2071,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "7278:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2072,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "7278:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7264:25:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7252:37:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2075,
																"name": "maxBuyPerUser",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1684,
																"src": "7293:13:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7252:54:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "796f7527726520747279696e6720746f2062757920746f6f206d616e7920746f6b656e73",
															"id": 2077,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7314:38:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_990006b6d6b184aa953bccc6f49227f3d19c9361b60f3c8d1011665c9a7f17f6",
																"typeString": "literal_string \"you're trying to buy too many tokens\""
															},
															"value": "you're trying to buy too many tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_990006b6d6b184aa953bccc6f49227f3d19c9361b60f3c8d1011665c9a7f17f6",
																"typeString": "literal_string \"you're trying to buy too many tokens\""
															}
														],
														"id": 2067,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7237:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7237:121:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2079,
												"nodeType": "ExpressionStatement",
												"src": "7237:121:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2084,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2081,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "7372:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2082,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "7372:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2083,
																"name": "minBuyPerUser",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1686,
																"src": "7385:13:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7372:26:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "796f75277265206e6f742073656e64696e6720656e6f756768",
															"id": 2085,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7400:27:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24ce45409782dae9f20878144b76ac5554ba72ec77f6c3e45581ecd8648b50e4",
																"typeString": "literal_string \"you're not sending enough\""
															},
															"value": "you're not sending enough"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24ce45409782dae9f20878144b76ac5554ba72ec77f6c3e45581ecd8648b50e4",
																"typeString": "literal_string \"you're not sending enough\""
															}
														],
														"id": 2080,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7364:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7364:64:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2087,
												"nodeType": "ExpressionStatement",
												"src": "7364:64:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2097,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2095,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2092,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 2089,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "7449:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2090,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "value",
																		"nodeType": "MemberAccess",
																		"src": "7449:9:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2091,
																		"name": "saleTokensPerOneEth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1676,
																		"src": "7461:19:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7449:31:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2093,
																		"name": "totalBuyTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1982,
																		"src": "7483:14:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 2094,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7483:16:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7449:50:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2096,
																"name": "tokenAmountForSale",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1688,
																"src": "7503:18:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7449:72:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7468657265206172656e277420656e6f75676820746f6b656e73206c6566742e205472792061206c6f77657220616d6f756e74",
															"id": 2098,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7529:53:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2a056393c3c4e9b910fc381cd9f3e42169c90d3a34b1ab9e96af9a5e76135932",
																"typeString": "literal_string \"there aren't enough tokens left. Try a lower amount\""
															},
															"value": "there aren't enough tokens left. Try a lower amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2a056393c3c4e9b910fc381cd9f3e42169c90d3a34b1ab9e96af9a5e76135932",
																"typeString": "literal_string \"there aren't enough tokens left. Try a lower amount\""
															}
														],
														"id": 2088,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7434:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7434:154:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2100,
												"nodeType": "ExpressionStatement",
												"src": "7434:154:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2105,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2102,
																	"name": "totalBuyEth",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1725,
																	"src": "7609:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"expression": {
																		"id": 2103,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "7623:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2104,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "7623:9:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7609:23:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2106,
																"name": "hardcap",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1664,
																"src": "7636:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7609:34:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6861726463617020697320726561636865642e205472792061206c6f77657220616d6f756e74",
															"id": 2108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7651:40:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b970a525c25274d556107dbbd3917b840fffe3c64537aa03a137eaaa8ab7c556",
																"typeString": "literal_string \"hardcap is reached. Try a lower amount\""
															},
															"value": "hardcap is reached. Try a lower amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b970a525c25274d556107dbbd3917b840fffe3c64537aa03a137eaaa8ab7c556",
																"typeString": "literal_string \"hardcap is reached. Try a lower amount\""
															}
														],
														"id": 2101,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7594:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7594:103:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2110,
												"nodeType": "ExpressionStatement",
												"src": "7594:103:13"
											},
											{
												"expression": {
													"id": 2122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2111,
															"name": "userBuyAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1739,
															"src": "7704:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2114,
														"indexExpression": {
															"expression": {
																"id": 2112,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7718:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2113,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7718:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7704:25:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2121,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 2115,
																"name": "userBuyAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1739,
																"src": "7732:13:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 2118,
															"indexExpression": {
																"expression": {
																	"id": 2116,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "7746:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "7746:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7732:25:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"expression": {
																"id": 2119,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7760:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "7760:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7732:37:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7704:65:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2123,
												"nodeType": "ExpressionStatement",
												"src": "7704:65:13"
											},
											{
												"expression": {
													"id": 2129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2124,
														"name": "totalBuyEth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1725,
														"src": "7775:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2128,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2125,
															"name": "totalBuyEth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1725,
															"src": "7789:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"expression": {
																"id": 2126,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7803:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2127,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "7803:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7789:23:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7775:37:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2130,
												"nodeType": "ExpressionStatement",
												"src": "7775:37:13"
											}
										]
									},
									"functionSelector": "957f1474",
									"id": 2132,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2036,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2035,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 512,
												"src": "6968:12:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "6968:12:13"
										},
										{
											"id": 2038,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2037,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 429,
												"src": "6981:13:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "6981:13:13"
										}
									],
									"name": "buyTokensPublic",
									"nameLocation": "6933:15:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2034,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6948:2:13"
									},
									"returnParameters": {
										"id": 2039,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6995:0:13"
									},
									"scope": 2593,
									"src": "6924:893:13",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2243,
										"nodeType": "Block",
										"src": "7935:891:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2143,
																	"name": "signature",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2134,
																	"src": "7956:9:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"expression": {
																		"id": 2144,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "7967:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2145,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "7967:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2146,
																	"name": "saleId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1715,
																	"src": "7979:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 2147,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "7987:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 2148,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "chainid",
																	"nodeType": "MemberAccess",
																	"src": "7987:13:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2142,
																"name": "verify",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2307,
																"src": "7949:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (bytes memory,address,uint256,uint256) view returns (bool)"
																}
															},
															"id": 2149,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7949:52:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2141,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7941:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 2150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7941:61:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2151,
												"nodeType": "ExpressionStatement",
												"src": "7941:61:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2154,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "8016:12:13",
															"subExpression": {
																"id": 2153,
																"name": "saleAborted",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1731,
																"src": "8017:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "73616c65207761732061626f72746564",
															"id": 2155,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8030:18:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c769e5d2e8ac99c64c2d1f0a6746ec097b7e2850242705fdb33d040c4a20431c",
																"typeString": "literal_string \"sale was aborted\""
															},
															"value": "sale was aborted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c769e5d2e8ac99c64c2d1f0a6746ec097b7e2850242705fdb33d040c4a20431c",
																"typeString": "literal_string \"sale was aborted\""
															}
														],
														"id": 2152,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8008:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8008:41:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2157,
												"nodeType": "ExpressionStatement",
												"src": "8008:41:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2159,
															"name": "saleFinalized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1727,
															"src": "8063:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "73616c65206861736e2774206265656e2066696e616c697a656420796574",
															"id": 2160,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8078:32:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_98c86f59fdcbeb736e3b86fd1a71dc66836dfc40e27f24dced2fe4ad98b5863a",
																"typeString": "literal_string \"sale hasn't been finalized yet\""
															},
															"value": "sale hasn't been finalized yet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_98c86f59fdcbeb736e3b86fd1a71dc66836dfc40e27f24dced2fe4ad98b5863a",
																"typeString": "literal_string \"sale hasn't been finalized yet\""
															}
														],
														"id": 2158,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8055:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8055:56:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2162,
												"nodeType": "ExpressionStatement",
												"src": "8055:56:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2167,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2164,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "8125:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 2165,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "8125:15:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2166,
																"name": "endTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1672,
																"src": "8143:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8125:25:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "73616c652068617320656e646564",
															"id": 2168,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8152:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_910016fcba5f3c495db91eda71589fc5b0e9a221d09feda00eef62020cb88280",
																"typeString": "literal_string \"sale has ended\""
															},
															"value": "sale has ended"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_910016fcba5f3c495db91eda71589fc5b0e9a221d09feda00eef62020cb88280",
																"typeString": "literal_string \"sale has ended\""
															}
														],
														"id": 2163,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8117:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8117:52:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2170,
												"nodeType": "ExpressionStatement",
												"src": "8117:52:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2175,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2172,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "8183:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 2173,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "8183:15:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2174,
																"name": "wlStartTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1674,
																"src": "8201:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8183:29:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "73616c65206861736e2774207374617274656420796574",
															"id": 2176,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8214:25:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2cc9aeec6e31d1d4d41d3a4052b418ae4d2bf05b728be0f65352a318589e6544",
																"typeString": "literal_string \"sale hasn't started yet\""
															},
															"value": "sale hasn't started yet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2cc9aeec6e31d1d4d41d3a4052b418ae4d2bf05b728be0f65352a318589e6544",
																"typeString": "literal_string \"sale hasn't started yet\""
															}
														],
														"id": 2171,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8175:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8175:65:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2178,
												"nodeType": "ExpressionStatement",
												"src": "8175:65:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2188,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2186,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2180,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "8261:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2181,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "8261:9:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"baseExpression": {
																		"id": 2182,
																		"name": "userBuyAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1739,
																		"src": "8273:13:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2185,
																	"indexExpression": {
																		"expression": {
																			"id": 2183,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "8287:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2184,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "8287:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "8273:25:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8261:37:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2187,
																"name": "maxBuyPerUser",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1684,
																"src": "8302:13:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8261:54:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "796f7527726520747279696e6720746f2062757920746f6f206d616e7920746f6b656e73",
															"id": 2189,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8323:38:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_990006b6d6b184aa953bccc6f49227f3d19c9361b60f3c8d1011665c9a7f17f6",
																"typeString": "literal_string \"you're trying to buy too many tokens\""
															},
															"value": "you're trying to buy too many tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_990006b6d6b184aa953bccc6f49227f3d19c9361b60f3c8d1011665c9a7f17f6",
																"typeString": "literal_string \"you're trying to buy too many tokens\""
															}
														],
														"id": 2179,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8246:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8246:121:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2191,
												"nodeType": "ExpressionStatement",
												"src": "8246:121:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2193,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "8381:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2194,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "8381:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2195,
																"name": "minBuyPerUser",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1686,
																"src": "8394:13:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8381:26:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "796f75277265206e6f742073656e64696e6720656e6f756768",
															"id": 2197,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8409:27:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24ce45409782dae9f20878144b76ac5554ba72ec77f6c3e45581ecd8648b50e4",
																"typeString": "literal_string \"you're not sending enough\""
															},
															"value": "you're not sending enough"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24ce45409782dae9f20878144b76ac5554ba72ec77f6c3e45581ecd8648b50e4",
																"typeString": "literal_string \"you're not sending enough\""
															}
														],
														"id": 2192,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8373:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8373:64:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2199,
												"nodeType": "ExpressionStatement",
												"src": "8373:64:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2207,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2204,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 2201,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "8458:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2202,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "value",
																		"nodeType": "MemberAccess",
																		"src": "8458:9:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2203,
																		"name": "saleTokensPerOneEth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1676,
																		"src": "8470:19:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8458:31:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2205,
																		"name": "totalBuyTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1982,
																		"src": "8492:14:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 2206,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8492:16:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8458:50:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2208,
																"name": "tokenAmountForSale",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1688,
																"src": "8512:18:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8458:72:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7468657265206172656e277420656e6f75676820746f6b656e73206c6566742e205472792061206c6f77657220616d6f756e74",
															"id": 2210,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8538:53:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2a056393c3c4e9b910fc381cd9f3e42169c90d3a34b1ab9e96af9a5e76135932",
																"typeString": "literal_string \"there aren't enough tokens left. Try a lower amount\""
															},
															"value": "there aren't enough tokens left. Try a lower amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2a056393c3c4e9b910fc381cd9f3e42169c90d3a34b1ab9e96af9a5e76135932",
																"typeString": "literal_string \"there aren't enough tokens left. Try a lower amount\""
															}
														],
														"id": 2200,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8443:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8443:154:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2212,
												"nodeType": "ExpressionStatement",
												"src": "8443:154:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2217,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2214,
																	"name": "totalBuyEth",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1725,
																	"src": "8618:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"expression": {
																		"id": 2215,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "8632:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2216,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "8632:9:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8618:23:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2218,
																"name": "hardcap",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1664,
																"src": "8645:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8618:34:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6861726463617020697320726561636865642e205472792061206c6f77657220616d6f756e74",
															"id": 2220,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8660:40:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b970a525c25274d556107dbbd3917b840fffe3c64537aa03a137eaaa8ab7c556",
																"typeString": "literal_string \"hardcap is reached. Try a lower amount\""
															},
															"value": "hardcap is reached. Try a lower amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b970a525c25274d556107dbbd3917b840fffe3c64537aa03a137eaaa8ab7c556",
																"typeString": "literal_string \"hardcap is reached. Try a lower amount\""
															}
														],
														"id": 2213,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8603:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8603:103:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2222,
												"nodeType": "ExpressionStatement",
												"src": "8603:103:13"
											},
											{
												"expression": {
													"id": 2234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2223,
															"name": "userBuyAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1739,
															"src": "8713:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2226,
														"indexExpression": {
															"expression": {
																"id": 2224,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8727:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2225,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8727:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8713:25:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2233,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 2227,
																"name": "userBuyAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1739,
																"src": "8741:13:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 2230,
															"indexExpression": {
																"expression": {
																	"id": 2228,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "8755:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2229,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "8755:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8741:25:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"expression": {
																"id": 2231,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8769:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2232,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "8769:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8741:37:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8713:65:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2235,
												"nodeType": "ExpressionStatement",
												"src": "8713:65:13"
											},
											{
												"expression": {
													"id": 2241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2236,
														"name": "totalBuyEth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1725,
														"src": "8784:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2240,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2237,
															"name": "totalBuyEth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1725,
															"src": "8798:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"expression": {
																"id": 2238,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8812:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2239,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "8812:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8798:23:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8784:37:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2242,
												"nodeType": "ExpressionStatement",
												"src": "8784:37:13"
											}
										]
									},
									"functionSelector": "59663174",
									"id": 2244,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2137,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2136,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 512,
												"src": "7902:12:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "7902:12:13"
										},
										{
											"id": 2139,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2138,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 429,
												"src": "7919:13:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "7919:13:13"
										}
									],
									"name": "buyTokensWhitelist",
									"nameLocation": "7830:18:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2134,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "7862:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 2244,
												"src": "7849:22:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2133,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7849:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7848:24:13"
									},
									"returnParameters": {
										"id": 2140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7935:0:13"
									},
									"scope": 2593,
									"src": "7821:1005:13",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2306,
										"nodeType": "Block",
										"src": "8969:342:13",
										"statements": [
											{
												"assignments": [
													2258
												],
												"declarations": [
													{
														"constant": false,
														"id": 2258,
														"mutability": "mutable",
														"name": "v",
														"nameLocation": "8981:1:13",
														"nodeType": "VariableDeclaration",
														"scope": 2306,
														"src": "8975:7:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 2257,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "8975:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2259,
												"nodeType": "VariableDeclarationStatement",
												"src": "8975:7:13"
											},
											{
												"assignments": [
													2261
												],
												"declarations": [
													{
														"constant": false,
														"id": 2261,
														"mutability": "mutable",
														"name": "r",
														"nameLocation": "8996:1:13",
														"nodeType": "VariableDeclaration",
														"scope": 2306,
														"src": "8988:9:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2260,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "8988:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2262,
												"nodeType": "VariableDeclarationStatement",
												"src": "8988:9:13"
											},
											{
												"assignments": [
													2264
												],
												"declarations": [
													{
														"constant": false,
														"id": 2264,
														"mutability": "mutable",
														"name": "s",
														"nameLocation": "9011:1:13",
														"nodeType": "VariableDeclaration",
														"scope": 2306,
														"src": "9003:9:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2263,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "9003:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2265,
												"nodeType": "VariableDeclarationStatement",
												"src": "9003:9:13"
											},
											{
												"expression": {
													"id": 2273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 2266,
																"name": "v",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2258,
																"src": "9020:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															{
																"id": 2267,
																"name": "r",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2261,
																"src": "9023:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 2268,
																"name": "s",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2264,
																"src": "9026:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"id": 2269,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "9019:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint8_$_t_bytes32_$_t_bytes32_$",
															"typeString": "tuple(uint8,bytes32,bytes32)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2271,
																"name": "signature",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2246,
																"src": "9046:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 2270,
															"name": "splitSignature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2341,
															"src": "9031:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint8_$_t_bytes32_$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (uint8,bytes32,bytes32)"
															}
														},
														"id": 2272,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9031:25:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint8_$_t_bytes32_$_t_bytes32_$",
															"typeString": "tuple(uint8,bytes32,bytes32)"
														}
													},
													"src": "9019:37:13",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2274,
												"nodeType": "ExpressionStatement",
												"src": "9019:37:13"
											},
											{
												"assignments": [
													2276
												],
												"declarations": [
													{
														"constant": false,
														"id": 2276,
														"mutability": "mutable",
														"name": "payloadHash",
														"nameLocation": "9071:11:13",
														"nodeType": "VariableDeclaration",
														"scope": 2306,
														"src": "9063:19:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2275,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "9063:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2285,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2280,
																	"name": "_target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2248,
																	"src": "9113:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2281,
																	"name": "_saleId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2250,
																	"src": "9122:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2282,
																	"name": "_chainId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2252,
																	"src": "9131:8:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2278,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "9102:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2279,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "9102:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2283,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9102:38:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2277,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "9085:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 2284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9085:61:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9063:83:13"
											},
											{
												"assignments": [
													2287
												],
												"declarations": [
													{
														"constant": false,
														"id": 2287,
														"mutability": "mutable",
														"name": "messageHash",
														"nameLocation": "9161:11:13",
														"nodeType": "VariableDeclaration",
														"scope": 2306,
														"src": "9153:19:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2286,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "9153:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2295,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332",
																	"id": 2291,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9202:34:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""
																	},
																	"value": "\u0019Ethereum Signed Message:\n32"
																},
																{
																	"id": 2292,
																	"name": "payloadHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2276,
																	"src": "9238:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 2289,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "9185:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2290,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "9185:16:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2293,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9185:65:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2288,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "9175:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 2294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9175:76:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9153:98:13"
											},
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2303,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2296,
																"name": "signer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1701,
																"src": "9264:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 2298,
																		"name": "messageHash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2287,
																		"src": "9284:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 2299,
																		"name": "v",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2258,
																		"src": "9297:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	{
																		"id": 2300,
																		"name": "r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2261,
																		"src": "9300:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 2301,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2264,
																		"src": "9303:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 2297,
																	"name": "ecrecover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967290,
																	"src": "9274:9:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
																		"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
																	}
																},
																"id": 2302,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9274:31:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9264:41:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 2304,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "9263:43:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2256,
												"id": 2305,
												"nodeType": "Return",
												"src": "9257:49:13"
											}
										]
									},
									"functionSelector": "e49dce66",
									"id": 2307,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verify",
									"nameLocation": "8839:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2246,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "8864:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 2307,
												"src": "8851:22:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2245,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8851:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2248,
												"mutability": "mutable",
												"name": "_target",
												"nameLocation": "8887:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2307,
												"src": "8879:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8879:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2250,
												"mutability": "mutable",
												"name": "_saleId",
												"nameLocation": "8908:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2307,
												"src": "8900:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8900:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2252,
												"mutability": "mutable",
												"name": "_chainId",
												"nameLocation": "8929:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2307,
												"src": "8921:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8921:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8845:96:13"
									},
									"returnParameters": {
										"id": 2256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2255,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2307,
												"src": "8963:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2254,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8963:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8962:6:13"
									},
									"scope": 2593,
									"src": "8830:481:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2340,
										"nodeType": "Block",
										"src": "9441:355:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2322,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2319,
																	"name": "sig",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2309,
																	"src": "9455:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 2320,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "9455:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "3635",
																"id": 2321,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9469:2:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_65_by_1",
																	"typeString": "int_const 65"
																},
																"value": "65"
															},
															"src": "9455:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2318,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9447:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 2323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9447:25:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2324,
												"nodeType": "ExpressionStatement",
												"src": "9447:25:13"
											},
											{
												"assignments": [
													2326
												],
												"declarations": [
													{
														"constant": false,
														"id": 2326,
														"mutability": "mutable",
														"name": "r",
														"nameLocation": "9487:1:13",
														"nodeType": "VariableDeclaration",
														"scope": 2340,
														"src": "9479:9:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2325,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "9479:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2327,
												"nodeType": "VariableDeclarationStatement",
												"src": "9479:9:13"
											},
											{
												"assignments": [
													2329
												],
												"declarations": [
													{
														"constant": false,
														"id": 2329,
														"mutability": "mutable",
														"name": "s",
														"nameLocation": "9502:1:13",
														"nodeType": "VariableDeclaration",
														"scope": 2340,
														"src": "9494:9:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2328,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "9494:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2330,
												"nodeType": "VariableDeclarationStatement",
												"src": "9494:9:13"
											},
											{
												"assignments": [
													2332
												],
												"declarations": [
													{
														"constant": false,
														"id": 2332,
														"mutability": "mutable",
														"name": "v",
														"nameLocation": "9515:1:13",
														"nodeType": "VariableDeclaration",
														"scope": 2340,
														"src": "9509:7:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 2331,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "9509:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2333,
												"nodeType": "VariableDeclarationStatement",
												"src": "9509:7:13"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "9532:237:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9589:24:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "sig",
																				"nodeType": "YulIdentifier",
																				"src": "9604:3:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9609:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9600:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9600:12:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9594:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9594:19:13"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "9589:1:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9645:24:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "sig",
																				"nodeType": "YulIdentifier",
																				"src": "9660:3:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9665:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9656:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9656:12:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9650:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9650:19:13"
															},
															"variableNames": [
																{
																	"name": "s",
																	"nodeType": "YulIdentifier",
																	"src": "9645:1:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9730:33:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9740:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "sig",
																						"nodeType": "YulIdentifier",
																						"src": "9753:3:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9758:2:13",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9749:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9749:12:13"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "9743:5:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9743:19:13"
																	}
																],
																"functionName": {
																	"name": "byte",
																	"nodeType": "YulIdentifier",
																	"src": "9735:4:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9735:28:13"
															},
															"variableNames": [
																{
																	"name": "v",
																	"nodeType": "YulIdentifier",
																	"src": "9730:1:13"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2326,
														"isOffset": false,
														"isSlot": false,
														"src": "9589:1:13",
														"valueSize": 1
													},
													{
														"declaration": 2329,
														"isOffset": false,
														"isSlot": false,
														"src": "9645:1:13",
														"valueSize": 1
													},
													{
														"declaration": 2309,
														"isOffset": false,
														"isSlot": false,
														"src": "9604:3:13",
														"valueSize": 1
													},
													{
														"declaration": 2309,
														"isOffset": false,
														"isSlot": false,
														"src": "9660:3:13",
														"valueSize": 1
													},
													{
														"declaration": 2309,
														"isOffset": false,
														"isSlot": false,
														"src": "9753:3:13",
														"valueSize": 1
													},
													{
														"declaration": 2332,
														"isOffset": false,
														"isSlot": false,
														"src": "9730:1:13",
														"valueSize": 1
													}
												],
												"id": 2334,
												"nodeType": "InlineAssembly",
												"src": "9523:246:13"
											},
											{
												"expression": {
													"components": [
														{
															"id": 2335,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2332,
															"src": "9783:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 2336,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2326,
															"src": "9786:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2337,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2329,
															"src": "9789:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"id": 2338,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "9782:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint8_$_t_bytes32_$_t_bytes32_$",
														"typeString": "tuple(uint8,bytes32,bytes32)"
													}
												},
												"functionReturnParameters": 2317,
												"id": 2339,
												"nodeType": "Return",
												"src": "9775:16:13"
											}
										]
									},
									"functionSelector": "a7bb5803",
									"id": 2341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "splitSignature",
									"nameLocation": "9324:14:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2309,
												"mutability": "mutable",
												"name": "sig",
												"nameLocation": "9352:3:13",
												"nodeType": "VariableDeclaration",
												"scope": 2341,
												"src": "9339:16:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2308,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9339:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9338:18:13"
									},
									"returnParameters": {
										"id": 2317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2341,
												"src": "9397:5:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2311,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "9397:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2314,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2341,
												"src": "9410:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2313,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "9410:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2316,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2341,
												"src": "9425:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2315,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "9425:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9389:49:13"
									},
									"scope": 2593,
									"src": "9315:481:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2395,
										"nodeType": "Block",
										"src": "9845:440:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2348,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "9866:12:13",
															"subExpression": {
																"id": 2347,
																"name": "saleAborted",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1731,
																"src": "9867:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "73616c65207761732061626f727465642c20706c656173652075736520636c61696d5374616c6545746828292066756e6374696f6e",
															"id": 2349,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9886:55:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c28b289d97fe6866e9d13a7bc6018754aac608e30a3bf1ece8ce7995bd4c3efd",
																"typeString": "literal_string \"sale was aborted, please use claimStaleEth() function\""
															},
															"value": "sale was aborted, please use claimStaleEth() function"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c28b289d97fe6866e9d13a7bc6018754aac608e30a3bf1ece8ce7995bd4c3efd",
																"typeString": "literal_string \"sale was aborted, please use claimStaleEth() function\""
															}
														],
														"id": 2346,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9851:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9851:96:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2351,
												"nodeType": "ExpressionStatement",
												"src": "9851:96:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2358,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 2353,
																	"name": "userBuyAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1739,
																	"src": "9961:13:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2356,
																"indexExpression": {
																	"expression": {
																		"id": 2354,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "9975:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2355,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "9975:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9961:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2357,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9989:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9961:29:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "75736572206861736e277420616e7920746f6b656e7320746f20636c61696d",
															"id": 2359,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9992:33:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_141451834b4f73e4445d82a62172036d5b5d5eb658e8bd5bcc3cd7764faaeb1c",
																"typeString": "literal_string \"user hasn't any tokens to claim\""
															},
															"value": "user hasn't any tokens to claim"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_141451834b4f73e4445d82a62172036d5b5d5eb658e8bd5bcc3cd7764faaeb1c",
																"typeString": "literal_string \"user hasn't any tokens to claim\""
															}
														],
														"id": 2352,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9953:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9953:73:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2361,
												"nodeType": "ExpressionStatement",
												"src": "9953:73:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2363,
															"name": "saleEnded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1729,
															"src": "10040:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e69746961746f72206861736e277420656e646564207468652073616c6520796574",
															"id": 2364,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10051:37:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e902201ab37430ad12a93efaf7ddb5a5c942f73b571ab342d42adac578a3cc74",
																"typeString": "literal_string \"initiator hasn't ended the sale yet\""
															},
															"value": "initiator hasn't ended the sale yet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e902201ab37430ad12a93efaf7ddb5a5c942f73b571ab342d42adac578a3cc74",
																"typeString": "literal_string \"initiator hasn't ended the sale yet\""
															}
														],
														"id": 2362,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10032:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10032:57:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2366,
												"nodeType": "ExpressionStatement",
												"src": "10032:57:13"
											},
											{
												"assignments": [
													2368
												],
												"declarations": [
													{
														"constant": false,
														"id": 2368,
														"mutability": "mutable",
														"name": "amountToClaim",
														"nameLocation": "10104:13:13",
														"nodeType": "VariableDeclaration",
														"scope": 2395,
														"src": "10096:21:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2367,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10096:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2375,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 2369,
															"name": "userBuyAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1739,
															"src": "10120:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2372,
														"indexExpression": {
															"expression": {
																"id": 2370,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10134:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10134:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "10120:25:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 2373,
														"name": "saleTokensPerOneEth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1676,
														"src": "10148:19:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10120:47:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10096:71:13"
											},
											{
												"expression": {
													"id": 2381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2376,
															"name": "userBuyAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1739,
															"src": "10173:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2379,
														"indexExpression": {
															"expression": {
																"id": 2377,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10187:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10187:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10173:25:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2380,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10201:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "10173:29:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2382,
												"nodeType": "ExpressionStatement",
												"src": "10173:29:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2384,
															"name": "amountToClaim",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2368,
															"src": "10219:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2383,
														"name": "Debug",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1743,
														"src": "10213:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10213:20:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2386,
												"nodeType": "EmitStatement",
												"src": "10208:25:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2390,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10254:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2391,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10254:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2392,
															"name": "amountToClaim",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2368,
															"src": "10266:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2387,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1713,
															"src": "10239:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$591",
																"typeString": "contract IERC20"
															}
														},
														"id": 2389,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 540,
														"src": "10239:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 2393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10239:41:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2394,
												"nodeType": "ExpressionStatement",
												"src": "10239:41:13"
											}
										]
									},
									"functionSelector": "48c54b9d",
									"id": 2396,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2344,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2343,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 512,
												"src": "9832:12:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "9832:12:13"
										}
									],
									"name": "claimTokens",
									"nameLocation": "9809:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9820:2:13"
									},
									"returnParameters": {
										"id": 2345,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9845:0:13"
									},
									"scope": 2593,
									"src": "9800:485:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2441,
										"nodeType": "Block",
										"src": "10444:537:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2403,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "10458:10:13",
															"subExpression": {
																"id": 2402,
																"name": "saleEnded",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1729,
																"src": "10459:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "73616c6520686173206265656e20656e646564203a20796f752063616e20636c61696d",
															"id": 2404,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10470:37:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_aa45f346974086e46ef8ac721d9f9594dcbc7cbd93c8f7b95ee484df37242b90",
																"typeString": "literal_string \"sale has been ended : you can claim\""
															},
															"value": "sale has been ended : you can claim"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_aa45f346974086e46ef8ac721d9f9594dcbc7cbd93c8f7b95ee484df37242b90",
																"typeString": "literal_string \"sale has been ended : you can claim\""
															}
														],
														"id": 2401,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10450:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10450:58:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2406,
												"nodeType": "ExpressionStatement",
												"src": "10450:58:13"
											},
											{
												"condition": {
													"id": 2407,
													"name": "saleAborted",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1731,
													"src": "10578:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2412,
												"nodeType": "IfStatement",
												"src": "10574:48:13",
												"trueBody": {
													"id": 2411,
													"nodeType": "Block",
													"src": "10591:31:13",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2408,
																	"name": "_claimStaleEth",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2480,
																	"src": "10599:14:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 2409,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10599:16:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2410,
															"nodeType": "ExpressionStatement",
															"src": "10599:16:13"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2415,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2413,
															"name": "totalBuyEth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1725,
															"src": "10711:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2414,
															"name": "softcap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1666,
															"src": "10725:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "10711:21:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2419,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 2416,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "10736:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2417,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "10736:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2418,
															"name": "endTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1672,
															"src": "10754:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "10736:25:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "10711:50:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2425,
												"nodeType": "IfStatement",
												"src": "10707:87:13",
												"trueBody": {
													"id": 2424,
													"nodeType": "Block",
													"src": "10763:31:13",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2421,
																	"name": "_claimStaleEth",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2480,
																	"src": "10771:14:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 2422,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10771:16:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2423,
															"nodeType": "ExpressionStatement",
															"src": "10771:16:13"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2428,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2426,
															"name": "totalBuyEth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1725,
															"src": "10886:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2427,
															"name": "softcap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1666,
															"src": "10900:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "10886:21:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 2429,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "10911:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "10911:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2431,
																"name": "endTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1672,
																"src": "10929:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "3836343030",
																"id": 2432,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10939:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_86400_by_1",
																	"typeString": "int_const 86400"
																},
																"value": "86400"
															},
															"src": "10929:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "10911:33:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "10886:58:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2440,
												"nodeType": "IfStatement",
												"src": "10882:95:13",
												"trueBody": {
													"id": 2439,
													"nodeType": "Block",
													"src": "10946:31:13",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2436,
																	"name": "_claimStaleEth",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2480,
																	"src": "10954:14:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 2437,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10954:16:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2438,
															"nodeType": "ExpressionStatement",
															"src": "10954:16:13"
														}
													]
												}
											}
										]
									},
									"functionSelector": "8f5d036b",
									"id": 2442,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2399,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2398,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 512,
												"src": "10431:12:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "10431:12:13"
										}
									],
									"name": "claimStaleEth",
									"nameLocation": "10406:13:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2397,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10419:2:13"
									},
									"returnParameters": {
										"id": 2400,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10444:0:13"
									},
									"scope": 2593,
									"src": "10397:584:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2479,
										"nodeType": "Block",
										"src": "11019:221:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2451,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 2446,
																	"name": "userBuyAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1739,
																	"src": "11033:13:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2449,
																"indexExpression": {
																	"expression": {
																		"id": 2447,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "11047:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2448,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "11047:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11033:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2450,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11033:29:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "75736572206861736e277420616e7920746f6b656e7320746f20636c61696d",
															"id": 2452,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11064:33:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_141451834b4f73e4445d82a62172036d5b5d5eb658e8bd5bcc3cd7764faaeb1c",
																"typeString": "literal_string \"user hasn't any tokens to claim\""
															},
															"value": "user hasn't any tokens to claim"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_141451834b4f73e4445d82a62172036d5b5d5eb658e8bd5bcc3cd7764faaeb1c",
																"typeString": "literal_string \"user hasn't any tokens to claim\""
															}
														],
														"id": 2445,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11025:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11025:73:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2454,
												"nodeType": "ExpressionStatement",
												"src": "11025:73:13"
											},
											{
												"assignments": [
													2456
												],
												"declarations": [
													{
														"constant": false,
														"id": 2456,
														"mutability": "mutable",
														"name": "amountToClaim",
														"nameLocation": "11112:13:13",
														"nodeType": "VariableDeclaration",
														"scope": 2479,
														"src": "11104:21:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2455,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11104:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2461,
												"initialValue": {
													"baseExpression": {
														"id": 2457,
														"name": "userBuyAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1739,
														"src": "11128:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 2460,
													"indexExpression": {
														"expression": {
															"id": 2458,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "11142:3:13",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2459,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "11142:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11128:25:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11104:49:13"
											},
											{
												"expression": {
													"id": 2467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2462,
															"name": "userBuyAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1739,
															"src": "11159:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2465,
														"indexExpression": {
															"expression": {
																"id": 2463,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "11173:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2464,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "11173:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11159:25:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2466,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11187:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "11159:29:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2468,
												"nodeType": "ExpressionStatement",
												"src": "11159:29:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "",
															"id": 2476,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11232:2:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"expression": {
																	"id": 2469,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "11194:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2472,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "11194:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "11194:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 2475,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 2474,
																"name": "amountToClaim",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2456,
																"src": "11217:13:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "11194:37:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11194:41:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"id": 2478,
												"nodeType": "ExpressionStatement",
												"src": "11194:41:13"
											}
										]
									},
									"id": 2480,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_claimStaleEth",
									"nameLocation": "10994:14:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2443,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11008:2:13"
									},
									"returnParameters": {
										"id": 2444,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11019:0:13"
									},
									"scope": 2593,
									"src": "10985:255:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2591,
										"nodeType": "Block",
										"src": "11527:904:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2489,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "11541:12:13",
															"subExpression": {
																"id": 2488,
																"name": "saleAborted",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1731,
																"src": "11542:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "73616c65207761732061626f72746564",
															"id": 2490,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11555:18:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c769e5d2e8ac99c64c2d1f0a6746ec097b7e2850242705fdb33d040c4a20431c",
																"typeString": "literal_string \"sale was aborted\""
															},
															"value": "sale was aborted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c769e5d2e8ac99c64c2d1f0a6746ec097b7e2850242705fdb33d040c4a20431c",
																"typeString": "literal_string \"sale was aborted\""
															}
														],
														"id": 2487,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11533:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11533:41:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2492,
												"nodeType": "ExpressionStatement",
												"src": "11533:41:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2494,
															"name": "saleFinalized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1727,
															"src": "11588:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "73616c65207761736e27742066696e616c697a6564",
															"id": 2495,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11603:23:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ae2f0be3c86f1f4c70b5b8e37f9dfeccf0055bff7f58990234fe3c550983b010",
																"typeString": "literal_string \"sale wasn't finalized\""
															},
															"value": "sale wasn't finalized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ae2f0be3c86f1f4c70b5b8e37f9dfeccf0055bff7f58990234fe3c550983b010",
																"typeString": "literal_string \"sale wasn't finalized\""
															}
														],
														"id": 2493,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11580:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11580:47:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2497,
												"nodeType": "ExpressionStatement",
												"src": "11580:47:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2499,
																"name": "totalBuyEth",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1725,
																"src": "11641:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2500,
																"name": "softcap",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1666,
																"src": "11655:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11641:21:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f7420656e6f75676820746f6b656e73207765726520736f6c64",
															"id": 2502,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11664:29:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e1b18e3606be74dd019e19c6aa57e7f5fabee4053ce559a76c27104271c860aa",
																"typeString": "literal_string \"not enough tokens were sold\""
															},
															"value": "not enough tokens were sold"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e1b18e3606be74dd019e19c6aa57e7f5fabee4053ce559a76c27104271c860aa",
																"typeString": "literal_string \"not enough tokens were sold\""
															}
														],
														"id": 2498,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11633:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11633:61:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2504,
												"nodeType": "ExpressionStatement",
												"src": "11633:61:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2507,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "11708:10:13",
															"subExpression": {
																"id": 2506,
																"name": "saleEnded",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1729,
																"src": "11709:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "73616c652077617320616c726561647920656e646564",
															"id": 2508,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11720:24:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7fe6eaeacd817413cd3d644dc731083134b7fd2481c312560441d9626d1702a2",
																"typeString": "literal_string \"sale was already ended\""
															},
															"value": "sale was already ended"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7fe6eaeacd817413cd3d644dc731083134b7fd2481c312560441d9626d1702a2",
																"typeString": "literal_string \"sale was already ended\""
															}
														],
														"id": 2505,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11700:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11700:45:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2510,
												"nodeType": "ExpressionStatement",
												"src": "11700:45:13"
											},
											{
												"expression": {
													"id": 2513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2511,
														"name": "saleEnded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1729,
														"src": "11752:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2512,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11764:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "11752:16:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2514,
												"nodeType": "ExpressionStatement",
												"src": "11752:16:13"
											},
											{
												"assignments": [
													2516
												],
												"declarations": [
													{
														"constant": false,
														"id": 2516,
														"mutability": "mutable",
														"name": "ethAmountForLiquidity",
														"nameLocation": "11818:21:13",
														"nodeType": "VariableDeclaration",
														"scope": 2591,
														"src": "11810:29:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2515,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11810:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2521,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2517,
															"name": "totalBuyTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1982,
															"src": "11842:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 2518,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11842:16:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 2519,
														"name": "listingTokensPerOneEth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1660,
														"src": "11861:22:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11842:41:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11810:73:13"
											},
											{
												"assignments": [
													2523
												],
												"declarations": [
													{
														"constant": false,
														"id": 2523,
														"mutability": "mutable",
														"name": "actualTokenAmountForLiquidity",
														"nameLocation": "11946:29:13",
														"nodeType": "VariableDeclaration",
														"scope": 2591,
														"src": "11938:37:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2522,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11938:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2530,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2526,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2524,
																	"name": "tokenAmountForLiquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1690,
																	"src": "11979:23:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2525,
																	"name": "totalBuyEth",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1725,
																	"src": "12011:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11979:43:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2527,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "11978:45:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 2528,
														"name": "hardcap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1664,
														"src": "12026:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11978:55:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11938:95:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2536,
																	"name": "router",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1707,
																	"src": "12062:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$1642",
																		"typeString": "contract IUniswapV2Router02"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$1642",
																		"typeString": "contract IUniswapV2Router02"
																	}
																],
																"id": 2535,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12054:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2534,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12054:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 2537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12054:15:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2538,
															"name": "actualTokenAmountForLiquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2523,
															"src": "12071:29:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2531,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1713,
															"src": "12040:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$591",
																"typeString": "contract IERC20"
															}
														},
														"id": 2533,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 560,
														"src": "12040:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 2539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12040:61:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2540,
												"nodeType": "ExpressionStatement",
												"src": "12040:61:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2548,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1713,
																	"src": "12175:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$591",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$591",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 2547,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12167:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2546,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12167:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 2549,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12167:14:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2550,
															"name": "actualTokenAmountForLiquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2523,
															"src": "12189:29:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 2551,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12226:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "30",
															"id": 2552,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12235:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"arguments": [
																{
																	"id": 2555,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "12252:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LaunchpadChild_$2593",
																		"typeString": "contract LaunchpadChild"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LaunchpadChild_$2593",
																		"typeString": "contract LaunchpadChild"
																	}
																],
																"id": 2554,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12244:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2553,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12244:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 2556,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12244:13:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2560,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2557,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "12265:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 2558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "12265:15:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31303030",
																"id": 2559,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12283:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000_by_1",
																	"typeString": "int_const 1000"
																},
																"value": "1000"
															},
															"src": "12265:22:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2541,
																"name": "router",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1707,
																"src": "12107:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUniswapV2Router02_$1642",
																	"typeString": "contract IUniswapV2Router02"
																}
															},
															"id": 2543,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "addLiquidityETH",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1307,
															"src": "12107:22:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
																"typeString": "function (address,uint256,uint256,uint256,address,uint256) payable external returns (uint256,uint256,uint256)"
															}
														},
														"id": 2545,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 2544,
																"name": "ethAmountForLiquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2516,
																"src": "12137:21:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "12107:52:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$value",
															"typeString": "function (address,uint256,uint256,uint256,address,uint256) payable external returns (uint256,uint256,uint256)"
														}
													},
													"id": 2561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12107:186:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256)"
													}
												},
												"id": 2562,
												"nodeType": "ExpressionStatement",
												"src": "12107:186:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "",
															"id": 2576,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12365:2:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 2563,
																		"name": "master",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1704,
																		"src": "12299:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ILaunchpadMaster_$1186",
																			"typeString": "contract ILaunchpadMaster"
																		}
																	},
																	"id": 2565,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "feesWallet",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1161,
																	"src": "12299:17:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																		"typeString": "function () view external returns (address)"
																	}
																},
																"id": 2566,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12299:19:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2567,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "12299:24:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 2575,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2570,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2568,
																						"name": "totalBuyEth",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1725,
																						"src": "12333:11:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2569,
																						"name": "feeBP",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1668,
																						"src": "12347:5:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12333:19:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 2571,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "12332:21:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"hexValue": "31305f303030",
																			"id": 2572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12356:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"value": "10_000"
																		},
																		"src": "12332:30:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2574,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12331:32:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "12299:65:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12299:69:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"id": 2578,
												"nodeType": "ExpressionStatement",
												"src": "12299:69:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "",
															"id": 2588,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12423:2:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 2579,
																"name": "saleInitiator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1723,
																"src": "12374:13:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 2581,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "12374:18:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 2587,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 2584,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "12408:4:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_LaunchpadChild_$2593",
																				"typeString": "contract LaunchpadChild"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_LaunchpadChild_$2593",
																				"typeString": "contract LaunchpadChild"
																			}
																		],
																		"id": 2583,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "12400:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2582,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "12400:7:13",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2585,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12400:13:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 2586,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "12400:21:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "12374:48:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12374:52:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"id": 2590,
												"nodeType": "ExpressionStatement",
												"src": "12374:52:13"
											}
										]
									},
									"functionSelector": "201a3419",
									"id": 2592,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2483,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2482,
												"name": "onlyInitiator",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1971,
												"src": "11500:13:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "11500:13:13"
										},
										{
											"id": 2485,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2484,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 512,
												"src": "11514:12:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "11514:12:13"
										}
									],
									"name": "endSaleAllowClaim",
									"nameLocation": "11471:17:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2481,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11488:2:13"
									},
									"returnParameters": {
										"id": 2486,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11527:0:13"
									},
									"scope": 2593,
									"src": "11462:969:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2594,
							"src": "422:12011:13",
							"usedErrors": []
						}
					],
					"src": "0:12434:13"
				},
				"id": 13
			}
		}
	}
}